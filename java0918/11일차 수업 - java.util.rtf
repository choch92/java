{\rtf1\ansi\ansicpg949\cocoartf1671\cocoasubrtf500
{\fonttbl\f0\fnil\fcharset129 NanumMyeongjo;}
{\colortbl;\red255\green255\blue255;\red251\green0\blue7;\red25\green60\blue255;\red127\green0\blue85;
\red106\green62\blue62;\red63\green127\blue95;\red42\green0\blue255;\red0\green0\blue192;\red63\green95\blue191;
\red63\green127\blue95;\red0\green200\blue125;\red63\green95\blue191;\red94\green176\blue32;\red123\green221\blue55;
\red64\green118\blue25;\red251\green0\blue7;}
{\*\expandedcolortbl;;\cssrgb\c99893\c12008\c0;\cssrgb\c12594\c35385\c100000;\csgenericrgb\c49804\c0\c33333;
\csgenericrgb\c41569\c24314\c24314;\csgenericrgb\c24706\c49804\c37255;\csgenericrgb\c16471\c0\c100000;\csgenericrgb\c0\c0\c75294;\csgenericrgb\c24706\c37255\c74902;
\csgenericrgb\c24706\c49804\c37255;\csgenericrgb\c0\c78431\c49020;\csgenericrgb\c24706\c37255\c74902;\cssrgb\c43067\c72927\c16222;\cssrgb\c54133\c87606\c27652;
\cssrgb\c30912\c52771\c12623;\cssrgb\c99893\c12008\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww14600\viewh16560\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 11\'c0\'cf\'c2\'f7(cho)\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
** List \'b1\'b8\'c1\'b6\
\
3. \cf2 \ul \ulc2 Stack : java.util.stack(\'c1\'df\'bf\'e4) - \'c5\'ac\'b7\'a1\'bd\'ba\cf0 \ulnone \
\
=> LIFO(Last In First Out) : \'b8\'b6\'c1\'f6\'b8\'b7\'bf\'a1 \'bb\'f0\'c0\'d4\'c7\'d1 \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 \'b8\'d5\'c0\'fa \'c3\'e2\'b7\'c2\'b5\'c7\'b4\'c2 \'c0\'da\'b7\'e1\'b1\'b8\'c1\'b6\
=> \'bb\'f0\'c0\'d4\'b0\'fa \'bb\'e8\'c1\'a6\'b0\'a1 Top\'c0\'cc\'b6\'f3\'b4\'c2 \'c6\'f7\'c0\'ce\'c5\'cd\'bf\'a1\'bc\'ad \'bc\'f6\'c7\'e0\
=> \'bb\'f0\'c0\'d4\'c7\'cf\'b4\'c2 \'b5\'bf\'c0\'db\'c0\'bb push \'b6\'f3\'b0\'ed \'c7\'cf\'b0\'ed \'b2\'a8\'b3\'bb\'b4\'c2 \'b5\'bf\'c0\'db\'c0\'bb pop \'c0\'cc\'b6\'f3\'b0\'ed \'c7\'d5\'b4\'cf\'b4\'d9.\
=> \'b8\'de\'bc\'d2\'b5\'e5\'b0\'a1 \'c8\'a3\'c3\'e2\'b5\'c9 \'b6\'a7 \'c7\'d2\'b4\'e7\'b9\'de\'b4\'c2 \'b8\'de\'b8\'f0\'b8\'ae\'c0\'c7 \'c0\'da\'b7\'e1\'b1\'b8\'c1\'b6\'c0\'cc\'b8\'e7 \'c0\'db\'be\'f7 \'b3\'bb\'bf\'aa\'c0\'bb \'c0\'fa\'c0\'e5\'c7\'cf\'b4\'c2 \'bf\'eb\'b5\'b5\'b7\'ce \'bb\'e7\'bf\'eb\'c7\'cf\'b8\'e9 \'c1\'c1\'bd\'c0\'b4\'cf\'b4\'d9.\
\'c0\'db\'be\'f7 \'c3\'eb\'bc\'d2\'b8\'a6 \'c7\'d2 \'b6\'a7 \'b0\'a1\'c0\'e5 \'b0\'a1\'b1\'ee\'c0\'cc\'bf\'a1 \'c0\'d6\'b4\'c2 \'c0\'db\'be\'f7\'c0\'bb \'c3\'eb\'bc\'d2\'c7\'cf\'b1\'e2 \'b6\'a7\'b9\'ae\'c0\'d4\'b4\'cf\'b4\'d9.\
=> \'b8\'de\'bc\'d2\'b5\'e5(\'c7\'d4\'bc\'f6)\'b0\'a1 \'bd\'c7\'c7\'e0\'b5\'c9 \'b6\'a7 \'c7\'cf\'b3\'aa\'c0\'c7 Stack\'c0\'bb \'c7\'d2\'b4\'e7\'b9\'de\'be\'c6\'bc\'ad \'bd\'c7\'c7\'e0\'b5\'ca\
=> \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5\'bf\'a1\'bc\'ad\'b4\'c2 \'c0\'db\'be\'f7\'b3\'bb\'bf\'aa\'c0\'bb \'c0\'fa\'c0\'e5\'c7\'cf\'b4\'c2 \'bf\'eb\'b5\'b5\'b7\'ce \'bb\'e7\'bf\'eb \'b0\'a1\'b4\'c9\
=> java \'bf\'a1\'bc\'ad\'b4\'c2 java.util.Stack \'c0\'cc\'b6\'f3\'b4\'c2 \'c5\'ac\'b7\'a1\'bd\'ba\'b7\'ce \'c1\'a6\'b0\'f8\
=> Stack\'c0\'c7 index.html\'bf\'a1\'bc\'ad \'bb\'ec\'c6\'ec\'ba\'b8\'b8\'e9 peek \'b4\'c2 \'b0\'a1\'c0\'e5 \'b8\'b6\'c1\'f6\'b8\'b7 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c1\'f6\'bf\'ec\'c1\'f6 \'be\'ca\'b0\'ed \'b8\'ae\'c5\'cf\'c7\'cf\'b4\'c2 \'b8\'de\'bc\'d2\'b5\'e5\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 4. Queue : java.util.Queue - \'c0\'ce\'c5\'cd\'c6\'e4\'c0\'cc\'bd\'ba\
\
=> FIFO(First In First Out) : \'b8\'d5\'c0\'fa \'bb\'f0\'c0\'d4\'c7\'d1 \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 \'b8\'d5\'c0\'fa \'c3\'e2\'b7\'c2\'b5\'c7\'b4\'c2 \'c0\'da\'b7\'e1\'b1\'b8\'c1\'b6\
=> \'bb\'f0\'c0\'d4\'c7\'cf\'b4\'c2 \'b5\'bf\'c0\'db\'c0\'bb push\'b6\'f3\'b0\'ed \'c7\'cf\'b1\'e2\'b5\'b5 \'c7\'cf\'b0\'ed add\'b6\'f3\'b0\'ed \'c7\'cf\'b1\'e2\'b5\'b5 \'c7\'d5\'b4\'cf\'b4\'d9.\
=> \'b2\'a8\'b3\'bb\'b4\'c2 \'b5\'bf\'c0\'db\'c0\'ba Pop\'c0\'cc\'b3\'aa Peek\'b8\'a6 \'c0\'cc\'bf\'eb\'c7\'d5\'b4\'cf\'b4\'d9.\
=> \'bb\'f0\'c0\'d4\'b0\'fa \'bb\'e8\'c1\'a6\'b0\'a1 \'b9\'dd\'b4\'eb\'b9\'e6\'c7\'e2\'bf\'a1\'bc\'ad \'bc\'f6\'c7\'e0\'b5\'ca\
=> \'bf\'ee\'bf\'b5\'c3\'bc\'c1\'a6\'c0\'c7 \'bd\'ba\'c4\'c9\'c1\'ec\'b8\'b5\'bf\'a1 \'c0\'cc\'bf\'eb, \'c0\'db\'be\'f7\'c0\'c7 \'bc\'f8\'bc\'ad\'b8\'a6 \'c0\'fa\'c0\'e5\'c7\'cf\'b4\'c2 \'bf\'eb\'b5\'b5\'b7\'ce \'bb\'e7\'bf\'eb\
=> PriorityQueue(\'bf\'ec\'bc\'b1\'bc\'f8\'c0\'a7 \'c5\'a5) \'c5\'ac\'b7\'a1\'bd\'ba\'bf\'a1 \'b1\'b8\'c7\'f6\
=> java \'bf\'a1\'bc\'ad\'b4\'c2 java.util.Queue \'b6\'f3\'b4\'c2 \'c0\'ce\'c5\'cd\'c6\'e4\'c0\'cc\'bd\'ba\'b8\'a6 \'c1\'a6\'b0\'f8\'c7\'cf\'b0\'ed \'c0\'cc\'b8\'a6 \'b1\'b8\'c7\'f6\'c7\'d1 \'c5\'ac\'b7\'a1\'bd\'ba\'b7\'ce LinkedList\'bf\'cd PriorityQueue\'b0\'a1 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\
=> \'c0\'db\'be\'f7\'c0\'c7 \'bc\'f8\'bc\'ad\'b8\'a6 \'c0\'fa\'c0\'e5\'c7\'d2 \'b6\'a7 \'b8\'b9\'c0\'cc \'bb\'e7\'bf\'eb\'c7\'d5\'b4\'cf\'b4\'d9.\
=> \'b0\'f8\'c0\'e5 \'c0\'da\'b5\'bf\'c8\'ad \'b0\'b0\'c0\'ba \'b0\'f7\'bf\'a1\'bc\'ad \'b8\'b9\'c0\'cc \'c0\'cc\'bf\'eb\'c7\'d5\'b4\'cf\'b4\'d9.\
\
5. Deque\
\
=> \'be\'e7\'c2\'ca\'bf\'a1\'bc\'ad \'bb\'f0\'c0\'d4\'b0\'fa \'bb\'e8\'c1\'a6\'b8\'a6 \'c7\'d2 \'bc\'f6 \'c0\'d6\'b4\'c2 \'c0\'da\'b7\'e1\'b1\'b8\'c1\'b6\
=> \'bc\'bc\'b7\'ce\'b9\'e6\'c7\'e2\'c0\'b8\'b7\'ce \'b3\'aa\'b4\'a9\'b8\'e9 Stack\'c0\'cc \'b5\'c7\'b0\'ed \'b0\'a1\'b7\'ce \'b9\'e6\'c7\'e2\'c0\'b8\'b7\'ce \'b3\'aa\'b4\'a9\'b8\'e9 Queue\'b0\'a1 \'b5\'cb\'b4\'cf\'b4\'d9.\
=> java \'bf\'a1\'bc\'ad\'b4\'c2 java.util.Deque\'b6\'f3\'b4\'c2 \'c0\'ce\'c5\'cd\'c6\'e4\'c0\'cc\'bd\'ba\'b7\'ce \'c1\'a6\'b0\'f8\'c7\'cf\'b0\'ed ArrayDeque\'b6\'f3\'b4\'c2 \'c5\'ac\'b7\'a1\'bd\'ba\'b0\'a1 Deque\'b8\'a6 implements \'c7\'d1 \'c5\'ac\'b7\'a1\'bd\'ba \'c0\'d4\'b4\'cf\'b4\'d9.\
=> \'bb\'f0\'c0\'d4\'c7\'cf\'b4\'c2 \'b8\'de\'bc\'d2\'b5\'e5\'b0\'a1 2\'b0\'a1\'c1\'f6(\cf3 \'be\'d5\'bf\'a1 \'bb\'f0\'c0\'d4\'c7\'cf\'b4\'c2 \'b8\'de\'bc\'d2\'b5\'e5 - push \'bf\'cd \'b5\'da\'bf\'a1 \'bb\'f0\'c0\'d4\'c7\'cf\'b4\'c2 \'b8\'de\'bc\'d2\'b5\'e5 - add\cf0 )\'c0\'cc\'b0\'ed\
\'b2\'a8\'b3\'bb\'b4\'c2 \'b8\'de\'bc\'d2\'b5\'e5\'b5\'b5 2\'b0\'a1\'c1\'f6(\cf3 \'be\'d5\'bf\'a1\'bc\'ad \'b2\'a8\'b3\'bb\'b4\'c2 \'b8\'de\'bc\'d2\'b5\'e5 - poll \'bf\'cd \'b5\'da\'bf\'a1\'bc\'ad \'b2\'a8\'b3\'bb\'b4\'c2 \'b8\'de\'bc\'d2\'b5\'e5 -pop\cf0 ) \'c0\'d4\'b4\'cf\'b4\'d9.\
=> \'bb\'e7\'bf\'eb\'c7\'cf\'b4\'c2 \'b0\'f7\'c0\'ba GUI \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'bf\'a1\'bc\'ad \'bd\'ba\'c5\'a9\'b7\'d1\'bf\'a1 \'c0\'cc\'bf\'eb\'c7\'d5\'b4\'cf\'b4\'d9.\
\'bd\'ba\'c5\'a9\'b7\'d1\'c0\'ba \'be\'e7\'b9\'e6\'c7\'e2 \'b8\'f0\'b5\'ce \'b0\'a1\'b4\'c9\'c7\'d8\'be\'df \'c7\'d5\'b4\'cf\'b4\'d9.\
\'bd\'ba\'b8\'b6\'c6\'ae \'c6\'f9\'bf\'a1\'bc\'ad\'b4\'c2 \'b5\'a5\'c0\'cc\'c5\'cd \'c3\'e2\'b7\'c2\'bf\'a1 \'c0\'cc\'bf\'eb\'c7\'cf\'b4\'c2 ListView \'b3\'aa MapView, WebView \'b5\'ee\'bf\'a1 \'c0\'cc\'bf\'eb\'c7\'d5\'b4\'cf\'b4\'d9.\
\
** \'c0\'da\'b7\'e1\'b1\'b8\'c1\'b6 \'b0\'f8\'ba\'ce\'b8\'a6 \'c7\'d2 \'b6\'a7\'b4\'c2 Queue \'b3\'aa Deque\'b7\'ce \'be\'cb\'be\'c6\'be\'df \'c7\'cf\'b0\'ed, Java Programming\'b8\'b8 \'c7\'d1\'b4\'d9\'b0\'ed \'c7\'d2 \'b6\'a7\'b4\'c2 \'b1\'b8\'c7\'f6\'b5\'c8 \'c5\'ac\'b7\'a1\'bd\'ba \'c0\'cc\'b8\'a7\'c0\'bb \'b1\'e2\'be\'ef\'c7\'d8\'be\'df \'c7\'d4.\
\
\'bd\'c7\'bd\'c0)\
\pard\pardeftab720\partightenfactor0
\cf4 package\cf0  datastructure;\
\cf4 import\cf0  java.util.LinkedList;\
\cf4 import\cf0  java.util.PriorityQueue;\
\cf4 import\cf0  java.util.Stack;\
\cf4 public\cf0  \cf4 class\cf0  ListMain \{\
\
	\cf4 public\cf0  \cf4 static\cf0  \cf4 void\cf0  main(String[] \cf5 args\cf0 ) \{\
		\cf6 // \'b9\'ae\'c0\'da\'bf\'ad\'c0\'bb \'c0\'fa\'c0\'e5\'c7\'cf\'b4\'c2 Stack\'c0\'bb \'bb\'fd\'bc\'ba\cf0 \
		Stack<String> \cf5 stack\cf0  = \cf4 new\cf0  Stack<>();\
		\cf6 // \'b5\'a5\'c0\'cc\'c5\'cd \'bb\'f0\'c0\'d4\'c0\'ba push\cf0 \
		\cf5 stack\cf0 .push(\cf7 "\'bb\'f6\'bb\'f3 \'ba\'b8\'c1\'a4"\cf0 );\
		\cf5 stack\cf0 .push(\cf7 "\'b7\'b9\'c0\'cc\'be\'ee \'c3\'df\'b0\'a1"\cf0 );\
\
		\cf6 // \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'bb\'e8\'c1\'a6\'c7\'cf\'b8\'e9\'bc\'ad \'b0\'a1\'c1\'ae\'bf\'c0\'b1\'e2\'b4\'c2 pop\cf0 \
		String \cf5 new_data\cf0  = \cf5 stack\cf0 .pop();\
		System.\cf8 out\cf0 .printf(\cf7 "%s\\n"\cf0 , \cf5 new_data\cf0 );\
		\cf6 // pop \'b4\'eb\'bd\'c5\'bf\'a1 peek\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'b8\'e9 2\'b0\'b3\'c0\'c7 \'b0\'e1\'b0\'fa\'b0\'a1 \'b5\'bf\'c0\'cf\cf0 \
		\cf5 new_data\cf0  = \cf5 stack\cf0 .peek();\
		System.\cf8 out\cf0 .printf(\cf7 "%s\\n"\cf0 , \cf5 new_data\cf0 );\
		\
		\cf6 // \'bd\'e1\'c1\'ae\'c0\'d6\'b4\'c2 \'bc\'f8\'bc\'ad\'b4\'eb\'b7\'ce \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c0\'fa\'c0\'e5\'c7\'cf\'b4\'c2 List\cf0 \
		LinkedList<String> \cf5 li\cf0  = \cf4 new\cf0  LinkedList<>();\
		\cf5 li\cf0 .add(\cf7 "170"\cf0 );\
		\cf5 li\cf0 .add(\cf7 "98"\cf0 );\
		\cf5 li\cf0 .add(\cf7 "105"\cf0 );\
		\cf6 // LinkedList\'b4\'c2 \'bc\'f8\'bc\'ad\'b4\'eb\'b7\'ce \'c3\'e2\'b7\'c2\cf0 \
		\cf4 for\cf0  (String \cf5 temp\cf0  : \cf5 li\cf0 ) \{\
			System.\cf8 out\cf0 .printf(\cf7 "%s\\t"\cf0 , \cf5 temp\cf0 );\
		\}\
		System.\cf8 out\cf0 .printf(\cf7 "\\n===================\\n"\cf0 );\
		\
		\cf6 // \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b8\'a6 \'b0\'a1\'c1\'f6\'b0\'ed \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c0\'fa\'c0\'e5\'c7\'cf\'b4\'c2 \'c5\'a5\cf0 \
		PriorityQueue<String> \cf5 pr\cf0  = \cf4 new\cf0  PriorityQueue<>();\
		\cf5 pr\cf0 .add(\cf7 "170"\cf0 );\
		\cf5 pr\cf0 .add(\cf7 "98"\cf0 );\
		\cf5 pr\cf0 .add(\cf7 "105"\cf0 );\
		\cf6 // PriorityQueue\'b4\'c2 \'c5\'a9\'b1\'e2 \'bc\'f8\'bc\'ad\'b4\'eb\'b7\'ce \'c3\'e2\'b7\'c2\cf0 \
		System.\cf8 out\cf0 .printf(\cf7 "%s\\n"\cf0 , \cf5 pr\cf0 .poll());\
		System.\cf8 out\cf0 .printf(\cf7 "%s\\n"\cf0 , \cf5 pr\cf0 .poll());\
		System.\cf8 out\cf0 .printf(\cf7 "%s\\n"\cf0 , \cf5 pr\cf0 .poll());\
		\cf6 /*\cf0 \
\cf6 		 * for(String \ul temp\ulnone  : \ul pr\ulnone ) \{ System.out.printf("%s\\t", \ul temp\ulnone ); \}\cf0 \
\cf6 		 */\cf0 \
	\}\
\}\
\pard\pardeftab720\partightenfactor0
\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \'b0\'e1\'b0\'fa)\
\pard\pardeftab720\partightenfactor0
\cf0 \'b7\'b9\'c0\'cc\'be\'ee \'c3\'df\'b0\'a1\
\'bb\'f6\'bb\'f3 \'ba\'b8\'c1\'a4\
170	98	105	\
===================\
105	98	170\
===================\
105\
170\
98\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
** Set - \'c0\'ce\'c5\'cd\'c6\'e4\'c0\'cc\'bd\'ba\
\
=> \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c1\'df\'ba\'b9\'be\'f8\'c0\'cc \'c0\'fa\'c0\'e5\'c7\'cf\'b4\'c2 \'c0\'da\'b7\'e1\'b1\'b8\'c1\'b6\
=> \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7 \'c0\'fa\'c0\'e5 \'bc\'f8\'bc\'ad\'b8\'a6 \'be\'cb \'bc\'f6 \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9.\
\'c0\'ce\'b5\'a6\'bd\'ba\'b8\'a6 \'c0\'cc\'bf\'eb\'c7\'d8\'bc\'ad\'b4\'c2 \'c1\'a2\'b1\'d9\'c7\'d2 \'bc\'f6 \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9.\
[\'c0\'ce\'b5\'a6\'bd\'ba]\'b8\'a6 \'c5\'eb\'c7\'d8\'bc\'ad \'c1\'a2\'b1\'d9\'c0\'cc \'be\'c8\'b5\'c7\'b0\'ed get \'b8\'de\'bc\'d2\'b5\'e5\'b5\'b5 \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9.\
=> \'ba\'fc\'b8\'a5 \'bf\'ad\'b0\'c5\'b8\'a6 \'c0\'cc\'bf\'eb\'c7\'d8\'bc\'ad\'b8\'b8 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c1\'a2\'b1\'d9\'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\
=> java \'bf\'a1\'bc\'ad\'b4\'c2 java.util.Set \'c0\'cc\'b6\'f3\'b4\'c2 \'c0\'ce\'c5\'cd\'c6\'e4\'c0\'cc\'bd\'ba\'b7\'ce \'c1\'a6\'b0\'f8\
=> \'b1\'b8\'c7\'f6\'b5\'c8 \'c5\'ac\'b7\'a1\'bd\'ba\'b4\'c2 HashSet, LinkedHashSet, TreeSet\'c0\'cc \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\
\
	1. HashSet\
	=> \'c7\'d8\'bd\'cc\'c0\'bb \'c0\'cc\'bf\'eb\'c7\'d8\'bc\'ad \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c0\'fa\'c0\'e5\'c7\'cf\'b1\'e2 \'b6\'a7\'b9\'ae\'bf\'a1 \'c0\'fa\'c0\'e5 \'bc\'f8\'bc\'ad\'b8\'a6 \'c0\'fc\'c7\'f4 \'be\'cb \'bc\'f6 \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9.\
	=> \'ba\'b8\'c5\'eb\'c0\'c7 \'b0\'e6\'bf\'ec Set\'c0\'cc\'b6\'f3\'b0\'ed \'c7\'cf\'b8\'e9 HashSet\'c0\'d4\'b4\'cf\'b4\'d9.\
	=> \'c1\'df\'ba\'b9\'b5\'c8 \'b5\'a5\'c0\'cc\'c5\'cd\'b4\'c2 \'c0\'fa\'c0\'e5\'c7\'cf\'c1\'f6 \'be\'ca\'c0\'bd\
	2. LinkedHashSet\
	=> \'c0\'fa\'c0\'e5\'bc\'f8\'bc\'ad\'b8\'a6 \'b1\'e2\'be\'ef\'c7\'cf\'b0\'ed \'c0\'d6\'be\'ee\'bc\'ad \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c3\'df\'c3\'e2\'c7\'cf\'b8\'e9 \'c0\'fa\'c0\'e5\'b5\'c8 \'bc\'f8\'bc\'ad\'b4\'eb\'b7\'ce \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 \'c3\'df\'c3\'e2\'b5\'cb\'b4\'cf\'b4\'d9.\
	3. TreeSet\
	=> \'c5\'a9\'b1\'e2 \'bc\'f8\'bc\'ad\'b8\'a6 \'b1\'e2\'be\'ef\'c7\'cf\'b0\'ed \'c0\'d6\'be\'ee\'bc\'ad(\'c1\'a4\'b7\'c4\'c0\'ba Tree\'b8\'a6 \'c0\'cc\'bf\'eb) \'c3\'df\'c3\'e2\'c7\'cf\'b8\'e9 \'c5\'a9\'b1\'e2 \'bc\'f8\'bc\'ad\'b4\'eb\'b7\'ce \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 \'c3\'df\'c3\'e2\'b5\'cb\'b4\'cf\'b4\'d9.\
\
=> \'bd\'c7\'c1\'a6 \'b1\'b8\'c7\'f6\'b5\'c8 \'b0\'e6\'bf\'ec\'b4\'c2 \'bd\'ba\'b8\'b6\'c6\'ae \'c6\'f9\'c0\'c7 \'c5\'cd\'c4\'a1 \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 Set\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'d5\'b4\'cf\'b4\'d9.\
\
\'bd\'c7\'bd\'c0)\
\pard\pardeftab720\partightenfactor0
\cf4 package\cf0  datastructure;\
\
\cf4 import\cf0  java.util.HashSet;\
\cf4 import\cf0  java.util.LinkedHashSet;\
\cf4 import\cf0  java.util.Set;\
\cf4 import\cf0  java.util.TreeSet;\
\
\cf4 public\cf0  \cf4 class\cf0  SetMain \{\
\
	\cf4 public\cf0  \cf4 static\cf0  \cf4 void\cf0  main(String[] \cf5 args\cf0 ) \{\
		\cf6 // \'c7\'d8\'bd\'c3\'bc\'c2\'c0\'bb \'bb\'fd\'bc\'ba - \'c0\'fa\'c0\'e5\'c0\'ba \'c7\'d8\'bd\'cc\'c0\'bb \'c0\'cc\'bf\'eb\cf0 \
		\cf6 // \'c1\'df\'ba\'b9\'b5\'c8 \'b5\'a5\'c0\'cc\'c5\'cd\'b4\'c2 \'c0\'fa\'c0\'e5\'b5\'c7\'c1\'f6 \'be\'ca\'c0\'bd\cf0 \
		\cf6 // \'c1\'df\'ba\'b9\'b5\'c8 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c0\'fa\'c0\'e5\'c7\'cf\'b8\'e9 add \'b8\'de\'bc\'d2\'b5\'e5\'b0\'a1 false \'b8\'ae\'c5\'cf\cf0 \
		\cf6 // \'bc\'f8\'bc\'ad\'b0\'a1 \'b7\'a3\'b4\'fd\'c0\'ce \'c0\'cc\'c0\'af - \'c7\'d8\'bd\'c3 \'c7\'d4\'bc\'f6\'b4\'c2 \'bf\'ee\'bf\'b5\'c3\'bc\'c1\'a6\'b0\'a1 \'bc\'b1\'c5\'c3\cf0 \
		Set<Integer> \cf5 hashSet\cf0  = \cf4 new\cf0  HashSet<>();\
		\cf5 hashSet\cf0 .add(76);\
		\cf5 hashSet\cf0 .add(24);\
		\cf5 hashSet\cf0 .add(54);\
		\cf5 hashSet\cf0 .add(24);\
		\cf4 for\cf0 (Integer \cf5 temp\cf0  : \cf5 hashSet\cf0 ) \{\
			System.\cf8 out\cf0 .printf(\cf7 "%d\\t"\cf0 , \cf5 temp\cf0 );\
		\}\
		System.\cf8 out\cf0 .printf(\cf7 "\\n===================\\n"\cf0 );\
		\cf6 // LinkedHashSet \'c0\'ba \'c0\'fa\'c0\'e5\'b5\'c8 \'bc\'f8\'bc\'ad\'b8\'a6 \'b1\'e2\'be\'ef\'c7\'d8\'bc\'ad \'c0\'fa\'c0\'e5\'c7\'d1 \'bc\'f8\'bc\'ad\'b4\'eb\'b7\'ce \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 \'c3\'df\'c3\'e2\cf0 \
		Set<Integer> \cf5 linkedHashSet\cf0  = \cf4 new\cf0  LinkedHashSet<>();\
		\cf5 linkedHashSet\cf0 .add(108);\
		\cf5 linkedHashSet\cf0 .add(7);\
		\cf5 linkedHashSet\cf0 .add(18);\
		\cf6 // \'c0\'fa\'c0\'e5\'c7\'d1 \'bc\'f8\'bc\'ad\'b4\'eb\'b7\'ce \'c3\'e2\'b7\'c2\cf0 \
		\cf4 for\cf0 (Integer \cf5 temp\cf0  : \ul linkedHashSet\ulnone ) \{\
			System.\cf8 out\cf0 .printf(\cf7 "%d\\t"\cf0 , \cf5 temp\cf0 );\
		\}\
		System.\cf8 out\cf0 .printf(\cf7 "\\n===================\\n"\cf0 );\
		\cf6 // TreeSet : \'c5\'a9\'b1\'e2 \'bc\'f8\'bc\'ad\'b4\'eb\'b7\'ce \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c3\'df\'c3\'e2\'c7\'d2 \'bc\'f6 \'c0\'d6\'b4\'c2 Set\cf0 \
		\cf6 // \'c0\'da\'b7\'e1\'b1\'b8\'c1\'b6\'bf\'a1\'bc\'ad Tree\'b6\'f3\'b4\'c2 \'b8\'bb\'c0\'cc \'b3\'aa\'bf\'c0\'b8\'e9 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c0\'fa\'c0\'e5\'c7\'d1 \'c8\'c4 \'c1\'a4\'b7\'c4\'c7\'cf\'b4\'c2 \'b0\'cd\'c0\'cc \'be\'c6\'b4\'cf\'b0\'ed\cf0 \
		\cf6 // \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c0\'fa\'c0\'e5\'c7\'d2 \'b6\'a7 Tree \'b1\'b8\'c1\'b6\'b8\'a6 \'c0\'cc\'bf\'eb\'c7\'d8\'bc\'ad \'c1\'a4\'b7\'c4\'c7\'cf\'b4\'c2 \'b9\'e6\'bd\'c4\cf0 \
		\cf6 // Tree \'c0\'c7 \'bc\'f8\'c8\'b8 \'b9\'e6\'b9\'fd\'c0\'bb \'c0\'cc\'bf\'eb\'c7\'d8\'bc\'ad \'c0\'db\'c0\'ba \'b0\'cd\'ba\'ce\'c5\'cd \'c5\'ab \'b0\'cd(\ul Pre\ulnone  order) \'b6\'c7\'b4\'c2 \'c0\'fa\'c0\'e5\'b5\'c8 \'bc\'f8\'bc\'ad\'b4\'eb\'b7\'ce(In order)\'c3\'e2\'b7\'c2\cf0 \
		\cf6 // \'bb\'ea\'bc\'fa \'bf\'ac\'bb\'ea\'c0\'ba Post Order\cf0 \
		Set<Integer> \cf5 treeSet\cf0  = \cf4 new\cf0  TreeSet<>();\
		\cf5 treeSet\cf0 .add(109);\
		\cf5 treeSet\cf0 .add(18);\
		\cf5 treeSet\cf0 .add(4);\
		\cf4 for\cf0 (Integer \cf5 temp\cf0  : \cf5 treeSet\cf0 ) \{\
			System.\cf8 out\cf0 .printf(\cf7 "%d\\t"\cf0 , \cf5 temp\cf0 );\
		\}	\
	\}\
\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \'b0\'e1\'b0\'fa)\
\pard\pardeftab720\partightenfactor0
\cf0 54	24	76	\
===================\
108	7	18	\
===================\
4	18	109	\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
Lotto\
\'bd\'c7\'bd\'c0)\
\pard\pardeftab720\partightenfactor0
\cf9 /** \'b9\'e8\'bf\'ad\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'cf\'b4\'c2 \'b0\'e6\'bf\'ec **/\cf0 \
\pard\pardeftab720\partightenfactor0
\cf4 package\cf0  datastructure;\
\
\cf4 import\cf0  java.util.Arrays;\
\cf4 import\cf0  java.util.Scanner;\
\
\cf4 public\cf0  \cf4 class\cf0  LottoMain \{\
\
	\cf4 public\cf0  \cf4 static\cf0  \cf4 void\cf0  main(String[] \cf5 args\cf0 ) \{\
		\cf6 // 1-45\'b1\'ee\'c1\'f6\'c0\'c7 \'bc\'fd\'c0\'da 6\'b0\'b3\'b8\'a6 \'c1\'df\'ba\'b9\'be\'f8\'c0\'cc \'c0\'fa\'c0\'e5\cf0 \
		\cf6 // \'be\'ee\'b6\'b2 \'c0\'da\'b7\'e1\'b1\'b8\'c1\'b6\'b8\'a6 \'c0\'cc\'bf\'eb\'c7\'d8\'bc\'ad \'c0\'fa\'c0\'e5\'c7\'cf\'b4\'c2 \'b0\'cd\'c0\'cc \'b0\'a1\'c0\'e5 \'c4\'da\'b5\'e5\'b8\'a6 \'c1\'d9\'c0\'cf \'bc\'f6 \'c0\'d6\'b4\'c2\'c1\'f6 \'bb\'fd\'b0\'a2\cf0 \
		\cf6 // \'b5\'bf\'c0\'cf\'c7\'d1 \'c0\'da\'b7\'e1\'c7\'fc\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'bf\'a9\'b7\'af\'b0\'b3 \'c0\'fa\'c0\'e5\'c7\'cf\'b4\'c2 \'c0\'da\'b7\'e1\'b1\'b8\'c1\'b6\cf0 \
		\
		\cf6 // \'c3\'d6\'b1\'d9\'bf\'a1\'b4\'c2 \'b9\'e8\'bf\'ad\'b5\'b5 List\'b7\'ce \'c3\'eb\'b1\'de\cf0 \
		\cf6 // \'b9\'e8\'bf\'ad, ArrayList, LinkedList, Stack, PriorityQueue, ArrayDeque\cf0 \
		\cf6 // HashSet, LinkedHashSet, TreeSet\cf0 \
		\
		\cf6 // \'c1\'a4\'bc\'f6 6\'b0\'b3\'b8\'a6 \'c0\'fa\'c0\'e5\'c7\'cf\'b4\'c2 \'b9\'e8\'bf\'ad\cf0 \
		\cf4 int\cf0  [] \cf5 lottoAr\cf0  = \cf4 new\cf0  \cf4 int\cf0 [6];\
		Scanner \cf5 sc\cf0  = \cf4 new\cf0  Scanner(System.\cf8 in\cf0 );\
		\cf4 int\cf0  \cf5 len\cf0  = \cf5 lottoAr\cf0 .\cf8 length\cf0 ;\
		\cf4 for\cf0 (\cf4 int\cf0  \cf5 i\cf0 =0; \cf5 i\cf0 <\cf5 len\cf0 ; \cf5 i\cf0 =\cf5 i\cf0 +1) \{\
			\cf10 // input\'bf\'a1 \'c1\'a4\'bc\'f6 \'c0\'d4\'b7\'c2\'b9\'de\'b1\'e2\cf0 \
			System.\cf8 out\cf0 .printf(\cf7 "\'bc\'fd\'c0\'da \'c0\'d4\'b7\'c2(1-45) : "\cf0 );\
			\cf4 int\cf0  \cf5 input\cf0  = \cf5 sc\cf0 .nextInt();\
			\
			\cf6 // 1\'ba\'ce\'c5\'cd 45 \'bb\'e7\'c0\'cc\'b0\'a1 \'be\'c6\'b4\'cf\'b6\'f3\'b8\'e9 \'b4\'d9\'bd\'c3 \'c0\'d4\'b7\'c2\cf0 \
			\cf4 if\cf0 (\cf5 input\cf0 <1 || \cf5 input\cf0 >45) \{\
				System.\cf8 out\cf0 .printf(\cf7 "1-45 \'bb\'e7\'c0\'cc\'c0\'c7 \'bc\'fd\'c0\'da\'b8\'b8 \'c0\'d4\'b7\'c2!!!\\n"\cf0 );\
				\cf5 i\cf0  = \cf5 i\cf0  - 1;\
				\cf4 continue\cf0 ;\
			\}\
			\cf6 // \'c1\'df\'ba\'b9 \'b0\'cb\'bb\'e7\'b8\'a6 \'c7\'d8\'bc\'ad \'c5\'eb\'b0\'fa\'c7\'cf\'c1\'f6 \'b8\'f8\'c7\'cf\'b8\'e9 \'b4\'d9\'bd\'c3 \'c0\'d4\'b7\'c2\cf0 \
			\cf6 // \'c3\'b3\'c0\'bd\'bf\'a1\'b4\'c2 \'c7\'d2 \'c7\'ca\'bf\'e4\'b0\'a1 \'be\'f8\'be\'ee\'bc\'ad i>0 \'ba\'b8\'b4\'d9 \'c5\'ac \'b6\'a7\cf0 \
			\cf4 int\cf0  \cf5 j\cf0  = 0;\
			\cf4 if\cf0 (\cf5 i\cf0  > 0) \{\
				\cf4 for\cf0 (\cf5 j\cf0  =0; \cf5 j\cf0 <=\cf5 i\cf0 ; \cf5 j\cf0 =\cf5 j\cf0 +1) \{\
					\cf4 if\cf0 (\cf5 input\cf0  == \cf5 lottoAr\cf0 [\cf5 j\cf0 ]) \{\
						\cf4 break\cf0 ;\
					\}\
				\}\
				\cf6 // \'b9\'dd\'ba\'b9\'b9\'ae\'c0\'cc \'b3\'a1\'b1\'ee\'c1\'f6 \'bc\'f6\'c7\'e0\'b5\'c7\'c1\'f6 \'be\'ca\'be\'d2\'b4\'d9\'b8\'e9 break\'b8\'a6 \'b8\'b8\'b3\'aa\'bc\'ad \'c1\'df\'b4\'dc\cf0 \
				\cf4 if\cf0 (\cf5 j\cf0  != \cf5 i\cf0 +1) \{\
					System.\cf8 out\cf0 .printf(\cf7 "\'b5\'a5\'c0\'cc\'c5\'cd \'c1\'df\'ba\'b9\'c0\'d4\'b4\'cf\'b4\'d9.\\n"\cf0 );\
					\cf5 i\cf0  = \cf5 i\cf0  - 1;\
					\cf4 continue\cf0 ;\
				\}\
			\}\
			\cf6 // \'c0\'af\'c8\'bf\'bc\'ba \'b0\'cb\'bb\'e7\'b8\'a6 \'c5\'eb\'b0\'fa\'c7\'cf\'b8\'e9 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'b9\'e8\'bf\'ad\'bf\'a1 \'c0\'fa\'c0\'e5\cf0 \
			\cf5 lottoAr\cf0 [\cf5 i\cf0 ] = \cf5 input\cf0 ;\
		\}\
		\cf6 // \'b5\'a5\'c0\'cc\'c5\'cd \'c1\'a4\'b7\'c4 - \'c0\'fc\'bf\'a1\'b4\'c2 \'c1\'f7\'c1\'a2 \'c1\'a4\'b7\'c4\'c7\'df\'b4\'c2\'b5\'a5, API \'b8\'de\'bc\'d2\'b5\'e5\'b8\'a6 \'c1\'a4\'b7\'c4\cf0 \
		Arrays.sort(\cf5 lottoAr\cf0 );\
		\cf6 // \'c3\'e2\'b7\'c2\cf0 \
		\cf4 for\cf0 (\cf4 int\cf0  \cf5 temp\cf0  : \cf5 lottoAr\cf0 ) \{\
			System.\cf8 out\cf0 .printf(\cf7 "%d\\t"\cf0 , \cf5 temp\cf0 );\
		\}\
		\cf5 sc\cf0 .close();\
	\}\
\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \'b0\'e1\'b0\'fa)\
\pard\pardeftab720\partightenfactor0
\cf0 \'bc\'fd\'c0\'da \'c0\'d4\'b7\'c2(1-45) : \cf11 11\cf0 \
\'bc\'fd\'c0\'da \'c0\'d4\'b7\'c2(1-45) : \cf11 14\cf0 \
\'bc\'fd\'c0\'da \'c0\'d4\'b7\'c2(1-45) : \cf11 40\cf0 \
\'bc\'fd\'c0\'da \'c0\'d4\'b7\'c2(1-45) : \cf11 58\cf0 \
1-45 \'bb\'e7\'c0\'cc\'c0\'c7 \'bc\'fd\'c0\'da\'b8\'b8 \'c0\'d4\'b7\'c2!!!\
\'bc\'fd\'c0\'da \'c0\'d4\'b7\'c2(1-45) : 40\
\'b5\'a5\'c0\'cc\'c5\'cd \'c1\'df\'ba\'b9\'c0\'d4\'b4\'cf\'b4\'d9.\
\'bc\'fd\'c0\'da \'c0\'d4\'b7\'c2(1-45) : 7\
\'bc\'fd\'c0\'da \'c0\'d4\'b7\'c2(1-45) : \cf11 12\cf0 \
\'bc\'fd\'c0\'da \'c0\'d4\'b7\'c2(1-45) : \cf11 18\cf0 \
7	11	12	14	18	40	\
\
\pard\pardeftab720\partightenfactor0
\cf12 /** PriorityQueue\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'cf\'b4\'c2 \'b0\'e6\'bf\'ec **/\cf0 \
\pard\pardeftab720\partightenfactor0
\cf4 package\cf0  datastructure;\
\
\cf4 import\cf0  java.util.PriorityQueue;\
\cf4 import\cf0  java.util.Scanner;\
\
\cf4 public\cf0  \cf4 class\cf0  LottoMain \{\
\
	\cf4 public\cf0  \cf4 static\cf0  \cf4 void\cf0  main(String[] \cf5 args\cf0 ) \{\
\
		PriorityQueue<Integer> \cf5 lottoQueue\cf0  = \cf4 new\cf0  PriorityQueue<>();\
		Scanner \cf5 sc\cf0  = \cf4 new\cf0  Scanner(System.\cf8 in\cf0 );\
\
		\cf4 for\cf0 (\cf4 int\cf0  \cf5 i\cf0 =0; \cf5 i\cf0 <6; \cf5 i\cf0 =\cf5 i\cf0 +1) \{\
			\cf10 // input\'bf\'a1 \'c1\'a4\'bc\'f6 \'c0\'d4\'b7\'c2\'b9\'de\'b1\'e2\cf0 \
			System.\cf8 out\cf0 .printf(\cf7 "\'bc\'fd\'c0\'da \'c0\'d4\'b7\'c2(1-45) : "\cf0 );\
			\cf4 int\cf0  \cf5 input\cf0  = \cf5 sc\cf0 .nextInt();\
			\
			\cf6 // 1\'ba\'ce\'c5\'cd 45 \'bb\'e7\'c0\'cc\'b0\'a1 \'be\'c6\'b4\'cf\'b6\'f3\'b8\'e9 \'b4\'d9\'bd\'c3 \'c0\'d4\'b7\'c2\cf0 \
			\cf4 if\cf0 (\cf5 input\cf0 <1 || \cf5 input\cf0 >45) \{\
				System.\cf8 out\cf0 .printf(\cf7 "1-45 \'bb\'e7\'c0\'cc\'c0\'c7 \'bc\'fd\'c0\'da\'b8\'b8 \'c0\'d4\'b7\'c2!!!\\n"\cf0 );\
				\cf5 i\cf0  = \cf5 i\cf0  - 1;\
				\cf4 continue\cf0 ;\
			\}\
			\cf6 // \'c1\'df\'ba\'b9 \'b0\'cb\'bb\'e7\'b8\'a6 \'c7\'d8\'bc\'ad \'c5\'eb\'b0\'fa\'c7\'cf\'c1\'f6 \'b8\'f8\'c7\'cf\'b8\'e9 \'b4\'d9\'bd\'c3 \'c0\'d4\'b7\'c2\cf0 \
			\cf4 int\cf0  \cf5 j\cf0  = 0;\
			\cf6 // \'c5\'a5\'b8\'a6 \'bc\'f8\'c8\'b8\'c7\'cf\'b8\'e9\'bc\'ad \'b5\'bf\'c0\'cf\'c7\'d1 \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 \'c0\'d6\'c0\'b8\'b8\'e9 j=1\'b7\'ce \'ba\'af\cf0 \
			\cf4 for\cf0 (Integer \cf5 temp\cf0  : \cf5 lottoQueue\cf0 ) \{\
				\cf4 if\cf0 (\cf5 input\cf0  == \cf5 temp\cf0 ) \{\
					\cf5 j\cf0 =1;\
					\cf4 break\cf0 ;\
				\}\
			\}\
			\cf6 //\'c1\'df\'ba\'b9\'b5\'c8 \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 \'c0\'d6\'c0\'b8\'b8\'e9 \'b4\'d9\'bd\'c3 \'c0\'d4\'b7\'c2\'b9\'de\'b1\'e2\cf0 \
			\cf4 if\cf0 (\cf5 j\cf0  == 1) \{\
				System.\cf8 out\cf0 .printf(\cf7 "\'c1\'df\'ba\'b9\'b5\'c8 \'b5\'a5\'c0\'cc\'c5\'cd\'b4\'c2 \'be\'c8\'b5\'cb\'b4\'cf\'b4\'d9.\\n"\cf0 );\
				\cf5 i\cf0  = \cf5 i\cf0  - 1;\
				\cf4 continue\cf0 ;\
			\}\
			\cf6 // \'c0\'af\'c8\'bf\'bc\'ba \'b0\'cb\'bb\'e7\'b8\'a6 \'c5\'eb\'b0\'fa\'c7\'cf\'b8\'e9 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'b9\'e8\'bf\'ad\'bf\'a1 \'c0\'fa\'c0\'e5\cf0 \
			\cf5 lottoQueue\cf0 .add(\cf5 input\cf0 );\
		\}\
		\cf6 // \'bf\'ec\'bc\'b1\'bc\'f8\'c0\'a7 \'c5\'a5\'b4\'c2 poll\'c0\'bb \'c3\'e2\'b7\'c2\'c7\'cf\'b8\'e9 \'bc\'f8\'bc\'ad\'b4\'eb\'b7\'ce \'c3\'e2\'b7\'c2\cf0 \
		\cf4 for\cf0 (\cf4 int\cf0  \cf5 temp\cf0  : \cf5 lottoQueue\cf0 ) \{\
			System.\cf8 out\cf0 .printf(\cf7 "%d\\t"\cf0 , \cf5 temp\cf0 );\
		\}\
		\cf5 sc\cf0 .close();\
	\}\
\
\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \'b0\'e1\'b0\'fa\'b4\'c2 \'c0\'a7\'bf\'cd \'b5\'bf\'c0\'cf\
\
\pard\pardeftab720\partightenfactor0
\cf12 /** TreeSet\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'cf\'b4\'c2 \'b0\'e6\'bf\'ec **/\cf0 \
\pard\pardeftab720\partightenfactor0
\cf4 package\cf0  datastructure;\
\
\cf4 import\cf0  java.util.Scanner;\
\cf4 import\cf0  java.util.TreeSet;\
\
\cf4 public\cf0  \cf4 class\cf0  LottoMain \{\
\
	\cf4 public\cf0  \cf4 static\cf0  \cf4 void\cf0  main(String[] \cf5 args\cf0 ) \{\
		\cf6 // \'c1\'df\'ba\'b9\'b5\'c8 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c0\'fa\'c0\'e5\'c7\'cf\'c1\'f6 \'be\'ca\'b0\'ed \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7 \'c5\'a9\'b1\'e2 \'bc\'f8\'bc\'ad\'b4\'eb\'b7\'ce \'c0\'fa\'c0\'e5\'c7\'cf\'b4\'c2 \'c0\'da\'b7\'e1\'b1\'b8\'c1\'b6 \'b0\'b4\'c3\'bc \'b8\'b8\'b5\'e9\'b1\'e2\cf0 \
		TreeSet<Integer> \cf5 lotto\cf0  = \cf4 new\cf0  TreeSet<>();\
		Scanner \cf5 sc\cf0  = \cf4 new\cf0  Scanner(System.\cf8 in\cf0 );\
\
		\cf6 // \ul lotto\ulnone \'c0\'c7 \'c5\'a9\'b1\'e2\'b0\'a1 6\'c0\'cc \'b5\'c9\'b6\'a7\'b1\'ee\'c1\'f6 \'b3\'a1\'b3\'aa\'c1\'f6 \'be\'ca\'c0\'bd\cf0 \
		\cf4 for\cf0  (; \cf5 lotto\cf0 .size()<6; )) \{\
			\cf10 // input\'bf\'a1 \'c1\'a4\'bc\'f6 \'c0\'d4\'b7\'c2\'b9\'de\'b1\'e2\cf0 \
			System.\cf8 out\cf0 .printf(\cf7 "\'bc\'fd\'c0\'da \'c0\'d4\'b7\'c2(1-45) : "\cf0 );\
			\cf4 int\cf0  \cf5 input\cf0  = \cf5 sc\cf0 .nextInt();\
			\
			\cf6 // 1\'ba\'ce\'c5\'cd 45 \'bb\'e7\'c0\'cc\'b0\'a1 \'be\'c6\'b4\'cf\'b6\'f3\'b8\'e9 \'b4\'d9\'bd\'c3 \'c0\'d4\'b7\'c2\cf0 \
			\cf4 if\cf0 (\cf5 input\cf0 <1 || \cf5 input\cf0 >45) \{\
				System.\cf8 out\cf0 .printf(\cf7 "1-45 \'bb\'e7\'c0\'cc\'c0\'c7 \'bc\'fd\'c0\'da\'b8\'b8 \'c0\'d4\'b7\'c2!!!\\n"\cf0 );\
				\cf13 // i = i - 1;\
\pard\pardeftab720\partightenfactor0
\cf0 				\cf4 continue\cf0 ;\
			\}			\
			\cf6 // \'b5\'a5\'c0\'cc\'c5\'cd \'bb\'f0\'c0\'d4 \'bf\'a9\'ba\'ce\'b8\'a6 r\'bf\'a1 \'c0\'fa\'c0\'e5\'c7\'cf\'b8\'e9\'bc\'ad \'bb\'f0\'c0\'d4\cf0 \
			\cf4 boolean\cf0  \cf5 r\cf0  = \cf5 lotto\cf0 .add(\cf5 input\cf0 );\
			\cf6 // \'bb\'f0\'c0\'d4\'bf\'a1 \'bd\'c7\'c6\'d0\'c7\'df\'b4\'d9\'b8\'e9 - \'b5\'a5\'c0\'cc\'c5\'cd \'c1\'df\'ba\'b9\cf0 \
			\cf4 if\cf0 (\cf5 r\cf0  == \cf4 false\cf0 ) \{\
				System.\cf8 out\cf0 .printf(\cf7 "\'c1\'df\'ba\'b9\'b5\'c8 \'b5\'a5\'c0\'cc\'c5\'cd\'b4\'c2 \'be\'c8\'b5\'cb\'b4\'cf\'b4\'d9.\\n"\cf0 );\
				\cf14 // i = i - 1;\
				// continue;	//** \'b9\'dd\'ba\'b9\'b9\'ae\'be\'c8\'bf\'a1\'bc\'ad \'b8\'b6\'c1\'f6\'b8\'b7 continue\'b4\'c2 \'c0\'c7\'b9\'cc\'b0\'a1 \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9.\cf15 \
\cf0 			\}\
		\}\
		\cf6 // TreeSet\'c0\'ba \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c5\'a9\'b1\'e2 \'bc\'f8\'bc\'ad\'b4\'eb\'b7\'ce \'c1\'a2\'b1\'d9\'c7\'d2 \'bc\'f6 \'c0\'d6\'b4\'c2 \'b9\'e6\'b9\'fd\'c0\'bb \'b0\'a1\'c1\'f6\'b0\'ed \'c0\'d6\'b1\'e2 \'b6\'a7\'b9\'ae\'bf\'a1 \'c1\'a4\'b7\'c4\'c0\'bb \'c7\'d2 \'c7\'ca\'bf\'e4\'b0\'a1 \'be\'f8\'c0\'bd\cf0 \
		\cf4 for\cf0 (Integer \cf5 temp\cf0  : \cf5 lotto\cf0 ) \{\
			System.\cf8 out\cf0 .printf(\cf7 "%d\\t"\cf0 , \cf5 temp\cf0 );\
		\}\
		\cf5 sc\cf0 .close();\
	\}\
\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \'b0\'e1\'b0\'fa\'b4\'c2 \'c0\'a7\'bf\'cd \'b5\'bf\'c0\'cf\
\
\cf16 \ul \ulc16 ** Map - HashTabel, Dictionary - \'c0\'ce\'c5\'cd\'c6\'e4\'c0\'cc\'bd\'ba\cf0 \ulnone \
\
=> \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c0\'fa\'c0\'e5\'c7\'d2 \'b6\'a7 key \'bf\'cd value\'b8\'a6 \'bd\'d6\'c0\'b8\'b7\'ce \'c0\'fa\'c0\'e5\'c7\'cf\'b4\'c2 \'c0\'da\'b7\'e1\'b1\'b8\'c1\'b6\
=> List\'b4\'c2 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c0\'fa\'c0\'e5\'c7\'d2 \'b6\'a7 \'c0\'ce\'b5\'a6\'bd\'ba(\'c0\'a7\'c4\'a1\'b9\'f8\'c8\'a3) \'bf\'cd value\'b8\'a6 \'c0\'fa\'c0\'e5\'c7\'cf\'b4\'c2 \'c0\'da\'b7\'e1\'b1\'b8\'c1\'b6\
=> \'c0\'cc\'b8\'a7\'c0\'ce\'b5\'a6\'bd\'ba(key) \'bf\'cd value\'b8\'a6 \'c0\'fa\'c0\'e5\'c7\'cf\'b4\'c2 \'c0\'da\'b7\'e1\'b1\'b8\'c1\'b6\
=> 2\'b0\'b3\'c0\'c7 Generic\'c0\'bb \'c0\'fb\'bf\'eb\
=> Key\'c0\'c7 \'c0\'da\'b7\'e1\'c7\'fc\'b0\'fa Value\'c0\'c7 \'c0\'da\'b7\'e1\'c7\'fc\'c0\'d4\'b4\'cf\'b4\'d9.\
Key\'b4\'c2 \'c6\'af\'ba\'b0\'c7\'d1 \'b0\'e6\'bf\'ec\'b0\'a1 \'be\'c6\'b4\'cf\'b8\'e9 String, Value\'b4\'c2 \'bf\'a9\'b7\'af \'b0\'a1\'c1\'f6 \'c0\'da\'b7\'e1\'c7\'fc\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'d2 \'bc\'f6 \'c0\'d6\'c1\'f6\'b8\'b8 \'b4\'eb\'ba\'ce\'ba\'d0 Object(\'c3\'d6\'bb\'f3\'c0\'a7 \'c5\'ac\'b7\'a1\'bd\'ba)\
=> java \'bf\'a1\'bc\'ad\'b4\'c2 java.util.Map \'c0\'cc\'b6\'f3\'b4\'c2 \'c0\'ce\'c5\'cd\'c6\'e4\'c0\'cc\'bd\'ba\'b7\'ce \'c1\'a6\'b0\'f8\
=> Key\'b4\'c2 Set\'c0\'b8\'b7\'ce \'b8\'b8\'b5\'ec\'b4\'cf\'b4\'d9.\
Key\'c0\'c7 \'b0\'aa\'c0\'ba \'c1\'df\'ba\'b9\'b5\'c9 \'bc\'f6 \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9.\
=> \'bd\'c7\'c1\'a6 \'b1\'b8\'c7\'f6\'b5\'c8 \'c5\'ac\'b7\'a1\'bd\'ba\'b4\'c2 HashMap, LinkedHashMap, TreeMap\
\
	=> HashMap : Key\'c0\'c7 \'bc\'f8\'bc\'ad\'b8\'a6 \'be\'cb \'bc\'f6 \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9.\
	=> LinkedHashMap : Key\'b0\'a1 \'c0\'fa\'c0\'e5\'b5\'c8 \'bc\'f8\'bc\'ad\'b4\'eb\'b7\'ce \'b8\'b8\'b5\'e9\'be\'ee\'c1\'ae \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\
	=> TreeMap : Key\'b0\'a1 \'c5\'a9\'b1\'e2 \'bc\'f8\'bc\'ad\'b4\'eb\'b7\'ce \'b8\'b8\'b5\'e9\'be\'ee\'c1\'ae \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\
\
	1. \'bb\'fd\'bc\'ba\'c0\'da\
	HashMap<Key\'c0\'c7 \'c0\'da\'b7\'e1\'c7\'fc, Value\'c0\'c7 \'c0\'da\'b7\'e1\'c7\'fc>()\
\
	2. \'c1\'d6\'bf\'e4 \'b8\'de\'bc\'d2\'b5\'e5\
\
		1) \'b5\'a5\'c0\'cc\'c5\'cd \'c0\'fa\'c0\'e5 \'b9\'d7 \'bc\'f6\'c1\'a4\
		put(key, value) : \'c1\'b8\'c0\'e7\'c7\'cf\'c1\'f6 \'be\'ca\'b4\'c2 Key\'c0\'cc\'b8\'e9 \'c3\'df\'b0\'a1\'b0\'a1 \'b5\'c7\'b0\'ed \'c1\'b8\'c0\'e7\'c7\'cf\'b4\'c2 key\'c0\'cc\'b8\'e9 \'bc\'f6\'c1\'a4\
\
		2) \'b5\'a5\'c0\'cc\'c5\'cd \'bb\'e8\'c1\'a6\
		remove(key) : key\'bf\'a1 \'c7\'d8\'b4\'e7\'c7\'cf\'b4\'c2 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'bb\'e8\'c1\'a6\'c7\'cf\'b0\'ed \'b8\'ae\'c5\'cf\
\
		3) \'b5\'a5\'c0\'cc\'c5\'cd \'b0\'a1\'c1\'ae\'bf\'c0\'b1\'e2\
		get(key) : key\'bf\'a1 \'c7\'d8\'b4\'e7\'c7\'cf\'b4\'c2 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'b8\'ae\'c5\'cf - \'c7\'fc \'ba\'af\'c8\'af\'c7\'d8\'bc\'ad \'bb\'e7\'bf\'eb\
		\cf16 \ul \ulc16 \'c0\'da\'b9\'d9\'b4\'c2 \'be\'f8\'b4\'c2 key\'b8\'a6 \'b4\'eb\'c0\'d4\'c7\'cf\'b8\'e9 null\'c0\'bb \'b8\'ae\'c5\'cf\
		\'be\'ee\'b6\'b2 \'be\'f0\'be\'ee\'b4\'c2 \'bf\'b9\'bf\'dc\'b8\'a6 \'b9\'df\'bb\'fd\'bd\'c3\'c5\'b5\'b4\'cf\'b4\'d9.\
		\'b4\'d9\'b8\'a5 \'be\'f0\'be\'ee \'c7\'d2 \'b6\'a7\'b4\'c2 \'c0\'cc \'ba\'ce\'ba\'d0\'c0\'bb \'c8\'ae\'c0\'ce\cf0 \ulnone \
		\'b8\'f0\'b5\'e7 \'be\'f0\'be\'ee\'b0\'a1 Map \'b1\'b8\'c1\'b6\'b4\'c2 \'c1\'f6\'bf\'f8\'c7\'cf\'b0\'ed javascript, python, R \'b5\'ee\'c0\'ba \'b0\'b4\'c3\'bc\'b0\'a1 Map \'b1\'b8\'c1\'b6\'c0\'d4\'b4\'cf\'b4\'d9.\
\
		4) \'b8\'f0\'b5\'e7 key\'b8\'a6 \'b0\'a1\'c1\'ae\'bf\'c0\'b4\'c2 \'b8\'de\'bc\'d2\'b5\'e5\
		Set keySet()\
\
		5) \'b5\'a5\'c0\'cc\'c5\'cd \'b0\'b3\'bc\'f6\
		int size()\
\
	3. Map\'c0\'ba \'b1\'b3\'c0\'e7\'bf\'a1 \'b3\'aa\'bf\'c0\'b4\'c2 \'c0\'cc\'bb\'f3 \'b0\'f8\'ba\'ce\'b8\'a6 \'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\
	=> Map\'c0\'ba \'c7\'cf\'b3\'aa\'c0\'c7 \'c7\'e0(\'b7\'b9\'c4\'da\'b5\'e5)\'c0\'bb \'b8\'b8\'b5\'e5\'b4\'c2 \'c0\'da\'b7\'e1\'b1\'b8\'c1\'b6 : DTO \'c5\'ac\'b7\'a1\'bd\'ba \'b4\'eb\'bd\'c5 \'bb\'e7\'bf\'eb\'c0\'cc \'b0\'a1\'b4\'c9\
	=> 2\'c2\'f7\'bf\'f8 \'b9\'e8\'bf\'ad \'b4\'eb\'bd\'c5\'bf\'a1 \'b9\'e8\'bf\'ad -> Map -> \'b9\'e8\'bf\'ad\'b7\'ce \'b8\'b8\'b5\'e5\'b4\'c2 \'b1\'b8\'c1\'b6\'b8\'a6 \'bb\'fd\'b0\'a2\'c7\'d8\'ba\'c1\'be\'df \'c7\'d5\'b4\'cf\'b4\'d9.\
	\'c0\'cc\'b9\'cc\'c1\'f6 \'c7\'c1\'b7\'ce\'bc\'bc\'bd\'cc \'ba\'ce\'ba\'d0\'c0\'bb \'c1\'a6\'bf\'dc\'c7\'cf\'b0\'ed\'b4\'c2 2\'c2\'f7\'bf\'f8 \'b9\'e8\'bf\'ad \'b4\'eb\'bd\'c5\'bf\'a1 Map\'c0\'c7 \'b9\'e8\'bf\'ad\'c0\'bb \'bb\'e7\'bf\'eb\
	=> Map\'c0\'ba key\'c0\'bb \'be\'cb\'c1\'f6 \'b8\'f8\'c7\'d8\'b5\'b5 \'c0\'fc\'c3\'bc \'b5\'a5\'c0\'cc\'c5\'cd \'c3\'e2\'b7\'c2\'c0\'cc \'b0\'a1\'b4\'c9\
	=> \'b0\'fc\'b0\'e8\'c7\'fc \'b5\'a5\'c0\'cc\'c5\'cd\'ba\'a3\'c0\'cc\'bd\'ba\'b0\'a1 DTO\'c0\'c7 List \'b1\'b8\'c1\'b6\'c0\'cc\'b0\'ed NoSQL\'c0\'cc Map\'c0\'c7 List \'b1\'b8\'c1\'b6\
	Swift\'b4\'c2 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c1\'a6\'b0\'f8\'c7\'d2 \'b6\'a7 Map \'b1\'b8\'c1\'b6\'c0\'ce Dictionary\'b8\'a6 \'b8\'b9\'c0\'cc \'bb\'e7\'bf\'eb\
\
\'bd\'c7\'bd\'c0)\
\pard\pardeftab720\partightenfactor0
\cf4 package\cf0  datastructure;\
\
\cf4 import\cf0  java.util.Map;\
\cf4 import\cf0  java.util.TreeMap;\
\
\cf4 public\cf0  \cf4 class\cf0  MapMain1 \{\
\
	\cf4 public\cf0  \cf4 static\cf0  \cf4 void\cf0  main(String[] \cf5 args\cf0 ) \{\
		\cf6 // Map\'c0\'bb \'bb\'fd\'bc\'ba\'c7\'d8\'bc\'ad \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c3\'df\'b0\'a1\'c7\'cf\'b0\'ed \'b0\'bb\'bd\'c5\'c7\'cf\'b0\'ed \'bb\'e8\'c1\'a6\cf0 \
		\cf6 // \'ba\'af\'bc\'f6\'b4\'c2 Map\'c0\'b8\'b7\'ce \'bc\'b1\'be\'f0\'c7\'cf\'b0\'ed new\'b8\'a6 \'c7\'d2 \'b6\'a7 \'bd\'c7\'c1\'a6 \'c0\'da\'b7\'e1\'c7\'fc\'c0\'bb \'b0\'e1\'c1\'a4\cf0 \
		\cf6 // Key \'c0\'c7 \'c0\'da\'b7\'e1\'c7\'fc\'c0\'ba String\cf0 \
		\cf6 // Value\'c0\'c7 \'c0\'da\'b7\'e1\'c7\'fc\'c0\'ba Object\cf0 \
		\cf6 //Map<String, Object> map = new HashMap<>();\cf0 \
		\cf6 //Map<String, Object> map = new LinkedHashMap<>();\cf0 \
		Map<String, Object> \cf5 map\cf0  = \cf4 new\cf0  TreeMap<>();\
		\
		\cf6 // \'b5\'a5\'c0\'cc\'c5\'cd \'c3\'df\'b0\'a1 \'b9\'d7 \'b0\'bb\'bd\'c5\cf0 \
		\cf6 // \'b5\'bf\'c0\'cf\'c7\'d1 \'c5\'b0\'bf\'a1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'bb\'f0\'c0\'d4\'c7\'cf\'b8\'e9 \'b0\'bb\'bd\'c5\cf0 \
		\cf5 map\cf0 .put(\cf7 "name"\cf0 , \cf7 "\'c1\'b6\'c3\'a2\'c8\'c6"\cf0 );\
		\cf5 map\cf0 .put(\cf7 "age"\cf0 , 28);\
		\cf5 map\cf0 .put(\cf7 "job"\cf0 , \cf7 "\'c7\'d0\'bb\'fd"\cf0 );\
		\cf5 map\cf0 .put(\cf7 "age"\cf0 , 18);\
		\
		\cf6 // \'c0\'fc\'c3\'bc \'b5\'a5\'c0\'cc\'c5\'cd \'c8\'ae\'c0\'ce\cf0 \
		\cf6 // toString\'c0\'bb \'c8\'a3\'c3\'e2\'c7\'d8\'bc\'ad \'c8\'ae\'c0\'ce\cf0 \
		System.\cf8 out\cf0 .printf(\cf7 "%s\\n"\cf0 , \cf5 map\cf0 );\
		\
		\cf6 // Map\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd \'bb\'e8\'c1\'a6\cf0 \
		\cf5 map\cf0 .remove(\cf7 "job"\cf0 );\
		\cf6 // key\'bf\'a1 \'c7\'d8\'b4\'e7\'c7\'cf\'b4\'c2 \'b5\'a5\'c0\'cc\'c5\'cd \'b0\'a1\'c1\'ae\'bf\'c0\'b1\'e2\cf0 \
		System.\cf8 out\cf0 .printf(\cf7 "%s\\n"\cf0 , \cf5 map\cf0 .get(\cf7 "name"\cf0 ));\
		\cf6 // \'c1\'b8\'c0\'e7\'c7\'cf\'c1\'f6 \'be\'ca\'b4\'c2 key\'b8\'a6 \'c0\'cc\'bf\'eb\'c7\'d8\'bc\'ad \'b0\'a1\'c1\'ae\'bf\'c0\'b8\'e9 null\cf0 \
		System.\cf8 out\cf0 .printf(\cf7 "%s\\n"\cf0 , \cf5 map\cf0 .get(\cf7 "job"\cf0 ));\
	\}\
\
\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \'b0\'e1\'b0\'fa)\
\pard\pardeftab720\partightenfactor0
\cf0 \{age=18, job=\'c7\'d0\'bb\'fd, name=\'c1\'b6\'c3\'a2\'c8\'c6\}\
\'c1\'b6\'c3\'a2\'c8\'c6\
null\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\'bd\'c7\'bd\'c0)\
\pard\pardeftab720\partightenfactor0
\cf4 package\cf0  datastructure;\
\
\cf4 import\cf0  java.util.LinkedHashMap;\
\cf4 import\cf0  java.util.Map;\
\cf4 import\cf0  java.util.Set;\
\
\cf4 public\cf0  \cf4 class\cf0  MapMain2 \{\
\
	\cf4 public\cf0  \cf4 static\cf0  \cf4 void\cf0  main(String[] \cf5 args\cf0 ) \{\
		\cf6 // Person \'c5\'ac\'b7\'a1\'bd\'ba\'c0\'c7 \'b0\'b4\'c3\'bc\'b8\'a6 \'b8\'b8\'b5\'e9\'be\'ee\'bc\'ad \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c0\'fa\'c0\'e5\cf0 \
		Person \cf5 person\cf0  = \cf4 new\cf0  Person();\
		\
		\cf5 person\cf0 .setName(\cf7 "\'c1\'b6\'c3\'a2\'c8\'c6"\cf0 );\
		\cf5 person\cf0 .setAge(28);\
		\cf5 person\cf0 .setJob(\cf7 "\'c7\'d0\'bb\'fd"\cf0 );\
		\
		\cf6 // Person \'b0\'b4\'c3\'bc\'c0\'c7 \'b3\'bb\'bf\'eb\'c0\'bb \'c7\'cf\'b3\'aa\'be\'bf \'c3\'e2\'b7\'c2\cf0 \
		System.\cf8 out\cf0 .printf(\cf7 "\'c0\'cc\'b8\'a7:%s\\n"\cf0 , \cf5 person\cf0 .getName());\
		System.\cf8 out\cf0 .printf(\cf7 "\'b3\'aa\'c0\'cc:%s\\n"\cf0 , \cf5 person\cf0 .getAge());\
		System.\cf8 out\cf0 .printf(\cf7 "\'c1\'f7\'be\'f7:%s\\n"\cf0 , \cf5 person\cf0 .getJob());\
		System.\cf8 out\cf0 .printf(\cf7 "==========\\n"\cf0 );\
		\
		\cf6 // Map\'bf\'a1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c0\'fa\'c0\'e5\cf0 \
		Map<String, Object> \cf5 map\cf0  = \cf4 new\cf0  LinkedHashMap<String, Object>();\
		\cf5 map\cf0 .put(\cf7 "\'c0\'cc\'b8\'a7"\cf0 , \cf7 "\'c1\'b6\'bc\'ba\'bf\'ec"\cf0 );\
		\cf5 map\cf0 .put(\cf7 "\'b3\'aa\'c0\'cc"\cf0 , 27);\
		\cf5 map\cf0 .put(\cf7 "\'c1\'f7\'be\'f7"\cf0 , \cf7 "\'c8\'b8\'bb\'e7\'bf\'f8"\cf0 );\
		\cf5 map\cf0 .put(\cf7 "\'b7\'d1"\cf0 , \cf7 "\'c7\'d0\'bb\'fd\'b5\'e9 \'b9\'e6\'c7\'d0\'bf\'a1\'b4\'c2 \'b7\'d1\'c0\'ba \'c7\'cf\'b4\'c2\'b0\'cd\'c0\'cc \'be\'c6\'b4\'cf\'b4\'d9."\cf0 );\
		\
		\cf6 // \'b8\'f0\'b5\'e7 key\'b8\'a6 \'c0\'fc\'ba\'ce \'b0\'a1\'c1\'ae\'bf\'c0\'b1\'e2\cf0 \
		Set<String> \cf5 keyset\cf0  = \cf5 map\cf0 .keySet();\
		\cf6 // \'b5\'a5\'c0\'cc\'c5\'cd \'c3\'e2\'b7\'c2 - map \'bf\'a1 \'ba\'af\'c8\'ad\'b0\'a1 \'bb\'fd\'b0\'dc\'b5\'b5 \'c0\'cc \'ba\'ce\'ba\'d0\'c0\'ba \'bc\'f6\'c1\'a4\'c7\'d2 \'c7\'ca\'bf\'e4\'b0\'a1 \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9.\
		// Apple\'c0\'ba \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 Map \'b1\'b8\'c1\'b6\'b7\'ce \'b3\'d1\'b1\'e2\'b4\'c2 \'b0\'cd\'c0\'bb \'b8\'b9\'c0\'cc \'c7\'d5\'b4\'cf\'b4\'d9.\cf0 \
		\cf4 for\cf0 (String \cf5 key\cf0  : \cf5 keyset\cf0 ) \{\
			System.\cf8 out\cf0 .printf(\cf7 "%s:%s\\n"\cf0 , \cf5 key\cf0 , \cf5 map\cf0 .get(\cf5 key\cf0 ));\
		\}\
	\}\
\
\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\'b0\'e1\'b0\'fa)\
\pard\pardeftab720\partightenfactor0
\cf0 \'c0\'cc\'b8\'a7:\'c1\'b6\'c3\'a2\'c8\'c6\
\'b3\'aa\'c0\'cc:28\
\'c1\'f7\'be\'f7:\'c7\'d0\'bb\'fd\
==========\
\'c0\'cc\'b8\'a7:\'c1\'b6\'bc\'ba\'bf\'ec\
\'b3\'aa\'c0\'cc:27\
\'c1\'f7\'be\'f7:\'c8\'b8\'bb\'e7\'bf\'f8\
\'b7\'d1:\'c7\'d0\'bb\'fd\'b5\'e9 \'b9\'e6\'c7\'d0\'bf\'a1\'b4\'c2 \'b7\'d1\'c0\'ba \'c7\'cf\'b4\'c2\'b0\'cd\'c0\'cc \'be\'c6\'b4\'cf\'b4\'d9.\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
	4. \'c7\'cf\'b3\'aa\'c0\'c7 \'c7\'e0\'c0\'bb \'b3\'aa\'c5\'b8\'b3\'bb\'b4\'c2 \'c0\'da\'b7\'e1\'b1\'b8\'c1\'b6\
\
		1) DTO \'c5\'ac\'b7\'a1\'bd\'ba\'b8\'a6 \'b8\'b8\'b5\'e9\'be\'ee\'bc\'ad \'bb\'e7\'bf\'eb\
		=> \'bc\'d3\'bc\'ba\'b5\'e9\'c0\'bb \'ba\'af\'bc\'f6\'b7\'ce \'bb\'fd\'bc\'ba\'c7\'d8\'bc\'ad \'bb\'e7\'bf\'eb\
		=> \'bb\'e7\'bf\'eb\'c0\'da\'c3\'bc\'b4\'c2 \'bd\'ac\'bf\'f2\
		=> \'b4\'eb\'ba\'ce\'ba\'d0\'c0\'c7 IDE\'b0\'a1 \'c0\'da\'bd\'c5\'c0\'cc \'bc\'d2\'c0\'af\'c7\'d1 \'bc\'d3\'bc\'ba\'c0\'bb Code Sense\'b7\'ce \'ba\'b8\'bf\'a9\'c1\'d6\'b1\'e2 \'b6\'a7\'b9\'ae\'bf\'a1 \'c0\'cc\'b8\'a7\'c0\'bb \'b1\'e2\'be\'ef\'c7\'cf\'c1\'f6 \'be\'ca\'be\'c6\'b5\'b5 \'bb\'e7\'bf\'eb\'c7\'cf\'b1\'e2\'b0\'a1 \'bd\'ac\'bf\'f2\
		=> \'c0\'cc\'b8\'a7\'c0\'bb \'b0\'a1\'c1\'f6\'b0\'ed \'c3\'e2\'b7\'c2\'c7\'d8\'be\'df \'c7\'cf\'b1\'e2 \'b6\'a7\'b9\'ae\'bf\'a1 \'c5\'ac\'b7\'a1\'bd\'ba \'b1\'b8\'c1\'b6\'b0\'a1 \'ba\'af\'b0\'e6\'b5\'c7\'b8\'e9 \'c3\'e2\'b7\'c2\'c7\'cf\'b4\'c2 \'ba\'ce\'ba\'d0\'b5\'b5 \'ba\'af\'b0\'e6\'c7\'d8\'be\'df \'c7\'d4\
\
		2) Map\'c0\'bb \'c0\'cc\'bf\'eb\
		=> \'bc\'d3\'bc\'ba\'b5\'e9\'c0\'bb key\'b7\'ce \'bb\'fd\'bc\'ba\'c7\'d8\'bc\'ad \'bb\'e7\'bf\'eb\
		=> Code Sense\'b8\'a6 \'c0\'cc\'bf\'eb\'c7\'d8\'bc\'ad Key\'b8\'a6 \'c8\'ae\'c0\'ce\'c7\'d2 \'bc\'f6 \'be\'f8\'b1\'e2 \'b6\'a7\'b9\'ae\'bf\'a1 \'bb\'e7\'bf\'eb\'c0\'cc \'be\'ee\'b7\'c1\'bf\'ef \'bc\'f6 \'c0\'d6\'c0\'bd\
		=> \'c0\'cc\'b8\'a7\'be\'f8\'c0\'cc \'c3\'e2\'b7\'c2\'c0\'cc \'b0\'a1\'b4\'c9\'c7\'cf\'b1\'e2 \'b6\'a7\'b9\'ae\'bf\'a1 \'b5\'a5\'c0\'cc\'c5\'cd \'c0\'fa\'c0\'e5 \'ba\'ce\'ba\'d0\'c0\'cc \'ba\'af\'b0\'e6\'b5\'c7\'b4\'f5\'b6\'f3\'b5\'b5 \'c3\'e2\'b7\'c2\'c7\'cf\'b4\'c2 \'ba\'ce\'ba\'d0\'c0\'bb \'ba\'af\'b0\'e6\'c7\'d2 \'c7\'ca\'bf\'e4\'b0\'a1 \'be\'f8\'c0\'bd\
\
		3) MVC(Model View Controller) \'c6\'d0\'c5\'cf\
		=> \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'b8\'b8\'b5\'e5\'b4\'c2 \'ba\'ce\'ba\'d0\'b0\'fa \'c3\'e2\'b7\'c2\'c7\'cf\'b4\'c2 \'ba\'ce\'ba\'d0 \'b1\'d7\'b8\'ae\'b0\'ed \'b5\'d1\'c0\'bb \'bf\'ac\'b0\'e1\'c7\'d8\'c1\'d6\'b4\'c2 \'ba\'ce\'ba\'d0\'c0\'bb \'b3\'aa\'b4\'a9\'be\'ee \'b1\'b8\'c7\'f6\'c0\'bb \'c7\'d8\'bc\'ad \
		\'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7 \'ba\'af\'b0\'e6\'c0\'cc \'bb\'fd\'b1\'e2\'b4\'f5\'b6\'f3\'b5\'b5 \'c3\'e2\'b7\'c2\'c7\'cf\'b4\'c2 \'ba\'ce\'ba\'d0\'c0\'bb \'ba\'af\'b0\'e6\'c7\'cf\'c1\'f6 \'be\'ca\'b0\'ed \'c3\'e2\'b7\'c2\'c7\'d2 \'bc\'f6 \'c0\'d6\'b5\'b5\'b7\'cf \'b5\'f0\'c0\'da\'c0\'ce \'c7\'cf\'b4\'c2 \'c6\'d0\'c5\'cf\
\
		4) \'b9\'e8\'bf\'ad\'b5\'e9\'c0\'c7 \'b8\'f0\'c0\'d3\
		=> \'b9\'e8\'bf\'ad\'b5\'e9\'c0\'bb \'b9\'d9\'b7\'ce \'b9\'e8\'bf\'ad\'bf\'a1 \'b3\'d6\'be\'ee\'bc\'ad \'b9\'e8\'bf\'ad\'c0\'bb \'b8\'b8\'b5\'e9\'b8\'e9 \'b0\'a2\'b0\'a2\'c0\'c7 \'b9\'e8\'bf\'ad\'c0\'bb \'c0\'a7\'c4\'a1\'b7\'ce \'b1\'b8\'ba\'d0\'c7\'d8\'be\'df \'c7\'d5\'b4\'cf\'b4\'d9.\
		\'c0\'cc \'b0\'e6\'bf\'ec \'b4\'d9\'b8\'a5 \'b9\'e8\'bf\'ad\'c0\'cc \'c3\'df\'b0\'a1\'b5\'c7\'b0\'d4 \'b5\'c7\'b8\'e9 \'c3\'e2\'b7\'c2\'c0\'bb \'c7\'d2 \'b6\'a7 \'bc\'f6\'c1\'a4\'c0\'bb \'c7\'d8\'be\'df \'c7\'d5\'b4\'cf\'b4\'d9.\
\
=> \'ba\'d0\'b7\'f9\'b8\'a6 \'c7\'d8\'be\'df \'c7\'cf\'b4\'c2\'b5\'a5 \'b5\'a5\'c0\'cc\'c5\'cd \'b8\'f0\'c0\'d3\'b5\'e9\'c0\'bb \'b0\'a1\'c1\'f6\'b0\'ed \'b5\'a5\'c0\'cc\'c5\'cd \'b8\'f0\'c0\'d3\'c0\'bb \'b8\'b8\'b5\'e9 \'b6\'a7\'b4\'c2 \'b9\'d9\'b7\'ce \'b5\'a5\'c0\'cc\'c5\'cd \'b8\'f0\'c0\'d3\'c0\'bb \'b8\'b8\'b5\'e9\'c1\'f6 \'b8\'bb\'b0\'ed\
\'b5\'a5\'c0\'cc\'c5\'cd \'b8\'f0\'c0\'d3\'b0\'fa \'c6\'af\'c2\'a1\'c0\'bb \'c7\'a5\'c7\'f6\'c7\'cf\'b4\'c2 Map\'c0\'bb \'bb\'fd\'bc\'ba\'c7\'d8\'bc\'ad Map\'c0\'c7 \'b8\'f0\'c0\'d3\'c0\'bb \'b8\'b8\'b5\'e9\'be\'ee\'be\'df \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 \'c3\'df\'b0\'a1\'b5\'c7\'b4\'f5\'b6\'f3\'b5\'b5 \'c3\'e2\'b7\'c2\'c7\'cf\'b4\'c2 \'ba\'ce\'ba\'d0\'c0\'bb\
\'bc\'f6\'c1\'a4\'c7\'cf\'c1\'f6 \'be\'ca\'be\'c6\'b5\'b5 \'b5\'cb\'b4\'cf\'b4\'d9.\
\
\'bd\'ba\'b8\'b6\'c6\'ae\'c6\'f9 \'be\'d6\'c7\'c3\'b8\'ae\'c4\'c9\'c0\'cc\'bc\'c7\'c0\'bb \'c0\'cc\'b7\'b1 \'c7\'fc\'c5\'c2\'b7\'ce \'b8\'b8\'b5\'e9\'c1\'f6 \'be\'ca\'c0\'b8\'b8\'e9 \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 \'ba\'af\'b0\'e6\'b5\'c9 \'b6\'a7 \'b8\'b6\'b4\'d9 \'c3\'e2\'b7\'c2\'c7\'cf\'b4\'c2 \'ba\'ce\'ba\'d0\'c0\'bb \'bc\'f6\'c1\'a4\'c7\'cf\'b1\'e2 \'b6\'a7\'b9\'ae\'bf\'a1 \
\'b4\'d9\'bd\'c3 \'b8\'b6\'c4\'cf\'bf\'a1 \'be\'f7\'b7\'ce\'b5\'e5 \'c7\'d8\'bc\'ad \'bd\'c9\'bb\'e7\'b8\'a6 \'b9\'de\'be\'c6\'be\'df\'c7\'cf\'b0\'ed \'c0\'af\'c0\'fa\'b4\'c2 \'b4\'d9\'bd\'c3 \'b4\'d9\'bf\'ee\'b7\'ce\'b5\'e5\'b8\'a6 \'b9\'de\'be\'c6\'be\'df \'c7\'d5\'b4\'cf\'b4\'d9.\
\
\'bd\'c7\'bd\'c0)\
\pard\pardeftab720\partightenfactor0
\cf4 package\cf0  datastructure;\
\
\cf4 import\cf0  java.util.HashMap;\
\
\cf4 public\cf0  \cf4 class\cf0  MapMain3 \{\
\
	\cf4 public\cf0  \cf4 static\cf0  \cf4 void\cf0  main(String[] \cf5 args\cf0 ) \{\
		\cf6 // \'b1\'b9\'b0\'a1\'ba\'b0 \'c3\'e0\'b1\'b8 \'bc\'b1\'bc\'f6 \'c0\'cc\'b8\'a7\'c0\'bb \'c7\'cf\'b3\'aa\'c0\'c7 \'b9\'e8\'bf\'ad\'b7\'ce \'b8\'b8\'b5\'e9\'b1\'e2 - 2\'c2\'f7\'bf\'f8 \'b9\'e8\'bf\'ad\cf0 \
		String [] \cf5 korea\cf0  = \{\cf7 "\'c2\'f7\'b9\'fc\'b1\'d9"\cf0 , \cf7 "\'bc\'d5\'c8\'ef\'b9\'ce"\cf0 , \cf7 "\'c0\'cc\'b5\'bf\'b1\'b9"\cf0 \};\
		String [] \cf5 holland\cf0  = \{\cf7 "\'c5\'a9\'b7\'e7\'c0\'cc\'c7\'c1"\cf0 , \cf7 "\'ba\'a3\'b8\'a3\'c4\'af\'c7\'c1"\cf0 , \cf7 "\'b1\'bc\'b8\'ae\'c6\'ae"\cf0 \};\
		String [] \cf5 england\cf0  = \{\cf7 "\'b8\'ae\'b3\'d7\'c4\'bf"\cf0 , \cf7 "\'bd\'c3\'be\'ee\'b7\'af"\cf0 , \cf7 "\'ba\'a3\'c4\'c4"\cf0 \};\
		String [] \cf5 brazil\cf0  = \{\cf7 "\'b1\'e2\'b8\'b0\'bb\'fe"\cf0 , \cf7 "\'bc\'d2\'c5\'a9\'b6\'f3\'c5\'d7\'bd\'ba"\cf0 \};\
		\
		String [][] \cf5 soccer\cf0  = \{\cf5 korea\cf0 , \cf5 holland\cf0 , \cf5 england\cf0 , \cf5 brazil\cf0 \};\
		\
		\cf6 // \'c0\'cc\'c2\'f7\'bf\'f8 \'b9\'e8\'bf\'ad\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd \'c3\'e2\'b7\'c2\'c7\'cf\'b1\'e2\cf0 \
		\cf6 // \'b1\'b9\'b0\'a1\'c0\'cc\'b8\'a7 - \'bc\'b1\'bc\'f6\'b8\'ed\'b4\'dc \'c7\'fc\'c5\'c2\'b7\'ce \'c3\'e2\'b7\'c2\cf0 \
		\cf4 for\cf0 (\cf4 int\cf0  \cf5 i\cf0 =0;\cf5 i\cf0 <\cf5 soccer\cf0 .\cf8 length\cf0 ; \cf5 i\cf0 =\cf5 i\cf0 +1) \{\
			\cf6 // \'b1\'b9\'b0\'a1 \'c0\'cc\'b8\'a7 \'c3\'e2\'b7\'c2\cf0 \
			\cf4 if\cf0 (\cf5 i\cf0 ==0) \{\
				System.\cf8 out\cf0 .printf(\cf7 "\'c7\'d1\'b1\'b9:"\cf0 );\
			\}\cf4 else\cf0  \cf4 if\cf0 (\cf5 i\cf0 ==1) \{\
				System.\cf8 out\cf0 .printf(\cf7 "\'c8\'ad\'b6\'f5:"\cf0 );\
			\}\cf4 else\cf0  \cf4 if\cf0 (\cf5 i\cf0 ==2) \{\
				System.\cf8 out\cf0 .printf(\cf7 "\'bf\'b5\'b1\'b9:"\cf0 );\
			\}\cf4 else\cf0  \{\
				System.\cf8 out\cf0 .printf(\cf7 "\'ba\'ea\'c1\'fa:"\cf0 );\
			\}\
			\
			\cf6 // \'bc\'b1\'bc\'f6 \'b8\'ed\'b4\'dc \'c3\'e2\'b7\'c2\cf0 \
			String [] \cf5 temp\cf0  = \cf5 soccer\cf0 [\cf5 i\cf0 ];\
			\cf4 for\cf0 (String \cf5 imsi\cf0  : \cf5 temp\cf0 ) \{\
				System.\cf8 out\cf0 .printf(\cf7 "%10s"\cf0 , \cf5 imsi\cf0 );\
			\}\
			System.\cf8 out\cf0 .printf(\cf7 "\\n"\cf0 );\
		\}\
		System.\cf8 out\cf0 .printf(\cf7 "=======================================\\n"\cf0 );\
		\cf6 // \'b9\'e8\'bf\'ad\'b5\'e9\'c0\'bb \'b0\'a1\'c1\'f6\'b0\'ed \'b9\'e8\'bf\'ad\'c0\'bb \'b8\'b8\'b5\'e9 \'b6\'a7\'b4\'c2 \'ba\'d0\'b7\'f9\'b8\'a6 \'c0\'a7\'c7\'d8\'bc\'ad \'b0\'a2 \'b9\'e8\'bf\'ad\'b5\'e9\'c0\'bb Map\'c0\'b8\'b7\'ce \'b8\'b8\'b5\'e9\'b0\'ed \'b1\'d7 Map\'b5\'e9\'c0\'c7 \'b9\'e8\'bf\'ad\'c0\'bb \'b8\'b8\'b5\'e9\'be\'ee\'be\'df \'c7\'d5\'b4\'cf\'b4\'d9.\cf0 \
		HashMap<String, Object> \cf5 map1\cf0  = \cf4 new\cf0  HashMap<>();\
		\cf6 // \'b5\'a5\'c0\'cc\'c5\'cd\'b5\'e9\'c0\'c7 \'c6\'af\'c2\'a1\'c0\'bb \'c0\'fa\'c0\'e5\cf0 \
		\cf5 map1\cf0 .put(\cf7 "\'b1\'b9\'b0\'a1"\cf0 , \cf7 "\'c7\'d1\'b1\'b9"\cf0 );\
		\cf6 // \'bd\'c7\'c1\'a6 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c0\'fa\'c0\'e5\cf0 \
		\cf5 map1\cf0 .put(\cf7 "\'bc\'b1\'bc\'f6"\cf0 , \cf5 korea\cf0 );\
		\
		HashMap<String, Object> \cf5 map2\cf0  = \cf4 new\cf0  HashMap<>();\
		\cf5 map2\cf0 .put(\cf7 "\'b1\'b9\'b0\'a1"\cf0 , \cf7 "\'c8\'ad\'b6\'f5"\cf0 );\
		\cf5 map2\cf0 .put(\cf7 "\'bc\'b1\'bc\'f6"\cf0 , \cf5 holland\cf0 );\
		\
		HashMap<String, Object> \cf5 map3\cf0  = \cf4 new\cf0  HashMap<>();\
		\cf5 map3\cf0 .put(\cf7 "\'b1\'b9\'b0\'a1"\cf0 , \cf7 "\'bf\'b5\'b1\'b9"\cf0 );\
		\cf5 map3\cf0 .put(\cf7 "\'bc\'b1\'bc\'f6"\cf0 , \cf5 england\cf0 );\
		\
		HashMap<String, Object> \cf5 map4\cf0  = \cf4 new\cf0  HashMap<>();\
		\cf5 map4\cf0 .put(\cf7 "\'b1\'b9\'b0\'a1"\cf0 , \cf7 "\'ba\'ea\'c1\'fa"\cf0 );\
		\cf5 map4\cf0 .put(\cf7 "\'bc\'b1\'bc\'f6"\cf0 , \cf5 brazil\cf0 );\
		\
		\cf6 // Map \'b5\'e9\'c0\'c7 \'b9\'e8\'bf\'ad\'c0\'bb \'bb\'fd\'bc\'ba\cf0 \
		\cf6 // \'bd\'c7\'c1\'a6 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5\'bf\'a1\'bc\'ad\'b4\'c2 \'b9\'e8\'bf\'ad\'c0\'cc \'be\'c6\'b4\'cf\'b0\'ed List\'b8\'a6 \'b8\'b8\'b5\'ec\'b4\'cf\'b4\'d9.\cf0 \
		\cf6 // \'b1\'d7\'b7\'a1\'be\'df\'c1\'f6 \'b3\'aa\'c1\'df\'bf\'a1 \'b5\'bf\'c0\'fb\'c0\'b8\'b7\'ce \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c3\'df\'b0\'a1 \'b0\'a1\'b4\'c9\cf0 \
		\ul HashMap\ulnone  [] \cf5 football\cf0  = \{\cf5 map1\cf0 , \cf5 map2\cf0 , \cf5 map3\cf0 , \cf5 map4\cf0 \};\
		\
		\cf4 for\cf0 (\cf4 int\cf0  \cf5 i\cf0 =0;\cf5 i\cf0 <\cf5 football\cf0 .\cf8 length\cf0 ;\cf5 i\cf0 =\cf5 i\cf0 +1) \{\
			\ul HashMap\ulnone  \cf5 map\cf0  = \cf5 football\cf0 [\cf5 i\cf0 ];\
			\cf6 // \'b1\'b9\'b0\'a1 \'c0\'cc\'b8\'a7\'c0\'bb \'c1\'f7\'c1\'a2 \'c3\'e2\'b7\'c2\'c7\'cf\'c1\'f6 \'be\'ca\'b0\'ed map\'bf\'a1\'bc\'ad \'b2\'a8\'b3\'bb\'bc\'ad \'c3\'e2\'b7\'c2\cf0 \
			System.\cf8 out\cf0 .printf(\cf7 "%s:"\cf0 , \cf5 map\cf0 .get(\cf7 "\'b1\'b9\'b0\'a1"\cf0 ));\
			\cf6 // \'c3\'e2\'b7\'c2\'c0\'bb \'c1\'a6\'bf\'dc\'c7\'cf\'b0\'ed \'bb\'e7\'bf\'eb\'c0\'bb \'c7\'d2 \'b6\'a7\'b4\'c2 \'bf\'f8\'b7\'a1\'c0\'c7 \'c0\'da\'b7\'e1\'c7\'fc\'c0\'b8\'b7\'ce \'ba\'af\'c8\'af\'c7\'d8\'bc\'ad \'bb\'e7\'bf\'eb\'c7\'d8\'be\'df \'c7\'d5\'b4\'cf\'b4\'d9.\cf0 \
			String [] \cf5 ar\cf0  = (String [])\cf5 map\cf0 .get(\cf7 "\'bc\'b1\'bc\'f6"\cf0 );\
			\cf4 for\cf0 (String \cf5 player\cf0  : \cf5 ar\cf0 ) \{\
				System.\cf8 out\cf0 .printf(\cf7 "%10s"\cf0 , \cf5 player\cf0 );\
			\}\
			System.\cf8 out\cf0 .printf(\cf7 "\\n"\cf0 );\
		\}\
	\}\
\
\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \'b0\'e1\'b0\'fa)\
\pard\pardeftab720\partightenfactor0
\cf0 \'c7\'d1\'b1\'b9:       \'c2\'f7\'b9\'fc\'b1\'d9       \'bc\'d5\'c8\'ef\'b9\'ce       \'c0\'cc\'b5\'bf\'b1\'b9\
\'c8\'ad\'b6\'f5:      \'c5\'a9\'b7\'e7\'c0\'cc\'c7\'c1      \'ba\'a3\'b8\'a3\'c4\'af\'c7\'c1       \'b1\'bc\'b8\'ae\'c6\'ae\
\'bf\'b5\'b1\'b9:       \'b8\'ae\'b3\'d7\'c4\'bf       \'bd\'c3\'be\'ee\'b7\'af        \'ba\'a3\'c4\'c4\
\'ba\'ea\'c1\'fa:       \'b1\'e2\'b8\'b0\'bb\'fe     \'bc\'d2\'c5\'a9\'b6\'f3\'c5\'d7\'bd\'ba\
=======================================\
\'c7\'d1\'b1\'b9:       \'c2\'f7\'b9\'fc\'b1\'d9       \'bc\'d5\'c8\'ef\'b9\'ce       \'c0\'cc\'b5\'bf\'b1\'b9\
\'c8\'ad\'b6\'f5:      \'c5\'a9\'b7\'e7\'c0\'cc\'c7\'c1      \'ba\'a3\'b8\'a3\'c4\'af\'c7\'c1       \'b1\'bc\'b8\'ae\'c6\'ae\
\'bf\'b5\'b1\'b9:       \'b8\'ae\'b3\'d7\'c4\'bf       \'bd\'c3\'be\'ee\'b7\'af        \'ba\'a3\'c4\'c4\
\'ba\'ea\'c1\'fa:       \'b1\'e2\'b8\'b0\'bb\'fe     \'bc\'d2\'c5\'a9\'b6\'f3\'c5\'d7\'bd\'ba\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
** Properties\
\
=> \'bc\'d3\'bc\'ba\'b0\'fa \'b0\'aa\'c0\'bb \'bd\'d6\'c0\'b8\'b7\'ce \'c0\'fa\'c0\'e5\'c7\'cf\'b4\'c2 \'c0\'da\'b7\'e1\'b1\'b8\'c1\'b6\
=> Map\'c0\'ba Generic\'c0\'bb \'c8\'b0\'bf\'eb\'c7\'d8\'bc\'ad \'b8\'f0\'b5\'e7 \'c0\'da\'b7\'e1\'c7\'fc\'c0\'cc \'b0\'a1\'b4\'c9\'c7\'cf\'c1\'f6\'b8\'b8 Properties \'b4\'c2 Key\'bf\'cd Value \'b8\'f0\'b5\'ce String \'b8\'b8 \'b0\'a1\'b4\'c9\
=> \'c8\'af\'b0\'e6\'bc\'b3\'c1\'a4\'bf\'a1 \'b0\'fc\'b7\'c3\'b5\'c8 \'b3\'bb\'bf\'eb\'b5\'e9\'c0\'bb \'c0\'fa\'c0\'e5\'c7\'cf\'b0\'ed \'c0\'d0\'be\'ee\'bf\'c0\'b4\'c2 \'bf\'eb\'b5\'b5\'b7\'ce \'bb\'e7\'bf\'eb\'b5\'cb\'b4\'cf\'b4\'d9.\
=> \'c6\'c4\'c0\'cf\'b7\'ce \'c0\'fa\'c0\'e5\'c7\'d2 \'b6\'a7\'b4\'c2 Text \'c6\'c4\'c0\'cf\'bf\'a1 key=value \'c7\'fc\'c5\'c2\'b7\'ce \'c7\'cf\'b0\'ed XML \'c6\'c4\'c0\'cf\'b7\'ce \'b8\'b8\'b5\'e9\'be\'ee\'bc\'ad \'bb\'e7\'bf\'eb\'b5\'b5 \'c7\'d5\'b4\'cf\'b4\'d9.\
=> apple \'bf\'a1\'bc\'ad\'b4\'c2 Property List(plist)\'b6\'f3\'b0\'ed \'c7\'d5\'b4\'cf\'b4\'d9.\
\
1. \'c0\'fa\'c0\'e5\
setProperty(String key, String value)\
\
2. \'b0\'a1\'c1\'ae\'bf\'c0\'b1\'e2\
String getProperty(String key)\
\
3. \'c6\'c4\'c0\'cf\'bf\'a1 \'c0\'fa\'c0\'e5\'c7\'cf\'b0\'c5\'b3\'aa \'c0\'fc\'bc\'db\
store(\'c3\'e2\'b7\'c2\'bd\'ba\'c6\'ae\'b8\'b2, String \'c1\'d6\'bc\'ae)\
\
4. xml\'b7\'ce \'c0\'fa\'c0\'e5\
storeToXML(\'c3\'e2\'b7\'c2\'bd\'ba\'c6\'ae\'b8\'b2, String \'c1\'d6\'bc\'ae)\
\
5. \'be\'c6\'c1\'f7\'b1\'ee\'c1\'f6 \'c7\'c1\'b7\'ce\'c1\'a7\'c6\'ae \'bc\'b3\'c1\'a4 \'c6\'c4\'c0\'cf\'c0\'ba xml \'c7\'fc\'c5\'c2\'c0\'c7 \'c7\'c1\'b7\'ce\'c6\'db\'c6\'bc \'c0\'fa\'c0\'e5 \'b9\'e6\'bd\'c4\'c0\'bb \'b8\'b9\'c0\'cc \'bb\'e7\'bf\'eb\'c7\'d5\'b4\'cf\'b4\'d9.\
\'c3\'d6\'b1\'d9\'bf\'a1 \'b5\'ee\'c0\'e5\'c7\'d1 IDE \'b4\'c2 json(Map) \'c7\'fc\'bd\'c4\'c0\'bb \'c0\'cc\'bf\'eb\
\
\'bd\'c7\'bd\'c0)\
\pard\pardeftab720\partightenfactor0
\cf4 package\cf0  datastructure;\
\cf4 import\cf0  java.io.File;\
\cf4 import\cf0  java.io.FileOutputStream;\
\cf4 import\cf0  java.util.Properties;\
\cf4 public\cf0  \cf4 class\cf0  PropertyMain \{\
	\cf4 public\cf0  \cf4 static\cf0  \cf4 void\cf0  main(String[] \cf5 args\cf0 ) \{\
		Properties \cf5 property\cf0  = \cf4 new\cf0  Properties();\
		\cf5 property\cf0 .setProperty(\cf7 "name"\cf0 , \cf7 "java"\cf0 );\
		\cf5 property\cf0 .setProperty(\cf7 "age"\cf0 , \cf7 "28"\cf0 );\
		\
		System.\cf8 out\cf0 .printf(\cf7 "%s\\n"\cf0 , \cf5 property\cf0 .getProperty(\cf7 "name"\cf0 ));\
		\cf6 // \'c7\'f6\'c0\'e7 \'c0\'db\'be\'f7 \'b5\'f0\'b7\'ba\'c5\'e4\'b8\'ae\'bf\'a1 \'c6\'c4\'c0\'cf\'c0\'bb \'bb\'fd\'bc\'ba\cf0 \
		File \cf5 f\cf0  = \cf4 new\cf0  File(\cf7 "./temp.xml"\cf0 );\
		\cf4 try\cf0  \{\
			FileOutputStream \cf5 fos\cf0  = \cf4 new\cf0  FileOutputStream(\cf5 f\cf0 );\
			\cf5 property\cf0 .storeToXML(\cf5 fos\cf0 , \cf7 "\'c7\'f6\'c0\'e7 \'b5\'f0\'b7\'ba\'c5\'e4\'b8\'ae \'c8\'ae\'c0\'ce"\cf0 );\
			\cf5 fos\cf0 .close();\
		\}\cf4 catch\cf0 (Exception \cf5 e\cf0 ) \{\}\
	\}\
\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \'b0\'e1\'b0\'fa)\
\pard\pardeftab720\partightenfactor0
\cf0 java\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
** \'c0\'da\'b7\'e1 \'b1\'b8\'c1\'b6 \'c5\'ac\'b7\'a1\'bd\'ba\
\
1. \'b5\'bf\'c0\'cf\'c7\'d1 \'b5\'a5\'c0\'cc\'c5\'cd\'b5\'e9\'c0\'c7 \'b8\'f0\'c0\'d3\
\
- \'b9\'e8\'bf\'ad : \'c5\'a9\'b1\'e2 \'b0\'ed\'c1\'a4\
- List : ArrayList, LinkedList, Stack, Queue, Deque\
- set : HashSet, LinkedHashSet, TreeSet - \'c1\'df\'ba\'b9\'b5\'c8 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 2\'b9\'f8 \'c0\'fa\'c0\'e5\'c7\'cf\'c1\'f6 \'be\'ca\'b4\'c2\'b4\'d9.\
Link - \'bc\'f8\'bc\'ad\'b4\'eb\'b7\'ce, Tree - \'c5\'a9\'b1\'e2 \'bc\'f8\'bc\'ad\
\
2. \'bf\'a9\'b7\'af \'b0\'b3\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'b9\'ad\'be\'ee\'bc\'ad \'c7\'cf\'b3\'aa\'b8\'a6 \'c7\'a5\'c7\'f6\'c7\'cf\'b4\'c2 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7 \'b8\'f0\'c0\'d3 - key\'bf\'cd value\'b8\'a6 \'bd\'d6\'c0\'b8\'b7\'ce \'c0\'fa\'c0\'e5\
\
- Map : \'b8\'f0\'b5\'e7 \'c0\'da\'b7\'e1\'c7\'fc \'bb\'e7\'bf\'eb\'c0\'cc \'b0\'a1\'b4\'c9, HashMap, LinkedHashMap, TreeMap\
- Properties : \'b9\'ae\'c0\'da\'bf\'ad\'b8\'b8 \'bb\'e7\'bf\'eb\'c0\'cc \'b0\'a1\'b4\'c9\
\
** Collections \'c5\'ac\'b7\'a1\'bd\'ba\
\
=> \'b5\'a5\'c0\'cc\'c5\'cd \'b8\'f0\'c0\'d3\'b0\'fa \'b0\'fc\'b7\'c3\'b5\'c8 \'b8\'de\'bc\'d2\'b5\'e5\'b8\'a6 \'bc\'d2\'c0\'af\'c7\'d1 \'c5\'ac\'b7\'a1\'bd\'ba\
=> \'c1\'f7\'c1\'a2 \'b0\'b4\'c3\'bc \'bb\'fd\'bc\'ba\'c7\'cf\'b4\'c2 \'b0\'e6\'bf\'ec\'b4\'c2 \'be\'f8\'b0\'ed \'b1\'e2\'c1\'b8 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7 \'b8\'f0\'c0\'d3\'b5\'e9\'c0\'bb \'ba\'af\'b0\'e6\'c7\'d8\'bc\'ad \'b8\'ae\'c5\'cf\'c7\'cf\'b4\'c2 static \'b8\'de\'bc\'d2\'b5\'e5\'b8\'a6 \'c1\'d6\'b7\'ce \'c0\'cc\'bf\'eb\
=> synchronized(\'b5\'bf\'b1\'e2\'c8\'ad) : 2\'b0\'b3\'c0\'c7 \'bd\'ba\'b7\'b9\'b5\'e5\'b0\'a1 \'bc\'ad\'b7\'ce \'bc\'f6\'c1\'a4\'c7\'cf\'b7\'c1\'b0\'ed \'c7\'d2 \'b6\'a7 \'c0\'db\'be\'f7\'c0\'c7 \'bc\'f8\'bc\'ad\'b8\'a6 \'b0\'e1\'c1\'a4\'c7\'d8\'bc\'ad \'b5\'bf\'bd\'c3\'bf\'a1 \'bc\'f6\'c1\'a4\'c7\'d2 \'bc\'f6 \'be\'f8\'b5\'b5\'b7\'cf \'c7\'cf\'b4\'c2 \'b0\'cd\
=> unmodifiable : \'bc\'f6\'c1\'a4\'c7\'d2 \'bc\'f6 \'be\'f8\'b4\'c2 \'c0\'d0\'b1\'e2 \'c0\'fc\'bf\'eb\
\
\'b8\'d6\'c6\'bc \'bd\'ba\'b7\'b9\'b5\'e5 \'c8\'af\'b0\'e6\'bf\'a1\'bc\'ad \'be\'c8\'c0\'fc\'c7\'d1 List \'b8\'b8\'b5\'e9\'b1\'e2\
List<String> list = new ArrayList<>();\
List<String> safelist = Collections.synchronizedCollection(list);\
\
\'b1\'e2\'c1\'b8\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'ba\'af\'b0\'e6\'c7\'cf\'c1\'f6 \'b8\'f8\'c7\'cf\'b5\'b5\'b7\'cf \'b8\'b8\'b5\'e9\'b1\'e2\
List<String> readOnlyList = Collections.unmodifiableCollection(list);\
\
=> Set, Map \'b8\'f0\'b5\'ce \'b5\'bf\'c0\'cf\
\
** java.util.Random\
\
=> \'b7\'a3\'b4\'fd\'c7\'d1 \'bc\'fd\'c0\'da \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'b8\'ae\'c5\'cf\'bd\'c3\'c4\'d1\'c1\'d6\'b4\'c2 \'c5\'ac\'b7\'a1\'bd\'ba\
=> \'c4\'c4\'c7\'bb\'c5\'cd\'b4\'c2 \'b7\'a3\'b4\'fd\'c0\'bb \'b8\'b8\'b5\'e9 \'b6\'a7 \'b3\'ad\'bc\'f6\'c7\'a5\'b8\'a6 \'bb\'fd\'bc\'ba\'c7\'d8\'bc\'ad \'c7\'cf\'b3\'aa\'be\'bf \'bc\'f8\'bc\'ad\'b4\'eb\'b7\'ce \'c3\'df\'c3\'e2\
seed \'b0\'a1 \'b3\'ad\'bc\'f6\'c7\'a5\'c0\'c7 \'b9\'f8\'c8\'a3\'c0\'d4\'b4\'cf\'b4\'d9.\
seed \'b0\'a1 \'b0\'b0\'c0\'b8\'b8\'e9 \'b3\'ad\'bc\'f6\'c7\'a5\'c0\'c7 \'b3\'bb\'bf\'eb\'c0\'cc \'b0\'b0\'b1\'e2 \'b6\'a7\'b9\'ae\'bf\'a1 \'bc\'f8\'bc\'ad\'b4\'eb\'b7\'ce \'b5\'bf\'c0\'cf\'c7\'cf\'b0\'d4 \'c3\'df\'c3\'e2\'b5\'cb\'b4\'cf\'b4\'d9.\
=> \'c1\'a4\'c0\'fb \'bd\'c7\'c7\'e0 \'be\'f0\'be\'ee\'bf\'cd \'b5\'bf\'c0\'fb \'bd\'c7\'c7\'e0 \'be\'f0\'be\'ee\'b0\'a1 \'b1\'e2\'ba\'bb seed\'b8\'a6 \'bb\'fd\'bc\'ba\'c7\'cf\'b4\'c2 \'b9\'e6\'b9\'fd\'c0\'cc \'b4\'d9\'b8\'a8\'b4\'cf\'b4\'d9.\
\'c1\'a4\'c0\'fb \'bd\'c7\'c7\'e0 \'be\'f0\'be\'ee(C)\'b4\'c2 seed \'bc\'b3\'c1\'a4\'c0\'bb \'c7\'cf\'c1\'f6 \'be\'ca\'c0\'b8\'b8\'e9 seed \'b0\'a1 \'b1\'e2\'ba\'bb\'c0\'fb\'c0\'b8\'b7\'ce \'b8\'f0\'b5\'ce \'b0\'b0\'bd\'c0\'b4\'cf\'b4\'d9.\
\'b5\'bf\'c0\'fb \'bd\'c7\'c7\'e0 \'be\'f0\'be\'ee(java)\'b4\'c2 seed \'bc\'b3\'c1\'a4\'c0\'bb \'c7\'cf\'c1\'f6 \'be\'ca\'c0\'b8\'b8\'e9 seed\'b0\'a1 \'c7\'f6\'c0\'e7 \'bd\'c3\'b0\'a3\'c0\'bb \'b0\'a1\'c1\'f6\'b0\'ed \'bc\'b3\'c1\'a4\'c7\'cf\'b0\'ed, \'be\'ee\'b6\'b2 \'b0\'aa\'c0\'cc \'b3\'aa\'bf\'c3\'c1\'f6 \'bf\'b9\'c3\'f8\'c7\'d2 \'bc\'f6 \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9.\
\
1. \'bb\'fd\'bc\'ba\'c0\'da\
Random()\
Random(long seed)\
\
2. \'c1\'d6\'bf\'e4 \'b8\'de\'bc\'d2\'b5\'e5\
float nextFloat()\
int nextInt()\
int nextInt(int su) : su\'b7\'ce \'b3\'aa\'b4\'ab \'b3\'aa\'b8\'d3\'c1\'f6\'b8\'a6 \'b7\'a3\'b4\'fd\'c7\'cf\'b0\'d4 \'b8\'ae\'c5\'cf\
\
3. \'c0\'cc \'c5\'ac\'b7\'a1\'bd\'ba\'c0\'c7 \'bf\'eb\'b5\'b5\
=> \'b7\'a3\'b4\'fd\'c7\'cf\'b0\'d4 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c3\'df\'c3\'e2 : \'b8\'d3\'bd\'c5\'b7\'af\'b4\'d7\'c0\'cc\'b3\'aa \'b5\'a5\'c0\'cc\'c5\'cd \'b0\'cb\'c1\'f5\'bf\'a1\'bc\'ad \'c0\'cc\'bf\'eb\
=> \'b0\'d4\'c0\'d3\'bf\'a1\'bc\'ad \'be\'c6\'c0\'cc\'c5\'db\'c0\'cc\'b3\'aa \'b8\'f3\'bd\'ba\'c5\'cd \'bb\'fd\'bc\'ba \'b5\'ee\'bf\'a1 \'c0\'cc\'bf\'eb\'c7\'cf\'b4\'c2\'b5\'a5 \'bd\'c3\'b5\'e5\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'d8\'bc\'ad \'c0\'cf\'c1\'a4\'c7\'d1 \'c6\'d0\'c5\'cf\'c0\'bb \'b0\'ae\'b5\'b5\'b7\'cf \'c7\'d5\'b4\'cf\'b4\'d9.\
\
\'bd\'c7\'bd\'c0)\
\pard\pardeftab720\partightenfactor0
\cf4 package\cf0  util;\
\cf4 import\cf0  java.util.Random;\
\cf4 public\cf0  \cf4 class\cf0  RandomMain \{\
\
	\cf4 public\cf0  \cf4 static\cf0  \cf4 void\cf0  main(String[] \cf5 args\cf0 ) \{\
		\cf6 // java.util.Random\'c0\'ba \'b7\'a3\'b4\'fd\'c7\'d1 \'bc\'fd\'c0\'da\'b8\'a6 \'c3\'df\'c3\'e2\'c7\'cf\'b1\'e2 \'c0\'a7\'c7\'d1 \'c5\'ac\'b7\'a1\'bd\'ba\cf0 \
		\
		String [] \cf5 ar\cf0  = \{\cf7 "\'b9\'df\'b7\'bb\'c5\'e4"\cf0 , \cf7 "\'c4\'ae\'ba\'a3\'c1\'ea"\cf0 , \cf7 "\'b5\'e5\'b6\'f4\'bc\'d2\'bd\'ba"\cf0 , \cf7 "\'b8\'f0\'c4\'da\'b9\'d9"\cf0 , \cf7 "\'b5\'a5\'ba\'f4\'bb\'fe\'c0\'cc"\cf0 \};\
		\cf6 // \'bf\'cf\'c0\'fc \'b7\'a3\'b4\'fd : seed \'bc\'b3\'c1\'a4\'c0\'bb \'c7\'cf\'c1\'f6 \'be\'ca\'c0\'b8\'b8\'e9 \'b5\'cb\'b4\'cf\'b4\'d9.\cf0 \
		\cf6 // \'bb\'fd\'bc\'ba\'c0\'da\'bf\'a1 \'c1\'a4\'bc\'f6 \'b0\'aa\'c0\'bb \'b4\'eb\'c0\'d4\'c7\'cf\'b8\'e9 \'c0\'cf\'c1\'a4\'c7\'d1 \'c6\'d0\'c5\'cf\'c0\'b8\'b7\'ce \'b3\'aa\'bf\'c9\'b4\'cf\'b4\'d9.\cf0 \
		Random \cf5 r\cf0  = \cf4 new\cf0  Random(20);\
		System.\cf8 out\cf0 .printf(\cf7 "%s\\n"\cf0 , \cf5 ar\cf0 [\cf5 r\cf0 .nextInt(\cf5 ar\cf0 .\cf8 length\cf0 )]);\
		System.\cf8 out\cf0 .printf(\cf7 "%s\\n"\cf0 , \cf5 ar\cf0 [\cf5 r\cf0 .nextInt(\cf5 ar\cf0 .\cf8 length\cf0 )]);\
		System.\cf8 out\cf0 .printf(\cf7 "%s\\n"\cf0 , \cf5 ar\cf0 [\cf5 r\cf0 .nextInt(\cf5 ar\cf0 .\cf8 length\cf0 )]);\
	\}\
\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \'b0\'e1\'b0\'fa)\
\pard\pardeftab720\partightenfactor0
\cf0 \'b8\'f0\'c4\'da\'b9\'d9\
\'c4\'ae\'ba\'a3\'c1\'ea\
\'c4\'ae\'ba\'a3\'c1\'ea\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
** \'bf\'ac\'bd\'c0\'b9\'ae\'c1\'a6\
=> \'b3\'bb\'b0\'a1 \'c0\'d4\'b7\'c2\'c7\'d1 6\'b0\'b3\'c0\'c7 \'b7\'ce\'b6\'c7 \'bc\'fd\'c0\'da\'bf\'cd Random\'c0\'cc \'bb\'fd\'bc\'ba\'c7\'d1 6\'b0\'b3\'c0\'c7 \'bc\'fd\'c0\'da\'b0\'a1 \'b8\'ee \'b0\'b3\'b0\'a1 \'c0\'cf\'c4\'a1\'c7\'cf\'b4\'c2 \'c1\'f6 \'c8\'ae\'c0\'ce\'c7\'cf\'b4\'c2 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5\
\
** \'b3\'af\'c2\'a5 \'b0\'fc\'b7\'c3 \'c5\'ac\'b7\'a1\'bd\'ba\
\
1. java.util.Date\
=> \'b3\'af\'c2\'a5 \'c1\'a4\'ba\'b8\'b8\'a6 \'c0\'fa\'c0\'e5\'c7\'cf\'b4\'c2 \'c5\'ac\'b7\'a1\'bd\'ba\
=> 2038\'b3\'e2\'b1\'ee\'c1\'f6\'b8\'b8 \'bb\'e7\'bf\'eb \'b0\'a1\'b4\'c9\
\
	1) \'bb\'fd\'bc\'ba\'c0\'da\
	Date() : \'c7\'f6\'c0\'e7 \'b3\'af\'c2\'a5 \'b9\'d7 \'bd\'c3\'b0\'a3\'c0\'bb \'b0\'ae\'b4\'c2 \'b0\'b4\'c3\'bc\'b0\'a1 \'bb\'fd\'bc\'ba\
	Date(long timeInMillis) : 1970\'b3\'e2 1\'bf\'f9 1\'c0\'cf \'c0\'da\'c1\'a4\'c0\'cc\'c8\'c4 \'c1\'f6\'b3\'aa\'b0\'a3 1/1000\'c3\'ca \'b4\'dc\'c0\'a7\'c0\'c7 \'bd\'c3\'b0\'a3\'c0\'bb \'c0\'d4\'b7\'c2\'c7\'d8\'bc\'ad \'bb\'fd\'bc\'ba\
	Date(\'b3\'e2, \'bf\'f9, \'c0\'cf) : \'b3\'e2\'c0\'ba 1900\'b3\'e2 \'c0\'cc\'c8\'c4 \'c1\'f6\'b3\'aa\'bf\'c2 \'b3\'e2\'b5\'b5, \'bf\'f9\'c0\'ba -1 \'c7\'d8\'bc\'ad \'bc\'b3\'c1\'a4\
	Date(\'b3\'e2, \'bf\'f9, \'c0\'cf, \'bd\'c3, \'ba\'d0, \'c3\'ca) \
\
	2) \'c1\'d6\'bf\'e4 \'b8\'de\'bc\'d2\'b5\'e5\
	toString() : \'b3\'af\'c2\'a5 \'b9\'d7 \'bd\'c3\'b0\'a3\'c0\'bb \'c0\'da\'bc\'bc\'c7\'cf\'b0\'d4 \'b9\'ae\'c0\'da\'bf\'ad\'b7\'ce \'b8\'b8\'b5\'e9\'be\'ee\'bc\'ad \'b8\'ae\'c5\'cf\
	\'b3\'af\'c2\'a5\'bf\'cd \'bd\'c3\'b0\'a3\'c0\'bb \'ba\'ce\'ba\'d0\'c0\'fb\'c0\'b8\'b7\'ce \'b8\'ae\'c5\'cf\'c7\'d8\'c1\'d6\'b4\'c2 get \'b8\'de\'bc\'d2\'b5\'e5\
\
	3) \'b0\'fc\'b0\'e8\'c7\'fc \'b5\'a5\'c0\'cc\'c5\'cd\'ba\'a3\'c0\'cc\'bd\'ba\'c0\'c7 \'b3\'af\'c2\'a5 \'c5\'b8\'c0\'d4\'b0\'fa \'b9\'d9\'b7\'ce \'bf\'ac\'b5\'bf\'c0\'cc \'b0\'a1\'b4\'c9\
\
2. java.util.Calendar\
=> 2038\'b3\'e2 \'c0\'cc\'c8\'c4\'bf\'a1\'b5\'b5 \'bb\'e7\'bf\'eb \'b0\'a1\'b4\'c9\'c7\'d1 \'b3\'af\'c2\'a5 \'c5\'ac\'b7\'a1\'bd\'ba\
=> \'c3\'df\'bb\'f3 \'c5\'ac\'b7\'a1\'bd\'ba\'b6\'f3\'bc\'ad \'bb\'fd\'bc\'ba\'c0\'da\'b8\'a6 \'c0\'cc\'bf\'eb\'c7\'d1 \'b0\'b4\'c3\'bc \'bb\'fd\'bc\'ba\'c0\'ba \'be\'c8\'b5\'ca\
=> getInstance()\'b6\'f3\'b4\'c2 static \'b8\'de\'bc\'d2\'b5\'e5\'b8\'a6 \'c0\'cc\'bf\'eb\'c7\'d8\'bc\'ad \'b0\'b4\'c3\'bc \'bb\'fd\'bc\'ba\'c0\'bb \'c7\'d2 \'bc\'f6 \'c0\'d6\'c0\'bd\
\'c7\'f6\'c0\'e7 \'b3\'af\'c2\'a5 \'b9\'d7 \'bd\'c3\'b0\'a3\'c0\'bb \'b0\'a1\'c1\'f6\'b0\'ed \'b0\'b4\'c3\'bc\'b0\'a1 \'bb\'fd\'bc\'ba\
\
	1) \'b3\'af\'c2\'a5 \'b9\'d7 \'bd\'c3\'b0\'a3 \'bc\'b3\'c1\'a4\
	set(static final field, \'b0\'aa)\
\
	2) \'b3\'af\'c2\'a5 \'b9\'d7 \'bd\'c3\'b0\'a3\'c0\'bb \'b0\'a1\'c1\'ae\'bf\'c0\'b1\'e2\
	get(static final field)\
\
	3) toString \'c0\'e7\'c1\'a4\'c0\'c7 \'b5\'c7\'be\'ee \'c0\'d6\'b4\'c2\'b5\'a5 \'be\'c6\'c1\'d6 \'c0\'da\'bc\'bc\'c7\'cf\'b0\'d4 \'b3\'af\'c2\'a5 \'b9\'d7 \'bd\'c3\'b0\'a3\'c1\'a4\'ba\'b8\'b8\'a6 \'b9\'ae\'c0\'da\'bf\'ad\'b7\'ce \'b8\'b8\'b5\'e9\'be\'ee\'bc\'ad \'b8\'ae\'c5\'cf\
\
	4) long getTimeInMillis() : 1970\'b3\'e2 1\'bf\'f9 1\'c0\'cf \'c0\'da\'c1\'a4 \'c0\'cc\'c8\'c4\'bf\'a1 \'c1\'f6\'b3\'aa\'bf\'c2 \'bd\'c3\'b0\'a3\'c0\'bb long\'c0\'b8\'b7\'ce \'b8\'ae\'c5\'cf\
\
	5) setTime(Date \'b0\'b4\'c3\'bc) : Date \'b0\'b4\'c3\'bc\'b8\'a6 \'b0\'a1\'c1\'f6\'b0\'ed Calendar \'b0\'b4\'c3\'bc\'b8\'a6 \'bb\'fd\'bc\'ba\
	=> Calendar \'b0\'a1 Date \'ba\'b8\'b4\'d9 \'c1\'a4\'c8\'ae\'c7\'cf\'b0\'d4 \'bd\'c3\'b0\'a3\'c0\'bb \'c7\'a5\'c7\'f6\'c7\'cf\'b4\'c2\'b5\'a5 \'b5\'a5\'c0\'cc\'c5\'cd\'ba\'a3\'c0\'cc\'bd\'ba\'bf\'cd \'c1\'f7\'c1\'a2 \'bf\'ac\'b5\'bf\'c0\'cc \'be\'c8\'b5\'ca\
\
3. java.util.GregorianCalendar\
=> Calendar\'b8\'a6 \'bb\'f3\'bc\'d3\'b9\'de\'be\'c6\'bc\'ad \'b8\'b8\'b5\'e9\'be\'ee\'c1\'f8 \'b3\'af\'c2\'a5 \'b0\'fc\'b7\'c3 \'c5\'ac\'b7\'a1\'bd\'ba\
\
4. java.sql.Date\
=> \'b5\'a5\'c0\'cc\'c5\'cd\'ba\'a3\'c0\'cc\'bd\'ba\'bf\'cd \'c1\'f7\'c1\'a2 \'bf\'ac\'b5\'bf \'b0\'a1\'b4\'c9\
=> \'b8\'c5\'b0\'b3\'ba\'af\'bc\'f6\'b0\'a1 \'be\'f8\'b4\'c2 \'bb\'fd\'bc\'ba\'c0\'da\'b0\'a1 \'be\'f8\'c0\'bd\
=> toString \'b8\'de\'bc\'d2\'b5\'e5\'b0\'a1 \'b3\'af\'c2\'a5 \'b8\'b8 \'b9\'ae\'c0\'da\'bf\'ad\'b7\'ce \'b8\'ae\'c5\'cf\'c7\'d8\'bc\'ad \'b9\'d9\'b7\'ce \'c3\'e2\'b7\'c2\'c7\'cf\'b4\'c2 \'b0\'cd\'c0\'cc \'c6\'ed\'b8\'ae\
\
5. \'ba\'d2\'b1\'e2\'bf\'cd \'b0\'fc\'b7\'c3\'b5\'c8 \'b3\'af\'c2\'a5 \'c5\'ac\'b7\'a1\'bd\'ba\'b5\'b5 \'ba\'b0\'b5\'b5\'b7\'ce \'c1\'a6\'b0\'f8\
\
6. \'b3\'af\'c2\'a5\'bf\'cd \'b0\'fc\'b7\'c3\'b5\'c8 \'c0\'db\'be\'f7 \'c1\'df \'c1\'df\'bf\'e4\'c7\'d1 \'b0\'cd\'c0\'ba \'bf\'f8\'c7\'cf\'b4\'c2 \'b3\'af\'c2\'a5 \'b9\'d7 \'bd\'c3\'b0\'a3\'c0\'bb \'b8\'b8\'b5\'e9\'be\'ee\'bc\'ad Date\'b7\'ce \'b8\'b8\'b5\'e9 \'bc\'f6 \'c0\'d6\'b4\'c2\'c1\'f6 \
\
\'bd\'c7\'bd\'c0)\
\pard\pardeftab720\partightenfactor0
\cf4 package\cf0  util;\
\
\cf4 import\cf0  java.util.Date;\
\cf4 import\cf0  java.util.GregorianCalendar;\
\
\cf4 public\cf0  \cf4 class\cf0  DateMain \{\
\
	\cf4 public\cf0  \cf4 static\cf0  \cf4 void\cf0  main(String[] \cf5 args\cf0 ) \{\
		\cf6 // 1986\'b3\'e2 5\'bf\'f9 5\'c0\'cf\'c0\'bb Date \'b0\'b4\'c3\'bc\'b7\'ce \'b8\'b8\'b5\'e9\'b1\'e2\cf0 \
		\cf6 // \'b9\'d9\'b7\'ce \'b0\'b4\'c3\'bc\'b8\'a6 \'bb\'fd\'bc\'ba\'c7\'cf\'b8\'e9 Deprecated \'b8\'de\'bd\'c3\'c1\'f6 - \'b0\'e6\'b0\'ed\'b0\'a1 \'b9\'df\'bb\'fd\cf0 \
		Date \cf5 date\cf0  = \cf4 new\cf0  \ul \strike \strikec0 Date\strike0\striked0 (86, 4, 5)\ulnone ;\
		System.\cf8 out\cf0 .printf(\cf7 "%s\\n"\cf0 , \cf5 date\cf0 );\
		\
		\cf6 // GregorianCalendar\'b8\'a6 \'c0\'cc\'bf\'eb\'c7\'d8\'bc\'ad \'b0\'b4\'c3\'bc\'b8\'a6 \'bb\'fd\'bc\'ba\'c7\'cf\'b0\'ed \'c0\'cc \'c1\'a4\'ba\'b8\'b8\'a6 \'b0\'a1\'c1\'f6\'b0\'ed Date \'b0\'b4\'c3\'bc\'b8\'a6 \'b8\'b8\'b5\'e9\'be\'ee\'bc\'ad \'bb\'e7\'bf\'eb\cf0 \
		\cf6 // \'bf\'f9\'c0\'ba -1 \'c7\'d8\'bc\'ad \'bc\'b3\'c1\'a4\cf0 \
		GregorianCalendar \cf5 cal\cf0  = \cf4 new\cf0  GregorianCalendar(1986, 4, 5);\
		\cf5 date\cf0  = \cf4 new\cf0  Date(\cf5 cal\cf0 .getTimeInMillis());\
		System.\cf8 out\cf0 .printf(\cf7 "%s\\n"\cf0 , \cf5 date\cf0 );\
		\
		\cf6 // java.sql.Date \'bb\'e7\'bf\'eb\cf0 \
		\cf6 // \'bc\'ad\'b7\'ce \'b4\'d9\'b8\'a5 \'c6\'d0\'c5\'b0\'c1\'f6\'bf\'a1 \'c0\'d6\'b4\'c2 \'b5\'bf\'c0\'cf\'c7\'d1 \'c5\'ac\'b7\'a1\'bd\'ba\'b8\'a6 \'b0\'b0\'c0\'cc \'bb\'e7\'bf\'eb\'c7\'d2 \'b6\'a7\'b4\'c2 \'b3\'aa\'c1\'df\'bf\'a1 \'bb\'e7\'bf\'eb\'b5\'c7\'b4\'c2 \'c5\'ac\'b7\'a1\'bd\'ba\'bf\'a1 \'c6\'d0\'c5\'b0\'c1\'f6 \'c0\'cc\'b8\'a7\'c0\'bb \'ba\'d9\'bf\'a9\'bc\'ad \'c0\'db\cf0 \
		\cf6 // toString \'c0\'bb \'c8\'a3\'c3\'e2\'c7\'cf\'b8\'e9 \'b3\'e2 \'bf\'f9 \'c0\'cf \'b8\'b8 \'c3\'e2\'b7\'c2\'b5\'cb\'b4\'cf\'b4\'d9.\cf0 \
		java.sql.Date \cf5 d\cf0  = \cf4 new\cf0  java.sql.Date(\cf5 cal\cf0 .getTimeInMillis());\
		System.\cf8 out\cf0 .printf(\cf7 "%s\\n"\cf0 , \cf5 d\cf0 );\
	\}\
\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\'b0\'e1\'b0\'fa)\
\pard\pardeftab720\partightenfactor0
\cf0 Mon May 05 00:00:00 KST 1986\
Mon May 05 00:00:00 KST 1986\
1986-05-05\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\
\
\
\
\
\
\
\
\
\
\
\
}