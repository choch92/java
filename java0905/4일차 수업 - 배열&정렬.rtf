{\rtf1\ansi\ansicpg949\cocoartf1671\cocoasubrtf500
{\fonttbl\f0\fnil\fcharset129 NanumMyeongjo;}
{\colortbl;\red255\green255\blue255;\red127\green0\blue85;\red106\green62\blue62;\red63\green127\blue95;
\red0\green0\blue192;\red42\green0\blue255;\red194\green0\blue4;\red255\green0\blue0;\red0\green104\blue218;
\red0\green0\blue0;\red161\green0\blue63;\red0\green200\blue125;}
{\*\expandedcolortbl;;\csgenericrgb\c49804\c0\c33333;\csgenericrgb\c41569\c24314\c24314;\csgenericrgb\c24706\c49804\c37255;
\csgenericrgb\c0\c0\c75294;\csgenericrgb\c16471\c0\c100000;\cssrgb\c81490\c4389\c0;\csgenericrgb\c100000\c0\c0;\csgenericrgb\c0\c40784\c85490;
\cssrgb\c0\c1\c1;\cssrgb\c69983\c8943\c31331;\csgenericrgb\c0\c78431\c49020;}
\paperw11900\paperh16840\margl1440\margr1440\vieww19980\viewh19100\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 4\'c0\'cf\'c2\'f7(cho)\
\
**3\'c0\'cf\'c0\'c7 \'c1\'a6\'be\'ee\'b9\'ae \'ba\'b9\'bd\'c0\
\
\'bd\'c7\'bd\'c0)\
\pard\pardeftab720\partightenfactor0
\cf2 public\cf0  \cf2 class\cf0  PrimeCheck \{\
\
	\cf2 public\cf0  \cf2 static\cf0  \cf2 void\cf0  main(String[] \cf3 args\cf0 ) \{\
		\cf4 // 2\'ba\'ce\'c5\'cd 1000\'b1\'ee\'c1\'f6 \'bc\'d2\'bc\'f6\'c0\'c7 \'b0\'b3\'bc\'f6 \'bc\'bc\'b1\'e2\cf0 \
		\cf4 // \'bc\'d2\'bc\'f6 : 2\'ba\'ce\'c5\'cd \'c0\'da\'bd\'c5\'c0\'c7 \'c0\'fd\'b9\'dd\'c0\'cc \'bc\'fd\'c0\'da\'b1\'ee\'c1\'f6 \'b3\'aa\'b4\'a9\'be\'ee\'bc\'ad \'c7\'d1\'b9\'f8\'b5\'b5 \'b3\'aa\'b4\'a9\'be\'ee\'b6\'b3\'be\'ee\'c1\'f6\'c1\'f6 \'be\'ca\'b4\'c2 \'bc\'fd\'c0\'da\cf0 \
		\cf4 // 2\'ba\'ce\'c5\'cd 1000\'b1\'ee\'c1\'f6 \'b9\'dd\'ba\'b9\cf0 \
\
		\cf4 // \'b5\'a5\'c0\'cc\'c5\'cd \'b0\'b3\'bc\'f6\'b8\'a6 \'c0\'fa\'c0\'e5\'c7\'d2 \'ba\'af\'bc\'f6\cf0 \
		\cf2 int\cf0  \cf3 cnt\cf0  = 0;\
		\cf2 for\cf0  (\cf2 int\cf0  \cf3 i\cf0  = 2; \cf3 i\cf0  <= 1000; \cf3 i\cf0  = \cf3 i\cf0  + 1) \{\
			\cf4 // \'bc\'d2\'bc\'f6 \'c6\'c7\'ba\'b0\'c0\'bb \'c0\'a7\'c7\'d1 \'ba\'af\'bc\'f6\cf0 \
			\cf2 int\cf0  \cf3 flag\cf0  = 0;\
			\cf4 // \'bc\'d2\'bc\'f6 \'c6\'c7\'ba\'b0\cf0 \
			\cf2 for\cf0  (\cf2 int\cf0  \cf3 j\cf0  = 2; \cf3 j\cf0  <= \cf3 i\cf0  / 2; \cf3 j\cf0  = \cf3 j\cf0  + 1) \{\
				\cf2 if\cf0  (\cf3 i\cf0  % \cf3 j\cf0  == 0) \{\
					\cf3 flag\cf0  = 1;\
					\cf2 break\cf0 ;\
				\}\
			\}\
			\cf4 // \'bc\'d2\'bc\'f6 \'b6\'f3\'b8\'e9 \ul cnt\ulnone \'b0\'aa\'c0\'bb 1\'c1\'f5\'b0\'a1\cf0 \
			\cf2 if\cf0  (\cf3 flag\cf0  == 0) \{\
				\cf3 cnt\cf0  = \cf3 cnt\cf0  + 1;\
			\}\
		\}\
		System.\cf5 out\cf0 .printf(\cf6 "\'bc\'d2\'bc\'f6 \'b0\'b3\'bc\'f6 : %d\\n"\cf0 , \cf3 cnt\cf0 );\
	\}\
\}\
\
\'b0\'e1\'b0\'fa)\
\'bc\'d2\'bc\'f6 \'b0\'b3\'bc\'f6 : 168\
\
**\'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7 \'b8\'f0\'c0\'d3\
\
- \'b9\'e8\'bf\'ad(Array - List) : \'ba\'f1\'b1\'b3 \'b0\'a1\'b4\'c9\'c7\'d1(\'b5\'bf\'c0\'cf\'c7\'d1 \'c7\'fc\'c5\'c2\'c0\'c7 \'c0\'da\'b7\'e1\'c7\'fc) \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'b8\'f0\'be\'c6\'b3\'f5\'c0\'ba \'c0\'da\'b7\'e1\'b1\'b8\'c1\'b6\
=> \'c5\'d7\'c0\'cc\'ba\'ed\'c0\'c7 \'bf\'ad\'c0\'c7 \'b0\'b3\'b3\'e4\'c0\'d4\'b4\'cf\'b4\'d9.\
\
- Class \'b6\'c7\'b4\'c2 Map(Dictionary) : \'c5\'d7\'c0\'cc\'ba\'ed\'c0\'c7 \'c7\'e0\'c0\'c7 \'b0\'b3\'b3\'e4\'c0\'d4\'b4\'cf\'b4\'d9.\
=> \'b8\'f0\'bf\'a9\'bc\'ad \'c7\'cf\'b3\'aa\'b8\'a6 \'b3\'aa\'c5\'b8\'b3\'bb\'b1\'e2 \'c0\'a7\'c7\'d1 \'b8\'f1\'c0\'fb\'c0\'b8\'b7\'ce \'bb\'e7\'bf\'eb\
\
- \'c5\'d7\'c0\'cc\'ba\'ed \'b1\'b8\'c1\'b6\'b8\'a6 \'b8\'b8\'b5\'e9 \'b6\'a7\'b4\'c2 Class\'c0\'c7 List \'b6\'c7\'b4\'c2 Map\'c0\'c7 List\'b8\'a6 \'b8\'b8\'b5\'ec\'b4\'cf\'b4\'d9. \
\
**Array\
\
=> \'c5\'a9\'b1\'e2 \'ba\'af\'b0\'e6\'c0\'cc \'be\'c8\'b5\'c7\'b4\'c2 \'ba\'f1\'b1\'b3 \'b0\'a1\'b4\'c9\'c7\'d1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'b8\'f0\'be\'c6\'b3\'f5\'c0\'ba \'c0\'da\'b7\'e1\'b1\'b8\'c1\'b6\
=> \'c5\'a9\'b1\'e2 \'ba\'af\'b0\'e6\'c0\'cc \'be\'c8\'b5\'c8\'b4\'d9\'b4\'c2 \'b0\'cd\'c0\'cc \'b4\'d9\'b8\'a5 List\'bf\'cd \'b4\'d9\'b8\'a5 \'c1\'a1\'c0\'d4\'b4\'cf\'b4\'d9.\
\
	1. 1\'c2\'f7\'bf\'f8 \'b9\'e8\'bf\'ad\
	=> \'c2\'f7\'bf\'f8\'c0\'cc 1\'b0\'b3\'c0\'ce \'b9\'e8\'bf\'ad\
\
		1) \'bb\'fd\'bc\'ba\
		=> \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c3\'b3\'c0\'bd\'ba\'ce\'c5\'cd \'b0\'a1\'c1\'f6\'b0\'ed \'c0\'d6\'b4\'c2 \'b0\'e6\'bf\'ec\
		=> \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7 \'c0\'da\'b7\'e1\'c7\'fc [] \'b9\'e8\'bf\'ad\'c0\'cc\'b8\'a7 = \{\'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'b3\'aa\'bf\'ad\};\
		ex) int [] ar = \{100, 300, 200\};\
\
		=> \'c3\'b3\'c0\'bd\'bf\'a1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'b0\'a1\'c1\'f6\'b0\'ed \'c0\'d6\'c1\'f6 \'be\'ca\'c0\'ba \'b0\'e6\'bf\'ec\
		=> \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7 \'c0\'da\'b7\'e1\'c7\'fc [] \'b9\'e8\'bf\'ad\'c0\'cc\'b8\'a7 = new \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7\'c0\'da\'b7\'e1\'c7\'fc[\'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7 \'b0\'b3\'bc\'f6];\
		=> \'c0\'cc\'b7\'b8\'b0\'d4 \'b8\'b8\'b5\'e9\'b8\'e9 \'bc\'fd\'c0\'da \'c0\'da\'b7\'e1\'c7\'fc\'c0\'ba 0, boolean\'c0\'ba false, \'b3\'aa\'b8\'d3\'c1\'f6\'b4\'c2 null(\'be\'c6\'c1\'f7 \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 \'be\'f8\'c0\'bd)\'b7\'ce \'c3\'ca\'b1\'e2\'c8\'ad \'b5\'cb\'b4\'cf\'b4\'d9.\
		ex) int [] xr = new int[5]; //\'c1\'a4\'bc\'f6 5\'b0\'b3\'b8\'a6 \'c0\'fa\'c0\'e5\'c7\'d2 \'bc\'f6 \'c0\'d6\'b4\'c2 \'b9\'e8\'bf\'ad\'c0\'bb \'bb\'fd\'bc\'ba\
\
		2) \'b9\'e8\'bf\'ad\'c0\'c7 \'bc\'d3\'bc\'ba(\'b0\'b4\'c3\'bc\'c0\'c7 \'bc\'ba\'c1\'fa\'c0\'bb \'b3\'aa\'c5\'b8\'b3\'bb\'b4\'c2 \'ba\'af\'bc\'f6)\
		=> length : \'b9\'e8\'bf\'ad\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd \'b0\'b3\'bc\'f6\'b8\'a6 \'b8\'ae\'c5\'cf\
		ex) \'c0\'a7\'c0\'c7 \'bf\'b9\'c1\'a6 \'b5\'ce\'b0\'b3\'bf\'a1 \'b4\'eb\'c7\'d1 \'b5\'a5\'c0\'cc\'c5\'cd \'b0\'b3\'bc\'f6\'b8\'a6 \'b8\'ae\'c5\'cf 	\
		ar.length : 3\
		xr. length : 5\
		\
		3) \'b9\'e8\'bf\'ad\'bf\'a1\'bc\'ad \'b0\'a2 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7 \'c1\'a2\'b1\'d9\
		=> \'b9\'e8\'bf\'ad\'c0\'cc\'b8\'a7[\'c0\'ce\'b5\'a6\'bd\'ba] : \'c0\'ce\'b5\'a6\'bd\'ba\'b4\'c2 0\'bf\'a1\'bc\'ad\'ba\'ce\'c5\'cd length - 1\'b1\'ee\'c1\'f6\
		=> \'c0\'cc \'b9\'fc\'c0\'a7 \'c0\'cc\'bf\'dc\'c0\'c7 \'c0\'ce\'b5\'a6\'bd\'ba\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'b8\'e9 \cf7 ArrayIndexOutOfBoundsException(Error)\cf0 \'c0\'cc \'b9\'df\'bb\'fd\
		ex) int [] ar = \{300,200,100\} => ar[3]\'c0\'bb \'c8\'a3\'c3\'e2\'c7\'cf\'b8\'e9 \cf7 ArrayIndexOutOfBoundsException(Error)\cf0 \'c0\'cc \'b9\'df\'bb\'fd\
		=> \'b9\'e8\'bf\'ad\'c0\'cc\'b8\'a7\'b8\'b8 \'b8\'b8\'b5\'e9\'b0\'ed \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'b4\'eb\'c0\'d4\'c7\'cf\'b0\'c5\'b3\'aa \'c5\'a9\'b1\'e2\'b8\'a6 \'b8\'b8\'b5\'e9\'c1\'f6 \'be\'ca\'c0\'ba \'bb\'f3\'c5\'c2\'bf\'a1\'bc\'ad .length\'b8\'a6 \'c8\'a3\'c3\'e2\'c7\'cf\'b8\'e9 \cf7 NullPointerException(Error)\cf0 \'c0\'cc \'b9\'df\'bb\'fd\
		ex) int [] ar: => ar.length\'b8\'a6 \'c8\'a3\'c3\'e2\'c7\'cf\'b8\'e9 \cf7 NullPointerException(Error)\cf0 \'c0\'cc \'b9\'df\'bb\'fd\
\
		4) \'b9\'e8\'bf\'ad\'c0\'ba \'c2\'fc\'c1\'b6\'c7\'fc\'c0\'d4\'b4\'cf\'b4\'d9.\
\
		4-1) \'b1\'e2\'ba\'bb\'c7\'fc : 1\'b0\'b3\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c0\'fa\'c0\'e5\'c7\'cf\'b1\'e2 \'c0\'a7\'c7\'d1 \'c0\'da\'b7\'e1\'c7\'fc(\'b0\'aa\'c0\'bb \'c0\'fa\'c0\'e5\'c7\'cf\'b4\'c2 \'c0\'da\'b7\'e1\'c7\'fc)\
			=> \'ba\'af\'bc\'f6\'b0\'a1 \'b5\'a5\'c0\'cc\'c5\'cd \'c0\'da\'c3\'bc\'b8\'a6 \'c0\'c7\'b9\'cc\
			=> boolean, byte, short, char, int, long, float, double\
		4-2) \'c2\'fc\'c1\'b6\'c7\'fc : 0\'b0\'b3 \'c0\'cc\'bb\'f3\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c0\'fa\'c0\'e5(\'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7 \'c2\'fc\'c1\'b6\'b8\'a6 \'c0\'fa\'c0\'e5\'c7\'cf\'b4\'c2 \'c0\'da\'b7\'e1\'c7\'fc)\
			=> \'b9\'e8\'bf\'ad(\'c0\'ce\'b5\'a6\'bd\'ba\'b8\'a6 \'c0\'cc\'bf\'eb)\'b0\'fa \'c5\'ac\'b7\'a1\'bd\'ba\'c0\'c7 \'b0\'b4\'c3\'bc(\'bc\'d3\'bc\'ba\'c0\'bb \'c0\'cc\'bf\'eb)\
			=> \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c1\'f7\'c1\'a2 \'b0\'a1\'b8\'a3\'c5\'b0\'c1\'f6 \'be\'ca\'b0\'ed \'bd\'c3\'c0\'db\'c0\'a7\'c4\'a1\'b8\'b8 \'b0\'a1\'b8\'a3\'c5\'b2\'b4\'d9.\
		(\'bb\'e7\'c1\'f8 \'c2\'fc\'c1\'b6)\
\
	\'bd\'c7\'bd\'c0)\
	\cf2 public\cf0  \cf2 class\cf0  OneArray \{\
	\cf2 public\cf0  \cf2 static\cf0  \cf2 void\cf0  main(String[] \cf3 args\cf0 ) \{\
		\cf4 //\'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c3\'b3\'c0\'bd\'ba\'ce\'c5\'cd \'b0\'a1\'c1\'f6\'b0\'ed \'b9\'e8\'bf\'ad\'c0\'bb \'bb\'fd\'bc\'ba\cf0 \
		\cf4 //\'b5\'a5\'c0\'cc\'c5\'cd 1\'b0\'b3\'c0\'c7 \'c0\'da\'b7\'e1\'c7\'fc [] \'c0\'cc\'b8\'a7 = \{\'b5\'a5\'c0\'cc\'c5\'cd\'b3\'aa\'bf\'ad\};\cf0 \
		\cf2 int\cf0  [] \cf3 ar\cf0  = \{30, 20, 40, 50\};\
		\
		\cf4 //\'b9\'e8\'bf\'ad\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd \'b0\'b3\'bc\'f6\'b8\'a6 \'c8\'ae\'c0\'ce \cf0 \
		\cf4 //\'b9\'e8\'bf\'ad\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd \'b0\'b3\'bc\'f6\'b4\'c2 length \'bc\'d3\'bc\'ba\'c0\'bb \'c0\'cc\'bf\'eb \cf0 \
		System.\cf5 out\cf0 .printf(\cf6 "ar\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd \'b0\'b9\'bc\'f6 : %d\\n"\cf0 , \cf3 ar\cf0 .\cf5 length\cf0 );\
		\
		\cf4 //\'b9\'e8\'bf\'ad\'c0\'c7 \'b5\'ce\'b9\'f8\'c2\'b0 \'bf\'e4\'bc\'d2\'b8\'a6 \'c3\'e2\'b7\'c2 \cf0 \
		\cf4 //\'b9\'e8\'bf\'ad\'c0\'bb \'b0\'a1\'c1\'f6\'b0\'ed \'bf\'e4\'bc\'d2\'b8\'a6 \'c3\'a3\'c0\'bb \'b6\'a7\'b4\'c2 [\'c0\'ce\'b5\'a6\'bd\'ba]\cf0 \
		\cf4 //\'c0\'ce\'b5\'a6\'bd\'ba\'b4\'c2 0~length-1\cf0 \
		System.\cf5 out\cf0 .printf(\cf6 "ar\'c0\'c7 2\'b9\'f8\'c2\'b0 \'b5\'a5\'c0\'cc\'c5\'cd : %d\\n"\cf0 , \cf3 ar\cf0 [1]);\
\
		\cf4 //\ul br\ulnone \'c0\'cc\'b6\'f3\'b4\'c2 \'b9\'e8\'bf\'ad\'c0\'cc\'b8\'a7\'c0\'bb \'bb\'fd\'bc\'ba\'c7\'d1 \'b0\'cd\'c0\'d4\'b4\'cf\'b4\'d9.\cf0 \
		\cf4 //=\'c0\'bb \'c7\'d1\'c0\'fb\'c0\'cc \'be\'f8\'b1\'e2 \'b6\'a7\'b9\'ae\'bf\'a1 \'bd\'c7\'c1\'a6 \'b5\'a5\'c0\'cc\'c5\'cd\'b4\'c2 \'bc\'d2\'c0\'af\'c7\'cf\'b0\'ed \'c0\'d6\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\cf0 \
		\cf4 //\'c0\'cc\'b7\'b1 \'b0\'e6\'bf\'ec\'bf\'a1 .\'c0\'bb \'bc\'d3\'bc\'ba\'c0\'bb \'c8\'a3\'c3\'e2\'c7\'cf\'b8\'e9 \'bf\'a1\'b7\'af(\'bd\'c7\'c7\'e0 \'be\'c8\'b5\'ca)\'b4\'c2 \'be\'c6\'b4\'cf\'b0\'ed \'bf\'b9\'bf\'dc(\'bd\'c7\'c7\'e0\'c0\'ba \'b5\'c7\'b4\'c2\'b5\'a5 \'b9\'ae\'c1\'a6 \'b9\'df\'bb\'fd)\'b0\'a1 \'b9\'df\'bb\'fd\cf0 \
		\cf4 //\'b4\'dc\'be\'f0(\'b0\'ad\'c1\'a6\'b7\'ce \'bf\'b9\'bf\'dc\'b8\'a6 \'b9\'df\'bb\'fd\'bd\'c3\'c5\'b0\'b4\'c2 \'b0\'cd)\
		//NullPointerException : \'c2\'fc\'c1\'b6\'c7\'fc\'c0\'cc \'b0\'a1\'b8\'ae\'c5\'b0\'b4\'c2 \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 \'be\'f8\'be\'ee\'bc\'ad \'b9\'df\'bb\'fd \cf0 \
		\cf2 int\cf0  [] \cf3 br\cf0  = \cf2 null\cf0 ;\
		\cf4 //\ul int\ulnone  [] \ul br\ulnone  = new \ul int\ulnone [4];	//4\'b0\'b3\'b8\'a6 \'c0\'fa\'c0\'e5\'c7\'d2 \'bc\'f6 \'c0\'d6\'b4\'c2 \'b9\'e8\'bf\'ad\'c0\'bb \'bb\'fd\'bc\'ba \cf0 \
		System.\cf5 out\cf0 .printf(\cf6 "br\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd \'b0\'b9\'bc\'f6 : %d\\n"\cf0 , \cf3 \ul \ulc3 br\cf0 \ulnone .\cf5 length\cf0 );\
\pard\pardeftab720\partightenfactor0
\cf4 		//ArrayIndexOutOfBoundsException \'b9\'df\'bb\'fd \cf0 \
		System.\cf5 out\cf0 .printf(\cf6 "br[4]\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd \'b0\'b9\'bc\'f6 : %d\\n"\cf0 , \cf3 br\cf0 [4]);\
		\}\
	\}\
\
	\'b0\'e1\'b0\'fa)\
	ar\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd \'b0\'b9\'bc\'f6 : 4\
	ar\'c0\'c7 2\'b9\'f8\'c2\'b0 \'b5\'a5\'c0\'cc\'c5\'cd : 20\
	\cf8 Exception in thread "main" \cf9 \ul \ulc9 java.lang.NullPointerException\cf0 \ulnone \
\pard\pardeftab720\partightenfactor0
\cf8 	at java0905.OneArray.main(\cf9 \ul OneArray.java:24\cf8 \ulnone )\
	\cf10 //br\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd \'b0\'b9\'bc\'f6 : 4\cf0 \
	\cf8 Exception in thread "main" \cf9 \ul java.lang.ArrayIndexOutOfBoundsException\cf8 \ulnone : 4\cf0 \
\cf8 	at java0905.OneArray.main(\cf9 \ul OneArray.java:27\cf8 \ulnone )\cf0 \
\
	2. \'b9\'e8\'bf\'ad\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd \'c0\'fc\'c3\'bc \'c1\'a2\'b1\'d9\
	=> \'b9\'e8\'bf\'ad\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd\'b4\'c2 \'c0\'cf\'b9\'dd \'b9\'dd\'ba\'b9\'b9\'ae\'c0\'bb \'c0\'cc\'bf\'eb\'c7\'d8\'bc\'ad \'bc\'f8\'bc\'ad\'b4\'eb\'b7\'ce \'c0\'fc\'c3\'bc\'b8\'a6 \'c1\'a2\'b1\'d9\'c7\'cf\'b4\'c2 \'b0\'cd\'c0\'cc \'b0\'a1\'b4\'c9\
	=> \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7 \'b8\'f0\'c0\'d3\'b5\'e9\'c0\'ba \'ba\'fc\'b8\'a5 \'bf\'ad\'b0\'c5(Fast Enumeration)\'b8\'a6 \'c0\'cc\'bf\'eb\'c7\'d8\'bc\'ad \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'bc\'f8\'bc\'ad\'b4\'eb\'b7\'ce \'c1\'a2\'b1\'d9\'c7\'cf\'b4\'c2 \'b0\'cd\'c0\'cc \'b0\'a1\'b4\'c9\
	=> \'b9\'e8\'bf\'ad, List, Set\'c0\'cc \'b0\'a1\'b4\'c9\
	=> \'c0\'cc\'b7\'af\'c7\'d1 \'b5\'a5\'c0\'cc\'c5\'cd\'b5\'e9\'c0\'ba lterable \'c0\'cc\'b6\'f3\'b0\'ed\'b5\'b5 \'c7\'d5\'b4\'cf\'b4\'d9.\
	=> \'ba\'fc\'b8\'a5 \'bf\'ad\'b0\'c5 \'bb\'e7\'bf\'eb \'b9\'fd\
	=> for(\'b5\'a5\'c0\'cc\'c5\'cd 1\'b0\'b3\'b8\'a6 \'c0\'fa\'c0\'e5\'c7\'d2 \'c0\'d3\'bd\'c3\'ba\'af\'bc\'f6 : \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'f0\'c0\'d3\'c0\'cc\'b8\'a7)\{\
		\'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'bc\'f8\'c8\'b8\'c7\'cf\'b8\'e9\'bc\'ad \'bc\'f6\'c7\'e0\'c7\'d2 \'b3\'bb\'bf\'eb\}\
	ex) String [] names = \{\'a1\'b0a\'a1\'b1, \'a1\'b0b\'a1\'b1, \'a1\'b0c\'a1\'b1\}\
		for(\'c0\'d3\'bd\'c3\'ba\'af\'bc\'f6 : \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7\'b8\'f0\'c0\'d3)\{\}\
		=> for(String temp : names)\{\}	\
\
	\'bd\'c7\'bd\'c0)\
	\cf2 public\cf0  \cf2 class\cf0  Lterator \{\
	\cf2 public\cf0  \cf2 static\cf0  \cf2 void\cf0  main(String[] \cf3 args\cf0 ) \{\
		\cf4 //\'b9\'e8\'bf\'ad \'b8\'b8\'b5\'e9\'b1\'e2 \cf0 \
		String [] \cf3 games\cf0  = \{\cf6 "LOL"\cf0 , \cf6 "StarCraft"\cf0 , \cf6 "Overwatch"\cf0 , \cf6 "BattleGround"\cf0 \};\
		\cf4 //\'b9\'e8\'bf\'ad\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd \'c0\'fc\'c3\'bc \'c1\'a2\'b1\'d9 - \'b5\'a5\'c0\'cc\'c5\'cd \'b0\'b9\'bc\'f6\'b8\'a6 \'b8\'ae\'c5\'cd\'b7\'b2\'b7\'ce \'c0\'db\'bc\'ba \cf0 \
		\cf4 //\'b8\'ae\'c5\'cd\'b7\'b2\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'cf\'b8\'e9 \'b5\'a5\'c0\'cc\'c5\'cd\'bf\'a1 \'ba\'af\'c8\'ad\'b0\'a1 \'bb\'fd\'b1\'e2\'b8\'e9 \'bc\'f6\'c1\'a4\'c0\'bb \'c7\'d8\'be\'df \'c7\'d5\'b4\'cf\'b4\'d9.\cf0 \
		\cf2 for\cf0 (\cf2 int\cf0  \cf3 i\cf0  = 0; \cf3 i\cf0 <4; \cf3 i\cf0 =\cf3 i\cf0 +1) \{\
			System.\cf5 out\cf0 .printf(\cf6 "%s\\n"\cf0 , \cf3 games\cf0 [\cf3 i\cf0 ]);\
		\}\
		System.\cf5 out\cf0 .printf(\cf6 "======================\\n"\cf0 );\
		\cf4 //\'b5\'a5\'c0\'cc\'c5\'cd \'b0\'b9\'bc\'f6\'b8\'a6 \'bc\'d3\'bc\'ba\'c0\'bb \'c0\'cc\'bf\'eb\'c7\'d8\'bc\'ad \'bc\'b3\'c1\'a4 \cf0 \
		\cf4 //\'b5\'a5\'c0\'cc\'c5\'cd\'bf\'a1 \'ba\'af\'c8\'ad\'b0\'a1 \'bb\'fd\'b0\'dc\'b5\'b5 \'c3\'e2\'b7\'c2\'ba\'ce\'ba\'d0\'c0\'bb \'bc\'f6\'c1\'a4\'c7\'d2 \'c7\'ca\'bf\'e4\'b0\'a1 \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9. \cf0 \
		\cf2 for\cf0 (\cf2 int\cf0  \cf3 i\cf0  = 0; \cf3 i\cf0 <\cf3 games\cf0 .\cf5 length\cf0 ; \cf3 i\cf0 =\cf3 i\cf0 +1) \{\
			System.\cf5 out\cf0 .printf(\cf6 "%s\\n"\cf0 , \cf3 games\cf0 [\cf3 i\cf0 ]);\
		\}\
		System.\cf5 out\cf0 .printf(\cf6 "======================\\n"\cf0 );\
		\cf4 //\'c0\'da\'c1\'d6 \'bb\'e7\'bf\'eb\'c7\'cf\'b4\'c2 \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 \'bc\'d3\'bc\'ba\'c0\'c7 \'c7\'fc\'c5\'c2\'b7\'ce \'c0\'d6\'b4\'d9\'b8\'e9 \'b8\'c5\'b9\'f8 \'c0\'cc\'b8\'a7\'c0\'bb \'c3\'a3\'be\'c6\'bc\'ad \'c1\'a2\'b1\'d9\'c7\'cf\'b4\'c2\'b0\'cd\'c0\'ba \'bd\'c3\'b0\'a3 \'b3\'b6\'ba\'f1\'b0\'a1 \'b5\'c9 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\cf0 \
		\cf4 //\'c0\'cc\'b7\'b1 \'b0\'e6\'bf\'ec\'bf\'a1\'b4\'c2 \'bc\'d3\'bc\'ba\'c0\'bb \'c0\'d3\'bd\'c3\'ba\'af\'bc\'f6\'bf\'a1 \'b4\'eb\'c0\'d4\'c7\'d8\'bc\'ad \'bb\'e7\'bf\'eb\'c7\'cf\'b8\'e9 \'c1\'a2\'b1\'d9 \'bc\'d3\'b5\'b5\'b0\'a1 \'c7\'e2\'bb\'f3 \'b5\'c9 \'bc\'f6 \'c0\'d6\'b4\'d9.\cf0 \
		\cf2 int\cf0  \cf3 len\cf0  = \cf3 games\cf0 .\cf5 length\cf0 ;\
		\cf2 for\cf0 (\cf2 int\cf0  \cf3 i\cf0  = 0; \cf3 i\cf0 <\cf3 len\cf0 ; \cf3 i\cf0 =\cf3 i\cf0 +1) \{\
			System.\cf5 out\cf0 .printf(\cf6 "%s\\n"\cf0 , \cf3 games\cf0 [\cf3 i\cf0 ]);\
		\}\
		System.\cf5 out\cf0 .printf(\cf6 "======================\\n"\cf0 );\
		\cf4 //\'ba\'fc\'b8\'a5 \'bf\'ad\'b0\'c5 \'bb\'e7\'bf\'eb \cf0 \
		\cf2 for\cf0 (String \cf3 game\cf0  : \cf3 games\cf0 ) \{\
			System.\cf5 out\cf0 .printf(\cf6 "%s\\n"\cf0 , \cf3 game\cf0 );\
		\}\
		System.\cf5 out\cf0 .printf(\cf6 "======================\\n"\cf0 );\
		\}\
	\}\
\
	\'b0\'e1\'b0\'fa)\
	LOL\
	StarCraft\
	Overwatch\
	BattleGround\
	======================\
	LOL\
	StarCraft\
	Overwatch\
	BattleGround\
	======================\
	LOL\
	StarCraft\
	Overwatch\
	BattleGround\
	======================\
	LOL\
	StarCraft\
	Overwatch\
	BattleGround\
	======================\
\
	3. MVC \'c6\'d0\'c5\'cf\
	=> \'b5\'a5\'c0\'cc\'c5\'cd\'bf\'a1 \'ba\'af\'b0\'e6\'c0\'cc \'b9\'df\'bb\'fd\'c7\'cf\'b4\'f5\'b6\'f3\'b5\'b5 \'c3\'e2\'b7\'c2\'c7\'cf\'b4\'c2 \'ba\'ce\'ba\'d0\'c0\'bb \'ba\'af\'b0\'e6\'c7\'cf\'c1\'f6 \'be\'ca\'b5\'b5\'b7\'cf \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5\'c0\'bb \'b8\'b8\'b5\'e5\'b4\'c2 \'b9\'e6\'bd\'c4\
	=> \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 Model\'c0\'cc\'b6\'f3\'b0\'ed \'c7\'cf\'b0\'ed \'c3\'e2\'b7\'c2\'c7\'cf\'b4\'c2 \'ba\'ce\'ba\'d0\'c0\'bb View \'b1\'d7\'b8\'ae\'b0\'ed \'c0\'cc\'b8\'a6 \'bf\'ac\'b0\'e1\'c7\'cf\'b4\'c2 \'ba\'ce\'ba\'d0\'c0\'bb Controller\'b6\'f3\'b0\'ed \'c7\'d8\'bc\'ad MVC\'b6\'f3\'b0\'ed \'c7\'d5\'b4\'cf\'b4\'d9\
	=> \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c8\'b0\'bf\'eb\'c7\'cf\'b4\'c2 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5\'bf\'a1\'bc\'ad \'b0\'a1\'c0\'e5 \'c1\'df\'bf\'e4\'c7\'cf\'b0\'ed \'c0\'da\'c1\'d6 \'be\'f0\'b1\'de\'b5\'c7\'b4\'c2 \'c6\'d0\'c5\'cf\'c0\'d4\'b4\'cf\'b4\'d9.\
\
**\'b4\'d9\'c2\'f7\'bf\'f8 \'b9\'e8\'bf\'ad\
\
=> \'b9\'e8\'bf\'ad\'c0\'c7 \'c2\'f7\'bf\'f8([])\'c0\'cc 2\'b0\'b3 \'c0\'cc\'bb\'f3\'c0\'ce \'b9\'e8\'bf\'ad\
=> 2\'c2\'f7\'bf\'f8 \'b9\'e8\'bf\'ad - \'b9\'e8\'bf\'ad\'c0\'c7 \'b9\'e8\'bf\'ad\
=> 3\'c2\'f7\'bf\'f8 \'b9\'e8\'bf\'ad - 2\'c2\'f7\'bf\'f8 \'b9\'e8\'bf\'ad\'c0\'c7 \'b9\'e8\'bf\'ad\
=> 2\'c2\'f7\'bf\'f8 \'b9\'e8\'bf\'ad\'c0\'bb \'c7\'e0\'b7\'c4(Matrix)\'c0\'cc\'b6\'f3\'b0\'ed \'c7\'cf\'b0\'ed \'c0\'cf\'b9\'dd \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'b3\'aa\'c5\'b8\'b3\'bb\'b4\'c2\'b5\'a5\'b4\'c2 \'b1\'c7\'c0\'e5\'c7\'cf\'c1\'f6 \'be\'ca\'b0\'ed \'c0\'cc\'b9\'cc\'c1\'f6\'b8\'a6 \'c7\'a5\'c7\'f6\'c7\'d2 \'b6\'a7 \'bb\'e7\'bf\'eb\
\
	1. 2\'c2\'f7\'bf\'f8 \'b9\'e8\'bf\'ad\'c0\'c7 \'bb\'fd\'bc\'ba\
		1) \'c3\'b3\'c0\'bd\'ba\'ce\'c5\'cd \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 \'c1\'b8\'c0\'e7\'c7\'cf\'b4\'c2 \'b0\'e6\'bf\'ec\
		=> \'b5\'a5\'c0\'cc\'c5\'cd 1\'b0\'b3\'c0\'c7 \'c0\'da\'b7\'e1\'c7\'fc [] [] \'b9\'e8\'bf\'ad\'c0\'cc\'b8\'a7 = \{\{\'b5\'a5\'c0\'cc\'c5\'cd \'b3\'aa\'bf\'ad\}, \{\'b5\'a5\'c0\'cc\'c5\'cd \'b3\'aa\'bf\'ad\} \'a1\'a6.\};\
\
		2) \'b9\'e8\'bf\'ad\'c0\'bb \'bb\'fd\'bc\'ba\'c7\'cf\'b0\'ed \'b3\'aa\'c1\'df\'bf\'a1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'b4\'eb\'c0\'d4\'c7\'cf\'b0\'ed\'c0\'da \'c7\'cf\'b4\'c2 \'b0\'e6\'bf\'ec\
		=> \'c7\'e0\'b0\'fa \'bf\'ad\'c0\'c7 \'c5\'a9\'b1\'e2\'b8\'a6 \'c3\'b3\'c0\'bd\'ba\'ce\'c5\'cd \'bb\'fd\'bc\'ba\
		 	\'b5\'a5\'c0\'cc\'c5\'cd 1\'b0\'b3\'c0\'c7 \'c0\'da\'b7\'e1\'c7\'fc [] [] \'b9\'e8\'bf\'ad\'c0\'cc\'b8\'a7 = new \'c0\'da\'b7\'e1\'c7\'fc[\'c7\'e0\'c0\'c7\'c5\'a9\'b1\'e2][\'bf\'ad\'c0\'c7\'c5\'a9\'b1\'e2];\
		 	\'b8\'f0\'b5\'e7 \'c7\'e0\'c0\'c7 \'bf\'ad\'c0\'c7 \'c5\'a9\'b1\'e2\'b8\'a6 \'b5\'bf\'c0\'cf\'c7\'cf\'b0\'d4 \'b8\'b8\'b5\'e9 \'b6\'a7 \'bb\'e7\'bf\'eb - \'c0\'cc\'b0\'e6\'bf\'ec\'b4\'c2 \'c0\'cf\'c2\'f7\'bf\'f8 \'b9\'e8\'bf\'ad\'b7\'ce \'b8\'b8\'b5\'e9\'be\'ee\'bc\'ad \'bb\'e7\'bf\'eb \'b0\'a1\'b4\'c9\
\
		=> \'c7\'e0\'c0\'c7 \'c5\'a9\'b1\'e2\'b8\'a6 \'b8\'b8\'b5\'e9\'b0\'ed \'b3\'aa\'c1\'df\'bf\'a1 \'bf\'ad\'c0\'c7 \'c5\'a9\'b1\'e2\'b8\'a6 \'bc\'b3\'c1\'a4\
		 	\'b5\'a5\'c0\'cc\'c5\'cd 1\'b0\'b3\'c0\'c7 \'c0\'da\'b7\'e1\'c7\'fc [] [] \'b9\'e8\'bf\'ad\'c0\'cc\'b8\'a7 = new \'c0\'da\'b7\'e1\'c7\'fc[\'c7\'e0\'c0\'c7\'c5\'a9\'b1\'e2][];\
		 	\'b9\'e8\'bf\'ad\'c0\'cc\'b8\'a7[\'c7\'e0\'c0\'ce\'b5\'a6\'bd\'ba] = new \'c0\'da\'b7\'e1\'c7\'fc[\'bf\'ad\'c0\'c7\'c5\'a9\'b1\'e2];\
		 	\'b9\'e8\'bf\'ad\'c0\'cc\'b8\'a7[\'c7\'e0\'c0\'ce\'b5\'a6\'bd\'ba] = new \'c0\'da\'b7\'e1\'c7\'fc[\'bf\'ad\'c0\'c7\'c5\'a9\'b1\'e2];\
		 	\'b0\'a2 \'c7\'e0\'c0\'c7 \'bf\'ad\'c0\'c7 \'c5\'a9\'b1\'e2\'b8\'a6 \'b4\'d9\'b8\'a3\'b0\'d4 \'b8\'b8\'b5\'e9 \'b6\'a7 \'bb\'e7\'bf\'eb\'c7\'cf\'b4\'c2 \'b9\'e6\'b9\'fd - \'c3\'df\'c3\'b5 \'c7\'cf\'c1\'f6\'b4\'c2 \'be\'ca\'c0\'bd\
		\
		3) 2\'c2\'f7\'bf\'f8 \'b9\'e8\'bf\'ad\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd \'c1\'a2\'b1\'d9\
		=> \'b9\'e8\'bf\'ad\'c0\'cc\'b8\'a7[\'c7\'e0\'c0\'ce\'b5\'a6\'bd\'ba][\'bf\'ad\'c0\'ce\'b5\'a6\'bd\'ba]\
\
	\'bd\'c7\'bd\'c0)\
	\cf2 public\cf0  \cf2 class\cf0  Matrix \{\
	\cf2 public\cf0  \cf2 static\cf0  \cf2 void\cf0  main(String[] \cf3 args\cf0 ) \{\
		\cf4 //2\'c7\'e0 3\'bf\'ad \'c2\'a5\'b8\'ae \'b9\'e8\'bf\'ad\'c0\'bb \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'b4\'eb\'c0\'d4\'c7\'d1 \'bb\'f3\'c5\'c2\'bf\'a1\'bc\'ad \'bb\'fd\'bc\'ba \cf0 \
		String [][] \cf3 korean\cf0  = \{\
				\{\cf6 "\'b1\'e8\'be\'be"\cf0 , \cf6 "\'c0\'cc\'be\'be"\cf0 , \cf6 "\'c1\'b6\'be\'be"\cf0 \}, \
				\{\cf6 "\'bc\'ad\'be\'be"\cf0 , \cf6 "\'c5\'b9\'be\'be"\cf0 , \cf6 "\'c8\'af\'be\'be"\cf0 \}\};\
		\cf4 //2\'c2\'f7\'bf\'f8 \'b9\'e8\'bf\'ad\'c0\'c7 \'b8\'f0\'b5\'e7 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c1\'a2\'b1\'d9 \cf0 \
		\cf4 //2\'b0\'b3\'c0\'c7 \'b9\'dd\'ba\'b9\'b9\'ae\'c0\'bb \'c0\'cc\'bf\'eb \cf0 \
		\cf2 for\cf0 (\cf2 int\cf0  \cf3 row\cf0 =0; \cf3 row\cf0 <2; \cf3 row\cf0 =\cf3 row\cf0 +1) \{\
			\cf2 for\cf0 (\cf2 int\cf0  \cf3 col\cf0 =0; \cf3 col\cf0 <3; \cf3 col\cf0 =\cf3 col\cf0 +1) \{\
				System.\cf5 out\cf0 .println(\cf3 korean\cf0 [\cf3 row\cf0 ][\cf3 col\cf0 ]);\
			\}\
		\}\
		System.\cf5 out\cf0 .printf(\cf6 "======================\\n"\cf0 );\
		\cf4 //\'c0\'a7\'c0\'c7 \'b9\'dd\'ba\'b9\'b9\'ae\'c0\'bb \'c7\'cf\'b3\'aa\'c0\'c7 \'b9\'dd\'ba\'b9\'b9\'ae\'c0\'b8\'b7\'ce \'c3\'b3\'b8\'ae \cf0 \
		\cf4 //\'c7\'e0\'c0\'ce\'b5\'a6\'bd\'ba\'b4\'c2 \'bf\'ad\'c0\'c7 \'b0\'b3\'bc\'f6\'c0\'cf \'b6\'a7\'b8\'b6\'b4\'d9 \'ba\'af\'b0\'e6 : \'c6\'af\'c1\'a4\'c7\'d1 \'b0\'b3\'bc\'f6\'b8\'b8\'c5\'ad \'c1\'f8\'c7\'e0\'c7\'cf\'b4\'c2 \'c0\'db\'be\'f7\'c0\'ba \'b8\'f2\'c0\'bb \'c0\'cc\'bf\'eb \cf0 \
		\cf4 //\'bf\'ad\'c0\'ce\'b5\'a6\'bd\'ba\'b4\'c2 0\'ba\'ce\'c5\'cd \'bf\'ad\'c0\'ce\'b5\'a6\'bd\'ba -1 \'b1\'ee\'c1\'f6\'b8\'a6 \'bc\'f8\'bc\'ad\'b4\'eb\'b7\'ce \'b9\'dd\'ba\'b9 \cf0 \
		\cf4 //\'c0\'cf\'c1\'a4\'c7\'d1 \'b9\'fc\'c0\'a7 \'b3\'bb\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'bc\'f8\'bc\'ad\'b4\'eb\'b7\'ce \'c7\'cf\'b5\'b5\'b7\'cf \'c7\'d2 \'b6\'a7\'b4\'c2 \'b3\'aa\'b8\'d3\'c1\'f6\'b8\'a6 \'c0\'cc\'bf\'eb \cf0 \
		\cf2 for\cf0 (\cf2 int\cf0  \cf3 i\cf0 =0; \cf3 i\cf0 <6; \cf3 i\cf0 =\cf3 i\cf0 +1) \{\
			System.\cf5 out\cf0 .println(\cf3 korean\cf0 [\cf3 i\cf0 /3][\cf3 i\cf0 %3]);\
		\}\
		System.\cf5 out\cf0 .printf(\cf6 "======================\\n"\cf0 );\
		\cf4 //\'c0\'cc\'c2\'f7\'bf\'f8 \'b9\'e8\'bf\'ad\'c0\'bb \'ba\'fc\'b8\'a5 \'bf\'ad\'b0\'c5\'b8\'a6 \'c0\'cc\'bf\'eb\'c7\'d8\'bc\'ad \'c1\'a2\'b1\'d9\'c7\'cf\'b4\'c2 \'b0\'e6\'bf\'ec 2\'b9\'f8 \'c7\'d8\'be\'df \'c7\'d5\'b4\'cf\'b4\'d9 \cf0 \
		\cf4 //\'c7\'d1 \'b9\'f8 \'c7\'d2 \'b6\'a7 \'b8\'b6\'b4\'d9 \'b9\'e8\'bf\'ad\'c0\'cc \'c7\'cf\'b3\'aa\'be\'bf \'b9\'fe\'b0\'dc\'c1\'fd\'b4\'cf\'b4\'d9. \cf0 \
		\cf2 for\cf0 (String [] \cf3 imsi\cf0  : \cf3 korean\cf0 )\{\
			\cf2 for\cf0 (String \cf3 temp\cf0  : \cf3 imsi\cf0 ) \{\
				System.\cf5 out\cf0 .printf(\cf6 "%s\\n"\cf0 , \cf3 temp\cf0 );\
			\}\
		\}\
	\}\
\}	\
	\'b0\'e1\'b0\'fa)\
	\'b1\'e8\'be\'be\
	\'c0\'cc\'be\'be\
	\'c1\'b6\'be\'be\
	\'bc\'ad\'be\'be\
	\'c5\'b9\'be\'be\
	\'c8\'af\'be\'be\
	======================\
	\'b1\'e8\'be\'be\
	\'c0\'cc\'be\'be\
	\'c1\'b6\'be\'be\
	\'bc\'ad\'be\'be\
	\'c5\'b9\'be\'be\
	\'c8\'af\'be\'be\
	\
	[2][3]\
	=> ar \uc0\u8212 > ar[0] \u8212 > ar[0][0] = 100\
		      		   ar[0][1] = 200\
				   ar[0][2] = 300\
		      ar[1] \uc0\u8212 > ar[1][0] = 100\
				   ar[1][1] = 300\
				   ar[1][2] = 100\
	int [] month =\{31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31\};\
\
	int [] month =\{0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31\};\
	\
	\'bd\'c7\'bd\'c0)\
	\cf2 public\cf0  \cf2 class\cf0  BasicAlgorithm \{\
	\
	\cf2 public\cf0  \cf2 static\cf0  \cf2 void\cf0  main(String[] \cf3 args\cf0 ) \{\
		\cf4 //\'b9\'e8\'bf\'ad \'bb\'fd\'bc\'ba \cf0 \
		\cf2 int\cf0  [] \cf3 ar\cf0  = \{30, 50, 20, 76, 88\};\
		\cf4 //\ul ar\ulnone \'b9\'e8\'bf\'ad\'bf\'a1\'bc\'ad 50\'c0\'cc\'bb\'f3\'c0\'ce \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7 \'b0\'b3\'bc\'f6, \'c7\'d5\'b0\'e8, \'c6\'f2\'b1\'d5\'c0\'bb \'b1\'b8\'c7\'d8\'bc\'ad \'c3\'e2\'b7\'c2\cf0 \
		\
		\cf4 //\'b0\'b3\'bc\'f6\'b8\'a6 \'b1\'b8\'c7\'d2 \'b6\'a7\'b4\'c2 \'b0\'b3\'bc\'f6\'b8\'a6 \'c0\'fa\'c0\'e5\'c7\'d2 \'ba\'af\'bc\'f6\'b8\'a6 \'b8\'b8\'b5\'e9\'b0\'ed \'be\'f3\'b8\'b6\'ba\'ce\'c5\'cd \'bd\'c3\'c0\'db\'c7\'d2\'c1\'f6 \'c3\'ca\'b1\'e2\'b0\'aa\'c0\'bb \'bc\'b3\'c1\'a4 \cf0 \
		\cf4 //\'b4\'eb\'ba\'ce\'ba\'d0\'c0\'c7 \'b0\'e6\'bf\'ec\'b4\'c2 0\'c0\'b8\'b7\'ce \'c3\'ca\'b1\'e2\'c8\'ad\'c7\'cf\'b0\'ed \'c1\'b6\'b0\'c7\'c0\'bb \'b8\'b8\'c1\'b7\'c7\'cf\'b4\'c2 \'b0\'e6\'bf\'ec \'b0\'b3\'bc\'f6\'b8\'a6 1\'c1\'f5\'b0\'a1 \'bd\'c3\'c5\'b0\'b8\'e9 \'b5\'cb\'b4\'cf\'b4\'d9. \cf0 \
		\cf2 int\cf0  \cf3 cnt\cf0  = 0;\
		\cf4 //\'c7\'d5\'b0\'e8\'b8\'a6 \'c0\'fa\'c0\'e5\'c7\'d2 \'ba\'af\'bc\'f6\'b8\'a6 \'bb\'fd\'bc\'ba\'c7\'d8\'bc\'ad \'c3\'b3\'c0\'bd \'b0\'a1\'c1\'f6\'b0\'ed \'c0\'d6\'c0\'bb \'b0\'aa\'c0\'b8\'b7\'ce \'c3\'ca\'b1\'e2\'c8\'ad\'c7\'d1 \'c8\'c4 \cf0 \
		\cf4 //\'c1\'b6\'b0\'c7\'c0\'bb \'b8\'b8\'c1\'b7\'c7\'d2 \'b6\'a7 \'c7\'d5\'b0\'e8\'b8\'a6 \'b1\'b8\'c7\'d2 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c7\'d5\'b0\'e8 \'ba\'af\'bc\'f6\'bf\'a1 \'b4\'f5\'c7\'d8\'c1\'d6\'b8\'e9 \'b5\'cb\'b4\'cf\'b4\'d9.\cf0 \
		\cf2 int\cf0  \cf3 sum\cf0  = 0;\
		\
		\cf4 //\'c3\'d6\'b4\'eb, \'c3\'d6\'bc\'d2\cf0 \
		\cf4 //\'c3\'d6\'b4\'eb\'b0\'aa : \'c3\'d6\'b4\'eb\'b0\'aa\'c0\'bb \'c0\'fa\'c0\'e5\'c7\'d2 \'ba\'af\'bc\'f6\'b8\'a6 \'bb\'fd\'bc\'ba\'c7\'cf\'b0\'ed \'b9\'e8\'bf\'ad\'c0\'c7 \'c3\'b9\'b9\'f8\'c2\'b0 \'b5\'a5\'c0\'cc\'c5\'cd \'b6\'c7\'b4\'c2 \cf0 \
		\cf4 //\'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7 \'b9\'fc\'c0\'a7 \'c1\'df\'bf\'a1\'bc\'ad \'be\'c6\'c1\'d6 \'c0\'db\'c0\'ba \'b0\'aa\'c0\'b8\'b7\'ce \'c3\'ca\'b1\'e2\'c8\'ad\'c7\'cf\'b0\'ed \'b9\'e8\'bf\'ad\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'bc\'f8\'c8\'b8\'c7\'cf\'b8\'e9\'bc\'ad \'c0\'da\'bd\'c5\'ba\'b8\'b4\'d9 \'b4\'f5 \'c5\'ab \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'b8\'b8\'b3\'aa\'b8\'e9\cf0 \
		\cf4 //\'b1\'d7 \'b0\'aa\'c0\'b8\'b7\'ce \'ba\'af\'b0\'e6\'c7\'cf\'b8\'e9 \'b5\'cb\'b4\'cf\'b4\'d9.\cf0 \
		\
		\cf4 //\'c3\'d6\'bc\'d2\'b0\'aa : \'c3\'d6\'bc\'d2\'b0\'aa\'c0\'bb \'c0\'fa\'c0\'e5\'c7\'d2 \'ba\'af\'bc\'f6\'b8\'a6 \'bb\'fd\'bc\'ba\'c7\'cf\'b0\'ed \'b9\'e8\'bf\'ad\'c0\'c7 \'c3\'b9\'b9\'f8\'c2\'b0 \'b5\'a5\'c0\'cc\'c5\'cd \'b6\'c7\'b4\'c2\cf0 \
		\cf4 //\'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7 \'b9\'fc\'c0\'a7 \'c1\'df\'bf\'a1\'bc\'ad \'be\'c6\'c1\'d6 \'c5\'ab \'b0\'aa\'c0\'b8\'b7\'ce \'c3\'ca\'b1\'e2\'c8\'ad\'c7\'cf\'b0\'ed \'b9\'e8\'bf\'ad\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'bc\'f8\'c8\'b8\'c7\'cf\'b8\'e9\'bc\'ad \'c0\'da\'bd\'c5\'ba\'b8\'b4\'d9 \'b4\'f5 \'c0\'db\'c0\'ba \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6\cf0 \
		\cf4 //\'b8\'b8\'b3\'aa\'b8\'e9 \'b1\'d7 \'b0\'aa\'c0\'b8\'b7\'ce \'ba\'af\'b0\'e6\'c7\'cf\'b8\'e9 \'b5\'cb\'b4\'cf\'b4\'d9. \cf0 \
		\
		\cf4 //\'c3\'d6\'b4\'eb\'b0\'aa\'b0\'fa \'c3\'d6\'bc\'d2\'b0\'aa\'c0\'bb \'c0\'fa\'c0\'e5\'c7\'d2 \'ba\'af\'bc\'f6 \cf0 \
		\cf2 int\cf0  \cf3 max\cf0  = \cf3 ar\cf0 [0];\
		\cf2 int\cf0  \cf3 min\cf0  = \cf3 ar\cf0 [0];\
		\
		\cf4 //\'b5\'a5\'c0\'cc\'c5\'cd \'bc\'f8\'c8\'b8 \cf0 \
		\cf2 for\cf0 (\cf2 int\cf0  \cf3 temp\cf0  : \cf3 ar\cf0 ) \{\
			\cf4 //\'b5\'a5\'c0\'cc\'c5\'cd\'bf\'cd \'c3\'d6\'b4\'eb\'b0\'aa\'c0\'bb \'ba\'f1\'b1\'b3\'c7\'d8\'bc\'ad \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 \'b4\'f5 \'c5\'a9\'b8\'e9 \'c3\'d6\'b4\'eb\'b0\'aa\'c0\'bb \'ba\'af\'b0\'e6\cf0 \
			\cf2 if\cf0 (\cf3 max\cf0  < \cf3 temp\cf0 ) \{\
				\cf3 max\cf0  = \cf3 temp\cf0 ;\
			\}\
			\cf4 //\'b5\'a5\'c0\'cc\'c5\'cd\'bf\'cd \'c3\'d6\'bc\'d2\'b0\'aa\'c0\'bb \'ba\'f1\'b1\'b3\'c7\'d8\'bc\'ad \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 \'b4\'f5 \'c0\'db\'c0\'b8\'b8\'e9 \'c3\'d6\'bc\'d2\'b0\'aa\'c0\'bb \'ba\'af\'b0\'e6 \cf0 \
			\cf2 if\cf0 (\cf3 min\cf0  > \cf3 temp\cf0 ) \{\
				\cf3 min\cf0  = \cf3 temp\cf0 ;\
			\}\
			\cf2 if\cf0 (\cf3 temp\cf0  >= 50) \{\
				\cf4 //\'b0\'b3\'bc\'f6 = \'b0\'b3\'bc\'f6 + 1\cf0 \
				\cf3 cnt\cf0  = \cf3 cnt\cf0  + 1;\
				\cf4 //\'c7\'d5\'b0\'e8 = \'c7\'d5\'b0\'e8 + \'c7\'d5\'c0\'bb \'b1\'b8\'c7\'d2 \'b5\'a5\'c0\'cc\'c5\'cd \cf0 \
				\cf3 sum\cf0  = \cf3 temp\cf0  + \cf3 sum\cf0 ;\
			\}\
		\}		\
		\cf4 //\'b5\'a5\'c0\'cc\'c5\'cd \'b0\'b3\'bc\'f6 \'c3\'e2\'b7\'c2\cf0 \
		System.\cf5 out\cf0 .printf(\cf6 "50\'c0\'cc\'bb\'f3\'c0\'ce \'b5\'a5\'c0\'cc\'c5\'cd \'b0\'b3\'bc\'f6 : %d\\n"\cf0 , \cf3 cnt\cf0 );\
		\cf4 //\'c7\'d5\'b0\'e8 \'c3\'e2\'b7\'c2 \cf0 \
		System.\cf5 out\cf0 .printf(\cf6 "50\'c0\'cc\'bb\'f3\'c0\'ce \'b5\'a5\'c0\'cc\'c5\'cd \'c7\'d5\'b0\'e8 : %d\\n"\cf0 , \cf3 sum\cf0 );\
		\cf4 //\'c3\'d6\'b4\'eb\'b0\'aa\'b0\'fa \'c3\'d6\'bc\'d2\'b0\'aa \'c3\'e2\'b7\'c2\cf0 \
		System.\cf5 out\cf0 .printf(\cf6 "\'c3\'d6\'b4\'eb\'b0\'aa : %d\\n"\cf0 , \cf3 max\cf0 );\
		System.\cf5 out\cf0 .printf(\cf6 "\'c3\'d6\'bc\'d2\'b0\'aa : %d\\n"\cf0 , \cf3 min\cf0 );\
		\cf4 //\'c6\'f2\'b1\'d5\'c0\'ba \'c7\'d1\'b9\'f8\'b8\'b8 \'b0\'e8\'bb\'ea\'c7\'cf\'b8\'e9 \'b5\'c7\'b1\'e2 \'b6\'a7\'b9\'ae\'bf\'a1 \'b9\'dd\'ba\'b9\'b9\'ae \'b9\'d9\'b1\'f9\'bf\'a1\'bc\'ad \'c3\'b3\'b8\'ae\'b8\'a6 \'c7\'d5\'b4\'cf\'b4\'d9.\cf0 \
		\cf4 //\'c6\'f2\'b1\'d5\'c0\'bb \'b1\'b8\'c7\'d2 \'b6\'a7\'b4\'c2 \'b3\'aa\'b4\'a9\'b1\'e2\'b8\'a6 \'c7\'cf\'b1\'e2 \'b6\'a7\'b9\'ae\'bf\'a1 \'bc\'d2\'bc\'f6\'b4\'c2 \'be\'ee\'b6\'bb\'b0\'d4 \'c7\'d2 \'b0\'cd\'c0\'ce\'c1\'f6 \'b0\'ed\'b9\'ce \cf0 \
		\cf4 //\'b3\'aa\'b4\'a9\'b1\'e2\'b8\'a6 \'c7\'d2 \'b6\'a7\'b4\'c2 \'b3\'aa\'b4\'a9\'b4\'c2 \'bc\'f6\'b0\'a1 0\'c0\'ce\'c1\'f6 \'c8\'ae\'c0\'ce\cf0 \
		\cf2 if\cf0 (\cf3 cnt\cf0 ==0) \{\
			System.\cf5 out\cf0 .printf(\cf6 "\'c1\'b6\'b0\'c7\'bf\'a1 \'b8\'c2\'b4\'c2 \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9.\\n"\cf0 );\
		\}\cf2 else\cf0  \{\
			\cf4 //\'bc\'d2\'bc\'f6 \'b5\'ce\'b9\'f8\'c2\'b0 \'c0\'da\'b8\'ae\'bf\'a1\'bc\'ad \'b9\'dd\'bf\'c3\'b8\'b2\'c7\'d8\'bc\'ad \'c3\'b9\'b9\'f8\'c2\'b0\'c0\'da\'b8\'ae\'b1\'ee\'c1\'f6\'b8\'b8 \'c3\'e2\'b7\'c2\cf0 \
			\cf4 //\'c1\'a4\'bc\'f6/\'c1\'a4\'bc\'f6\'b4\'c2 \'b0\'e1\'b0\'fa\'b0\'a1 \'c1\'a4\'bc\'f6\'b7\'ce \'b3\'aa\'bf\'c9\'b4\'cf\'b4\'d9.\cf0 \
			\cf4 //\'c1\'a4\'bc\'f6/\'c1\'a4\'bc\'f6\'c0\'c7 \'b0\'e1\'b0\'fa\'b8\'a6 \'bc\'d2\'bc\'f6\'b1\'ee\'c1\'f6 \'b1\'b8\'c7\'cf\'b0\'ed\'c0\'da \'c7\'cf\'b4\'c2 \'b0\'e6\'bf\'ec\'bf\'a1\'b4\'c2 \'c7\'cf\'b3\'aa\'c0\'c7 \'c1\'a4\'bc\'f6\'b8\'a6 \'bd\'c7\'bc\'f6\'b7\'ce \'b0\'ad\'c1\'a6 \'c7\'fc \'ba\'af\'c8\'af\'c7\'d8\'bc\'ad \'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\cf0 \
			\cf2 double\cf0  \cf3 average\cf0  = (\cf2 double\cf0 )\cf3 sum\cf0 /\cf3 cnt\cf0 ;\
			System.\cf5 out\cf0 .printf(\cf6 "50\'c0\'cc\'bb\'f3\'c0\'ce \'b5\'a5\'c0\'cc\'c5\'cd \'c6\'f2\'b1\'d5 : %.1f\\n"\cf0 , \cf3 average\cf0 );\
		\}\
		\
		\cf4 //60\'bf\'a1 \'b0\'a1\'c0\'e5 \'b0\'a1\'b1\'ee\'bf\'ee \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c1\'b6\'c8\'b8 \cf0 \
		\cf4 //\'be\'ee\'b6\'b2 \'bc\'fd\'c0\'da\'bf\'a1 \'b0\'a1\'c0\'e5 \'b0\'a1\'b1\'ee\'bf\'ee \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c1\'b6\'c8\'b8\'c7\'cf\'b0\'ed\'c0\'da \'c7\'cf\'b4\'c2 \'b0\'e6\'bf\'ec\'bf\'a1\'b4\'c2 \'bc\'fd\'c0\'da\'bf\'cd\'c0\'c7 \'c2\'f7\'c0\'cc\'b8\'a6 \'c3\'a3\'b0\'ed \'b1\'d7 \'c2\'f7\'c0\'cc\'b0\'a1 \'c3\'d6\'bc\'d2\'c0\'ce \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c3\'a3\'be\'c6\'be\'df \'c7\'d5\'b4\'cf\'b4\'d9.\cf0 \
		\cf4 //\'c3\'a3\'b4\'c2 \'b0\'cd\'c0\'ba \'c2\'f7\'c0\'cc\'c0\'c7 \'c3\'d6\'bc\'d2\'b8\'a6 \'c3\'a3\'b4\'c2 \'b0\'cd\'c0\'cc \'be\'c6\'b4\'cf\'b0\'ed \'c2\'f7\'c0\'cc\'b0\'a1 \'c3\'d6\'bc\'d2\'b0\'a1 \'b5\'c7\'b4\'c2 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'d4\'b4\'cf\'b4\'d9.\cf0 \
		\
		\cf2 int\cf0  \cf3 mindata\cf0  = \cf3 ar\cf0 [0]; \cf4 //\'b0\'a1\'c0\'e5 \'b0\'a1\'b1\'ee\'bf\'ee \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c0\'fa\'c0\'e5\cf0 \
		\cf2 int\cf0  \cf3 minvalue\cf0  = 999999999; \cf4 //60\'b0\'fa\'c0\'c7 \'c3\'d6\'bc\'d2 \'c2\'f7\'c0\'cc\'b8\'a6 \'c0\'fa\'c0\'e5\cf0 \
		\
		\cf2 for\cf0 (\cf2 int\cf0  \cf3 temp\cf0  : \cf3 ar\cf0 ) \{\
			\cf4 //60\'b0\'fa\'c0\'c7 \'c2\'f7\'c0\'cc\'b8\'a6 \'b1\'b8\'c7\'cf\'b1\'e2 \cf0 \
			\cf2 int\cf0  \cf3 cha\cf0  = 0;\
			\cf2 if\cf0 (\cf3 temp\cf0  >60) \{\
				\cf3 cha\cf0  = \cf3 temp\cf0 -60;\
			\}\cf2 else\cf0  \{\
				\cf3 cha\cf0  = 60 - \cf3 temp\cf0 ;\
			\}\
			\cf4 //\'c2\'f7\'c0\'cc\'b0\'a1 \'c3\'d6\'bc\'d2\'c0\'ce \'b5\'a5\'c0\'cc\'c5\'cd \'b1\'b8\'c7\'cf\'b1\'e2 \cf0 \
			\cf2 if\cf0 (\cf3 minvalue\cf0  > \cf3 cha\cf0 ) \{\
				\cf3 minvalue\cf0  = \cf3 cha\cf0 ;\
				\cf4 //\'c2\'f7\'c0\'cc\'b0\'a1 \'c3\'d6\'bc\'d2\'c0\'ce \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'b8\'b8\'b3\'aa\'b8\'e9 \'b1\'d7 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c0\'fa\'c0\'e5\'c7\'d8\'be\'df \'c7\'d5\'b4\'cf\'b4\'d9.\cf0 \
				\cf3 mindata\cf0  = \cf3 temp\cf0 ;\
			\}\
		\}\
		\cf4 //60\'bf\'a1 \'b0\'a1\'c0\'e5 \'b0\'a1\'b1\'ee\'bf\'ee \'b0\'aa \'c3\'e2\'b7\'c2 \cf0 \
		System.\cf5 out\cf0 .printf(\cf6 "60\'bf\'a1 \'b0\'a1\'c0\'e5 \'b0\'a1\'b1\'ee\'bf\'ee \'b5\'a5\'c0\'cc\'c5\'cd : %d \'c2\'f7\'c0\'cc:%d\\n"\cf0 , \cf3 mindata\cf0 , \cf3 minvalue\cf0 );\
	\}\
\}\
	\'b0\'e1\'b0\'fa)\
	50\'c0\'cc\'bb\'f3\'c0\'ce \'b5\'a5\'c0\'cc\'c5\'cd \'b0\'b3\'bc\'f6 : 3\
	50\'c0\'cc\'bb\'f3\'c0\'ce \'b5\'a5\'c0\'cc\'c5\'cd \'c7\'d5\'b0\'e8 : 214\
	\'c3\'d6\'b4\'eb\'b0\'aa : 88\
	\'c3\'d6\'bc\'d2\'b0\'aa : 20\
	50\'c0\'cc\'bb\'f3\'c0\'ce \'b5\'a5\'c0\'cc\'c5\'cd \'c6\'f2\'b1\'d5 : 71.3\
	60\'bf\'a1 \'b0\'a1\'c0\'e5 \'b0\'a1\'b1\'ee\'bf\'ee \'b5\'a5\'c0\'cc\'c5\'cd : 50 \'c2\'f7\'c0\'cc:10\
\
**\'c1\'a4\'b7\'c4(sort)\
\
=> \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'bc\'f8\'bc\'ad\'b4\'eb\'b7\'ce \'b3\'aa\'bf\'ad\
=> \'bf\'c0\'b8\'a7\'c2\'f7\'bc\'f8(Ascending) : \'c0\'db\'c0\'ba \'b0\'cd\'bf\'a1\'bc\'ad \'c5\'ab \'b0\'cd \'bc\'f8\'c0\'b8\'b7\'ce \'b9\'e8\'c4\'a1\
=> \'b3\'bb\'b8\'b2\'c2\'f7\'bc\'f8(Descending) : \'c5\'ab \'b0\'cd\'bf\'a1\'bc\'ad \'c0\'db\'c0\'ba \'b0\'cd \'bc\'f8\'c0\'b8\'b7\'ce \'b9\'e8\'c4\'a1\
=> \'c1\'a4\'b7\'c4 \'be\'cb\'b0\'ed\'b8\'ae\'c1\'f2\
	\
	=> \'b5\'a5\'c0\'cc\'c5\'cd \'b0\'b3\'bc\'f6 : n\
	1. Selection Sort(\'bc\'b1\'c5\'c3 \'c1\'a4\'b7\'c4) - \'c7\'d0\'bd\'c0\'bf\'eb\
	=> \'c3\'b9 \'b9\'f8\'c2\'b0 \'b5\'a5\'c0\'cc\'c5\'cd\'ba\'ce\'c5\'cd n-1\'b9\'f8\'c2\'b0 \'b5\'a5\'c0\'cc\'c5\'cd\'b1\'ee\'c1\'f6 \'c0\'da\'bd\'c5\'c0\'c7 \'b5\'da\'bf\'a1 \'c0\'d6\'b4\'c2 \'b8\'f0\'b5\'e7 \'b5\'a5\'c0\'cc\'c5\'cd\'bf\'cd \'ba\'f1\'b1\'b3\'c7\'d8\'bc\'ad \'c1\'a4\'b7\'c4\
	=> a>b, a>c : b\'bf\'cd c\'c0\'c7 \'c1\'df\'b0\'a3 \'b0\'fc\'b0\'e8\'b4\'c2 \'be\'cb\'c1\'f6 \'b8\'f8\'c7\'d1\'b4\'d9.\
	\'bd\'c7\'bd\'c0)\
	\cf2 public\cf0  \cf2 class\cf0  Sorting \{\
\
	\cf2 public\cf0  \cf2 static\cf0  \cf2 void\cf0  main(String[] \cf3 args\cf0 ) \{\
		\cf2 int\cf0  [] \cf3 ar\cf0  = \{80, 76, 99, 45, 72\};\
		\cf4 //\'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7 \'b0\'b3\'bc\'f6 \'c0\'fa\'c0\'e5\cf0 \
		\cf2 int\cf0  \cf3 len\cf0  = \cf3 ar\cf0 .\cf5 length\cf0 ;\
		\cf4 //\'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7 \'b0\'b3\'bc\'f6\'b0\'a1 n\'c0\'cc\'b6\'f3\'b8\'e9 n-1\'b9\'f8 \'bc\'f6\'c7\'e0 \cf0 \
		\cf2 for\cf0 (\cf2 int\cf0  \cf3 i\cf0 =0; \cf3 i\cf0 <\cf3 len\cf0 -1; \cf3 i\cf0 =\cf3 i\cf0 +1) \{\
			\cf4 //\'c8\'b8\'c0\'fc\'bc\'f6 + 1 \'b9\'f8\'c2\'b0 \'ba\'ce\'c5\'cd \'b8\'b6\'c1\'f6\'b8\'b7 \'b5\'a5\'c0\'cc\'c5\'cd \'b1\'ee\'c1\'f6 \'ba\'f1\'b1\'b3 \cf0 \
			\cf2 for\cf0 (\cf2 int\cf0  \cf3 j\cf0 =\cf3 i\cf0 +1; \cf3 j\cf0 <\cf3 len\cf0 ; \cf3 j\cf0 =\cf3 j\cf0 +1) \{\
				\cf4 //\'be\'d5\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 \'b5\'da\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd\'ba\'b8\'b4\'d9 \'c5\'a9\'b4\'d9\'b8\'e9 swap\
				//\'b3\'bb\'b8\'b2\'c2\'f7\'bc\'f8\'c0\'bb \'c7\'cf\'b0\'ed \'bd\'cd\'c0\'b8\'b8\'e9 if(\ul ar\ulnone [i] < \ul ar\ulnone [j]) \{ \'b7\'ce \'b5\'ee\'c8\'a3\'b8\'b8 \'b9\'d9\'b2\'d9\'be\'ee\'c1\'d6\'b8\'e9\'b5\'ca. \cf0 \
				\cf2 if\cf0 (\cf3 ar\cf0 [\cf3 i\cf0 ] > \cf3 ar\cf0 [\cf3 j\cf0 ]) \{\
					\cf2 int\cf0  \cf3 temp\cf0  = \cf3 ar\cf0 [\cf3 i\cf0 ];\
					\cf3 ar\cf0 [\cf3 i\cf0 ] = \cf3 ar\cf0 [\cf3 j\cf0 ];\
					\cf3 ar\cf0 [\cf3 j\cf0 ] = \cf3 temp\cf0 ;\
				\}\
			\}\
		\}\
		\cf4 //\'b5\'a5\'c0\'cc\'c5\'cd \'c3\'e2\'b7\'c2 \cf0 \
		\cf2 for\cf0 (\cf2 int\cf0  \cf3 temp\cf0  : \cf3 ar\cf0 ) \{\
			System.\cf5 out\cf0 .printf(\cf6 "%d\\t"\cf0 , \cf3 temp\cf0 );\
		\}\
	\}\
\
\}\
	\'b0\'e1\'b0\'fa)\
	45	72	76	80	99	\
	\
	2. Bubble Sort(\'c0\'ce\'c1\'a2 \'c1\'a4\'b7\'c4) \
	=> \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7 \'b0\'b3\'bc\'f6 : n\
	=> \'c3\'d6\'b4\'eb n-1 \'c8\'b8\'c0\'fc\'b5\'bf\'be\'c8 \'c0\'da\'bd\'c5\'c0\'c7 \'b9\'d9\'b7\'ce \'b5\'da\'bf\'a1 \'c0\'d6\'b4\'c2 \'b5\'a5\'c0\'cc\'c5\'cd\'bf\'cd \'ba\'f1\'b1\'b3\'c7\'d8\'bc\'ad \'c1\'a4\'b7\'c4\'c7\'cf\'b4\'c2 \'b9\'e6\'bd\'c4\
	=> \'b0\'a1\'c0\'e5 \'c5\'ab \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'b8\'c7 \'b5\'da\'b7\'ce \'ba\'b8\'b3\'bb\'b4\'c2 \'b9\'e6\'bd\'c4\
	=> 1\'c8\'b8\'c0\'fc \'b5\'bf\'be\'c8 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7 \'b1\'b3\'c3\'bc\'b0\'a1 \'c7\'d1\'b9\'f8\'b5\'b5 \'be\'f8\'c0\'b8\'b8\'e9 \'c1\'a4\'b7\'c4\'c0\'cc \'b5\'c8 \'b0\'cd\'c0\'cc\'b9\'c7\'b7\'ce \'ba\'f1\'b1\'b3 \'c1\'df\'c1\'f6 \'b0\'a1\'b4\'c9\
	=> a>b>c : b\'bf\'cd c\'bf\'cd\'c0\'c7 \'c1\'df\'b0\'a3 \'b0\'fc\'b0\'e8\'b5\'b5 \'be\'cb\'bc\'f6\'b0\'a1 \'c0\'d6\'b4\'d9.\
\
	=> \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 n \'c0\'cf \'b6\'a7\
	n-1 \'c8\'b8\'c0\'fc\'b5\'bf\'be\'c8\
	0 ~ n-2\'b9\'f8\'c2\'b0\'b1\'ee\'c1\'f6 \'c0\'da\'bd\'c5\'c0\'c7 \'b9\'d9\'b7\'ce \'b5\'da\'bf\'a1 \'c0\'d6\'b4\'c2 \'b5\'a5\'c0\'cc\'c5\'cd\'bf\'cd \'ba\'f1\'b1\'b3\
	0 ~ n-3\'b9\'f8\'c2\'b0\'b1\'ee\'c1\'f6 \'c0\'da\'bd\'c5\'c0\'c7 \'b9\'d9\'b7\'ce \'b5\'da\'bf\'a1 \'c0\'d6\'b4\'c2 \'b5\'a5\'c0\'cc\'c5\'cd\'bf\'cd \'ba\'f1\'b1\'b3\
	\'a1\'a6	\
\
	\'bd\'c7\'bd\'c0)\
	\cf2 public\cf0  \cf2 class\cf0  Sorting \{\
\
	\cf2 public\cf0  \cf2 static\cf0  \cf2 void\cf0  main(String[] \cf3 args\cf0 ) \{\
		\cf2 int\cf0  [] \cf3 ar\cf0  = \{80, 76, 99, 45, 72\};\
		\cf4 //\'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7 \'b0\'b3\'bc\'f6 \'c0\'fa\'c0\'e5\cf0 \
		\cf2 int\cf0  \cf3 len\cf0  = \cf3 ar\cf0 .\cf5 length\cf0 ;\
		\cf4 //Bubble \'c1\'a4\'b7\'c4 \cf0 \
		\cf4 //\'c3\'d6\'b4\'eb n-1 \'c8\'b8\'c0\'fc, 0 - 3\cf0 \
		\cf2 for\cf0 (\cf2 int\cf0  \cf3 i\cf0 =0; \cf3 i\cf0 <\cf3 len\cf0 -1; \cf3 i\cf0 =\cf3 i\cf0 +1) \{\
			\cf4 //\'b5\'a5\'c0\'cc\'c5\'cd \'b1\'b3\'c3\'bc\'b0\'a1 \'c0\'d6\'be\'fa\'b4\'c2\'c1\'f6 \'c8\'ae\'c0\'ce\'c7\'d2 \'ba\'af\'bc\'f6 \cf0 \
			\cf2 int\cf0  \cf3 flag\cf0  = 0;\
			\cf4 //\'c3\'b9\'b9\'f8\'c2\'b0\'ba\'ce\'c5\'cd \'b8\'b6\'c1\'f6\'b8\'b7 \'b5\'a5\'c0\'cc\'c5\'cd \'c0\'cc\'c0\'fc\'b1\'ee\'c1\'f6 \cf0 \
			\cf2 for\cf0 (\cf2 int\cf0  \cf3 j\cf0 =0; \cf3 j\cf0 <\cf3 len\cf0 -1-\cf3 i\cf0 ; \cf3 j\cf0 =\cf3 j\cf0 +1) \{\
				\cf4 //\'c0\'da\'bd\'c5\'c0\'c7 \'b5\'da\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd\'bf\'cd \'ba\'f1\'b1\'b3\'c7\'d8\'bc\'ad \'c1\'a4\'b7\'c4 \cf0 \
				\cf2 if\cf0 (\cf3 ar\cf0 [\cf3 j\cf0 ] > \cf3 ar\cf0 [\cf3 j\cf0 +1]) \{\
					\cf2 int\cf0  \cf3 temp\cf0  = \cf3 ar\cf0 [\cf3 j\cf0 ];\
					\cf3 ar\cf0 [\cf3 j\cf0 ] = \cf3 ar\cf0 [\cf3 j\cf0 +1];\
					\cf3 ar\cf0 [\cf3 j\cf0 +1] = \cf3 temp\cf0 ;\
					\cf4 //\'b5\'a5\'c0\'cc\'c5\'cd \'b1\'b3\'c3\'bc\'b0\'a1 \'c0\'d6\'be\'fa\'b4\'d9\'b4\'c2 \'b0\'cd\'c0\'bb \'c7\'a5\'bd\'c3 \cf0 \
					\cf3 flag\cf0  = 1;\
				\}\
			\}\
			\cf4 //1\'c8\'b8\'c0\'fc \'b5\'bf\'be\'c8 \'b5\'a5\'c0\'cc\'c5\'cd \'b1\'b3\'c3\'bc\'b0\'a1 \'be\'f8\'be\'fa\'c0\'b8\'b8\'e9 \'ba\'f1\'b1\'b3 \'c1\'be\'b7\'e1 \cf0 \
			\cf2 if\cf0 (\cf3 flag\cf0 ==0) \{\
				\cf2 break\cf0 ;\
			\}\
		\}\
		\cf4 //\'b5\'a5\'c0\'cc\'c5\'cd \'c3\'e2\'b7\'c2 \cf0 \
		\cf2 for\cf0 (\cf2 int\cf0  \cf3 temp\cf0  : \cf3 ar\cf0 ) \{\
			System.\cf5 out\cf0 .printf(\cf6 "%d\\t"\cf0 , \cf3 temp\cf0 );\
		\}\
	\}\
\
\}\
	\'b0\'e1\'b0\'fa)\
	45	72	76	80	99\
	\
	3. Insertion Sort(\'bb\'f0\'c0\'d4 \'c1\'a4\'b7\'c4)\
	\cf11 **4. Quick Sort\cf0 \
\
**\'b0\'cb\'bb\'f6(Search)\
\
	1. \'bc\'f8\'c2\'f7 \'b0\'cb\'bb\'f6\
	=> \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 \'c1\'a4\'b7\'c4\'b5\'c7\'c1\'f6 \'be\'ca\'c0\'ba \'b0\'e6\'bf\'ec\'bf\'a1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'b8\'c7 \'be\'d5\'bf\'a1\'bc\'ad\'ba\'ce\'c5\'cd \'bc\'f8\'bc\'ad\'b4\'eb\'b7\'ce \'b0\'cb\'bb\'f6\
	=> \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 \'be\'f8\'b4\'d9\'b4\'c2 \'bb\'e7\'bd\'c7\'c0\'bb \'be\'cb\'b0\'d4\'b5\'c7\'b4\'c2\'b5\'a5\'b4\'c2 \'b5\'a5\'c0\'cc\'c5\'cd \'c0\'fc\'c3\'bc\'b8\'a6 \'b4\'d9 \'ba\'f1\'b1\'b3\'c7\'d8\'ba\'c1\'be\'df \'be\'d0\'b4\'cf\'b4\'d9.\
\
	2. \'c1\'a6\'be\'ee \'b0\'cb\'bb\'f6\
	=> \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 \'c1\'a4\'b7\'c4\'b5\'c8 \'b0\'e6\'bf\'ec\'bf\'a1 \'bb\'e7\'bf\'eb\
		1) binary search(\'c0\'cc\'ba\'d0 \'b0\'cb\'bb\'f6)\
		=> \'c1\'df\'be\'d3\'b0\'aa\'b0\'fa \'ba\'f1\'b1\'b3\'c7\'d8\'bc\'ad \'c0\'db\'c0\'b8\'b8\'e9 \'bf\'de\'c2\'ca \'c5\'a9\'b8\'e9 \'bf\'c0\'b8\'a5\'c2\'ca\'bf\'a1 \'b4\'d9\'bd\'c3 \'c0\'cc\'ba\'d0 \'b0\'cb\'bb\'f6\'c0\'bb \'bc\'f6\'c7\'e0\
\
		10 20 30 40 50 60 70\
		=>50\'c0\'bb \'b0\'cb\'bb\'f6\
		7\'b0\'b3\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd \'c1\'df \'b0\'a1\'bf\'ee\'b5\'a5 \'b0\'aa\'c0\'cc 4\'b9\'f8\'c2\'b0 \'b5\'a5\'c0\'cc\'c5\'cd\'bf\'cd \'ba\'f1\'b1\'b3\
		50\'c0\'cc 40\'ba\'b8\'b4\'d9 \'c5\'a9\'b9\'c7\'b7\'ce \'bf\'c0\'b8\'a5\'c2\'ca \'b5\'a5\'c0\'cc\'c5\'cd\'b5\'e9\'c0\'bb \'b0\'a1\'c1\'f6\'b0\'ed \'b4\'d9\'bd\'c3 \'ba\'f1\'b1\'b3\
		\'bf\'c0\'b8\'a5\'c2\'ca\'bf\'a1\'b4\'c2 3\'b0\'b3\'b0\'a1 \'c0\'d6\'c0\'b8\'b9\'c7\'b7\'ce \'b0\'a1\'bf\'ee\'b5\'a5 \'b0\'aa\'c0\'ce 60\'b0\'fa \'ba\'f1\'b1\'b3\
		60\'ba\'b8\'b4\'d9\'b4\'c2 \'c0\'db\'c0\'b8\'b4\'cf\'b1\'ee \'bf\'de\'c2\'ca\'bf\'a1 \'c0\'d6\'b4\'c2 50\'b0\'fa \'ba\'f1\'b1\'b3\
\
		2) \'c7\'c7\'ba\'b8\'b3\'aa\'c4\'a1 \'b0\'cb\'bb\'f6 - \'b1\'dd\'c0\'b6\'c2\'ca\'bf\'a1 \'c3\'eb\'be\'f7\'c7\'d2 \'b6\'a7 \'c7\'ca\'bc\'f6\
		=> \'c7\'c7\'ba\'b8\'b3\'aa\'c4\'a1 \'bc\'f6\'bf\'ad\'c0\'bb \'c0\'cc\'bf\'eb\
		=> \'c7\'c7\'ba\'b8\'b3\'aa\'c4\'a1 \'bc\'f6\'bf\'ad\
		\'c3\'b9\'b9\'f8\'c2\'b0\'bf\'cd \'b5\'ce\'b9\'f8\'c2\'b0 \'b5\'a5\'c0\'cc\'c5\'cd\'b4\'c2 1\
		\'bc\'bc\'b9\'f8\'c2\'b0 \'b5\'a5\'c0\'cc\'c5\'cd\'ba\'ce\'c5\'cd\'b4\'c2 \'c0\'cc\'c0\'fc \'b5\'a5\'c0\'cc\'c5\'cd 2\'b0\'b3\'c0\'c7 \'c7\'d5\
\
		1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89 \'a1\'a6.\
		\
		\'bd\'c7\'bd\'c0)\
		\cf2 public\cf0  \cf2 class\cf0  Fibonacci \{\
\
		\cf2 public\cf0  \cf2 static\cf0  \cf2 void\cf0  main(String[] \cf3 args\cf0 ) \{\
		\cf4 //\'c0\'d4\'b7\'c2\'b9\'de\'c0\'ba \'bc\'fd\'c0\'da \'b9\'f8\'c2\'b0 \'c7\'c7\'ba\'b8\'b3\'aa\'c4\'a1 \'bc\'f6\'bf\'ad\'c0\'c7 \'b0\'aa \'b1\'b8\'c7\'cf\'b1\'e2\cf0 \
		\
		\cf4 //\'c0\'d4\'b7\'c2\'b9\'de\'c0\'bb\'b0\'cd\'c0\'bb \'b8\'b8\'b5\'e9\'b1\'e2\cf0 \
		Scanner \cf3 sc\cf0  = \cf2 new\cf0  Scanner(System.\cf5 in\cf0 );\
		System.\cf5 out\cf0 .printf(\cf6 "\'c1\'a4\'bc\'f6\'b8\'a6 \'c0\'d4\'b7\'c2\'c7\'cf\'bc\'bc\'bf\'e4 :"\cf0 );\
		\cf2 int\cf0  \cf3 su\cf0  = \cf3 sc\cf0 .nextInt();\
	\
		\cf4 //\'b1\'b8\'c7\'d2 \'bc\'f6\'bf\'ad\'c0\'c7 2\'b9\'f8\'c2\'b0 \'c0\'cc\'c0\'fc \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c0\'fa\'c0\'e5\'c7\'d2 \'ba\'af\'bc\'f6 \cf0 \
		\cf2 int\cf0  \cf3 n1\cf0  = 1;\
		\cf4 //\'b1\'b8\'c7\'d2 \'bc\'f6\'bf\'ad\'c0\'c7 1\'b9\'f8\'c2\'b0 \'c0\'cc\'c0\'fc \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c0\'fa\'c0\'e5\'c7\'d2 \'ba\'af\'bc\'f6 \cf0 \
		\cf2 int\cf0  \cf3 n2\cf0  = 1;\
		\cf4 //\'c7\'c7\'ba\'b8\'b3\'aa\'c4\'a1 \'bc\'f6\'bf\'ad\'c0\'c7 \'b0\'aa\'c0\'bb \'c0\'fa\'c0\'e5\'c7\'d2 \'ba\'af\'bc\'f6\cf0 \
		\cf2 int\cf0  \cf3 fibo\cf0  = 1;\
		\cf2 for\cf0 (\cf2 int\cf0  \cf3 i\cf0 =3; \cf3 i\cf0 <=\cf3 su\cf0 ; \cf3 i\cf0 =\cf3 i\cf0 +1) \{\
			\cf3 fibo\cf0  = \cf3 n1\cf0  + \cf3 n2\cf0 ;\
			\cf3 n1\cf0  = \cf3 n2\cf0 ;\
			\cf3 n2\cf0  = \cf3 fibo\cf0 ;\
		\}\
		System.\cf5 out\cf0 .printf(\cf6 "%d\'b9\'f8\'c2\'b0 \'c7\'c7\'ba\'b8\'b3\'aa\'c4\'a1 \'bc\'f6\'bf\'ad\'c0\'c7 \'b0\'aa : %d\\n"\cf0 , \cf3 su\cf0 ,\cf3 fibo\cf0 );\
		\cf3 sc\cf0 .close();\
	\}\
\}\
		\'b0\'e1\'b0\'fa)\
		\'c1\'a4\'bc\'f6\'b8\'a6 \'c0\'d4\'b7\'c2\'c7\'cf\'bc\'bc\'bf\'e4 :\cf12 7\cf0 \
		7\'b9\'f8\'c2\'b0 \'c7\'c7\'ba\'b8\'b3\'aa\'c4\'a1 \'bc\'f6\'bf\'ad\'c0\'c7 \'b0\'aa : 13\
\
		3) \'ba\'b8\'b0\'a3 \'b0\'cb\'bb\'f6\
\
		\'b0\'cb\'bb\'f6\'b0\'aa - \'c3\'d6\'bc\'d2\'b0\'aa / \'c3\'d6\'b4\'eb\'b0\'aa - \'c3\'d6\'bc\'d2\'b0\'aa \'b8\'a6 \'b0\'e8\'bb\'ea\'c7\'d8\'bc\'ad \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'b0\'cb\'bb\'f6\
		\
		60\'c0\'bb \'b0\'cb\'bb\'f6 60-10/70-10 : 5/6 * 7(\'b5\'a5\'c0\'cc\'c5\'cd\'b0\'b9\'bc\'f6) : \'b0\'e8\'bb\'ea\'c7\'d8\'bc\'ad \'b1\'d7 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'b0\'cb\'bb\'f6\
\
		A - Z => Z\'b8\'a6 \'b0\'cb\'bb\'f6\
		Z - A / Z - A * 26\'b9\'f8\'c2\'b0\'b8\'a6 \'b0\'cb\'bb\'f6\
\
		4) binary tree search(2\'c1\'f8 \'c6\'ae\'b8\'ae \'b0\'cb\'bb\'f6)\
		=> \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 tree \'b1\'b8\'c1\'b6\'b7\'ce \'c1\'a4\'b7\'c4\'c7\'d8\'bc\'ad \'b0\'cb\'bb\'f6\
		=> \'c6\'c4\'c0\'cf \'bd\'c3\'bd\'ba\'c5\'db\'bf\'a1\'bc\'ad \'bb\'e7\'bf\'eb\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
}